{"config":{"lang":["ru"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\u0412\u0435\u0431-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u00ab\u0418\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u041f\u043e\u043c\u043e\u0433\u0430\u0442\u043e\u0440\u00bb (eebook)\ud83d\udcb9 \u0418\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u041f\u043e\u043c\u043e\u0433\u0430\u0442\u043e\u0440","text":"<p>\u0412\u0430\u0448 \u043f\u0435\u0440\u0441\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442 \u0434\u043b\u044f \u0443\u0447\u0451\u0442\u0430 \u043f\u043e\u0440\u0442\u0444\u0435\u043b\u0435\u0439, \u0430\u043d\u0430\u043b\u0438\u0437\u0430 \u0434\u043e\u0445\u043e\u0434\u043d\u043e\u0441\u0442\u0438 \u0438 \u043f\u043b\u0430\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0432\u044b\u043f\u043b\u0430\u0442.</p> \u041d\u0430\u0447\u0430\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u041f\u043e\u0440\u0442\u0444\u0435\u043b\u0438 \u0438 \u0430\u043a\u0442\u0438\u0432\u044b<p>\u0421\u043e\u0437\u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u0438 \u0432\u0435\u0434\u0438\u0442\u0435 \u043f\u043e\u0440\u0442\u0444\u0435\u043b\u0438 \u0441 \u0430\u043a\u0446\u0438\u044f\u043c\u0438, \u043e\u0431\u043b\u0438\u0433\u0430\u0446\u0438\u044f\u043c\u0438, \u0432\u0430\u043b\u044e\u0442\u043e\u0439 \u0438 \u043a\u0440\u0438\u043f\u0442\u043e\u0432\u0430\u043b\u044e\u0442\u043e\u0439.</p> \u0410\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0430 \u0438 \u043c\u0435\u0442\u0440\u0438\u043a\u0438<p>\u0421\u043b\u0435\u0434\u0438\u0442\u0435 \u0437\u0430 \u0434\u043e\u0445\u043e\u0434\u043d\u043e\u0441\u0442\u044c\u044e, \u0432\u043e\u043b\u0430\u0442\u0438\u043b\u044c\u043d\u043e\u0441\u0442\u044c\u044e \u0438 \u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u0439\u0442\u0435 \u0441 \u0438\u043d\u0434\u0435\u043a\u0441\u0430\u043c\u0438.</p> \u041a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044c \u0432\u044b\u043f\u043b\u0430\u0442<p>\u0414\u0438\u0432\u0438\u0434\u0435\u043d\u0434\u044b, \u043a\u0443\u043f\u043e\u043d\u044b, \u043f\u043e\u0433\u0430\u0448\u0435\u043d\u0438\u044f \u2014 \u0432\u0441\u0451 \u0432 \u043e\u0434\u043d\u043e\u043c \u043c\u0435\u0441\u0442\u0435.</p> \u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u044c<p>\u0428\u0438\u0444\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445, \u0437\u0430\u0449\u0438\u0442\u0430 \u043e\u0442 XSS, CSRF \u0438 SQL-\u0438\u043d\u044a\u0435\u043a\u0446\u0438\u0439.</p> \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435<p>\u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438 \u0438 \u0442\u0438\u043a\u0435\u0442\u0430\u043c\u0438, \u043c\u043e\u0434\u0435\u0440\u0430\u0446\u0438\u044f \u043a\u043e\u043d\u0442\u0435\u043d\u0442\u0430.</p> \u0418\u043d\u0444\u0440\u0430\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430<p>Docker, CI/CD, \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, \u043c\u043e\u043d\u0438\u0442\u043e\u0440\u0438\u043d\u0433 \u0438 \u043c\u0430\u0441\u0448\u0442\u0430\u0431\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435.</p> Pet-\u043f\u0440\u043e\u0435\u043a\u0442 (1\u20132 \u043c\u0435\u0441\u044f\u0446\u0430)<p>MVP \u0434\u043b\u044f \u043e\u0434\u043d\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0431\u0430\u0437\u043e\u0432\u0430\u044f \u0430\u043d\u0430\u043b\u0438\u0442\u0438\u043a\u0430, CRUD \u043f\u043e \u0430\u043a\u0442\u0438\u0432\u0430\u043c \u0438 \u0441\u0434\u0435\u043b\u043a\u0430\u043c.</p> \u041f\u0440\u043e\u0434\u0443\u043a\u0442 \u0434\u043b\u044f \u043f\u043e\u0440\u0442\u0444\u043e\u043b\u0438\u043e (2\u20133 \u043c\u0435\u0441\u044f\u0446\u0430)<p>\u041c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0440\u0435\u0436\u0438\u043c, \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f, \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f, UX-\u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441.</p> SaaS-\u043f\u0438\u043b\u043e\u0442 (3\u20136 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)<p>\u041c\u043e\u043d\u0435\u0442\u0438\u0437\u0430\u0446\u0438\u044f, \u0438\u043c\u043f\u043e\u0440\u0442/\u044d\u043a\u0441\u043f\u043e\u0440\u0442 \u0441\u0434\u0435\u043b\u043e\u043a, \u043a\u0430\u043b\u0435\u043d\u0434\u0430\u0440\u044c \u0432\u044b\u043f\u043b\u0430\u0442, CI/CD, \u043c\u043e\u043d\u0438\u0442\u043e\u0440\u0438\u043d\u0433.</p> \u041c\u0430\u0441\u0448\u0442\u0430\u0431\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 (6\u201312 \u043c\u0435\u0441\u044f\u0446\u0435\u0432)<p>\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u0438 \u0441 API \u0431\u0440\u043e\u043a\u0435\u0440\u043e\u0432, \u0441\u043e\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u043c\u043e\u0431\u0438\u043b\u044c\u043d\u0430\u044f \u0432\u0435\u0440\u0441\u0438\u044f (PWA/React Native).</p>  Python / FastAPI  React / Tailwind  PostgreSQL / Alembic  Docker / CI/CD  Render / AWS / Fly.io <p>\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a: \u0421\u0442\u0430\u0440\u0446\u0435\u0432 \u0412\u0430\u0434\u0438\u043c \u0421\u0435\u0440\u0433\u0435\u0435\u0432\u0438\u0447 \u2014 GitHub</p>"},{"location":"LICENCE/","title":"\u041b\u0438\u0446\u0435\u043d\u0437\u0438\u044f","text":"<p>MIT License</p> <p>Copyright (c) 2025</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p> <p> <sub>Built with \u2764\ufe0f by Startsev Vadim</sub> </p>"},{"location":"changelog/","title":"\u0418\u0441\u0442\u043e\u0440\u0438\u044f \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439","text":""},{"location":"changelog/#changelog","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file. Dates are displayed in UTC.</p> <p>Generated by <code>auto-changelog</code>.</p>"},{"location":"changelog/#unreleased","title":"Unreleased","text":"<ul> <li>tests(services): add unit-tests for user-service <code>#11</code></li> <li>tests(uow): add unit-tests for uow <code>#10</code></li> <li>tests(unit): add unit-tests for domain-model and repository <code>#9</code></li> <li>feat(repo, uow, services): add serivces, uow, repo, hasher and more for users... <code>#8</code></li> <li>feat(orm-models): update orm-models with domain-model User <code>#7</code></li> <li>feat(database): add migrations in project (alembic) <code>#6</code></li> <li>tests(vault): add unit-tests for vault-client <code>#4</code></li> <li>feat(domain): add new attrib and methods for User, add intefrace for PasswordHasher <code>#5</code></li> <li>feat(logging): add log-system in project (console-variant) <code>#3</code></li> <li>Feat/vault <code>#1</code></li> <li>docs: bugfix (not found mkdocs-strings files), add new styles and formatting documentation <code>89f0aac</code></li> <li>doc: add documentation for project eebook-users <code>7f7e160</code></li> <li>docs(mkdocs): update site-compiling <code>3ed1a9c</code></li> </ul>"},{"location":"api/python/bootstrap/","title":"Application Bootstrap","text":"<p>\u041c\u043e\u0434\u0443\u043b\u044c <code>bootstrap.py</code> \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0443 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043f\u0440\u0438 \u0441\u0442\u0430\u0440\u0442\u0435. \u041e\u043d \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u0443\u044e \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0443 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438, \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0445 \u0442\u0430\u0431\u043b\u0438\u0446.</p>"},{"location":"api/python/bootstrap/#_1","title":"\u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438","text":""},{"location":"api/python/bootstrap/#bootstrap-settings","title":"<code>bootstrap() -&gt; Settings</code>","text":"<p>\u041e\u0441\u043d\u043e\u0432\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.</p> <p>\u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f: 1. \u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f 2. \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043a \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 3. \u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0432\u0441\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b</p> <p>\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442: - <code>Settings</code>: \u0417\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f</p> <p>\u0418\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f: - <code>ConfigurationError</code>: \u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u043e\u0448\u0438\u0431\u043a\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 - <code>DatabaseError</code>: \u041f\u0440\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430\u0445 \u0441 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0435\u0439 \u0411\u0414</p>"},{"location":"api/python/bootstrap/#create_all_tables-none","title":"<code>create_all_tables() -&gt; None</code>","text":"<p>\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0432\u0441\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0432 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 SQLAlchemy.</p> <p>\u0418\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f: - <code>DatabaseError</code>: \u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u043e\u0448\u0438\u0431\u043a\u0438 \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u0442\u0430\u0431\u043b\u0438\u0446</p>"},{"location":"api/python/bootstrap/#_2","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f","text":"<pre><code>from fastapi import FastAPI\nfrom src.bootstrap import bootstrap\n\napp = FastAPI()\n\n@app.on_event(\"startup\")\nasync def startup_event():\n    settings = await bootstrap()\n    # \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\n</code></pre>"},{"location":"api/python/bootstrap/#fastapi","title":"\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 FastAPI","text":"<p>\u041c\u043e\u0434\u0443\u043b\u044c \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d \u0434\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u0440\u0438 \u0441\u0442\u0430\u0440\u0442\u0435 FastAPI-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f:</p> <pre><code>from fastapi import FastAPI\nfrom src.bootstrap import bootstrap\n\napp = FastAPI()\n\n@app.on_event(\"startup\")\nasync def startup_event():\n    await bootstrap()\n</code></pre>"},{"location":"api/python/bootstrap/#_3","title":"\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438","text":"<ul> <li>\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u0430\u044f \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f: \u0412\u0441\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u044e\u0442\u0441\u044f \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e</li> <li>\u0426\u0435\u043d\u0442\u0440\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430: \u0412\u0441\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u044e\u0442\u0441\u044f \u0432 \u043e\u0434\u043d\u043e\u043c \u043c\u0435\u0441\u0442\u0435</li> <li>\u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u044c: \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a \u0438 \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u0430 \u0432\u0441\u0435\u0445 \u044d\u0442\u0430\u043f\u0430\u0445</li> <li>\u0413\u0438\u0431\u043a\u043e\u0441\u0442\u044c: \u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043b\u0435\u0433\u043a\u043e \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0442\u044c \u043d\u043e\u0432\u044b\u0435 \u044d\u0442\u0430\u043f\u044b \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438</li> </ul>"},{"location":"api/python/bootstrap/#_4","title":"\u0422\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f","text":"<ul> <li>\u0417\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f</li> <li>\u0414\u043e\u0441\u0442\u0443\u043f \u043a \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445</li> <li>\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 SQLAlchemy</li> </ul>"},{"location":"api/python/adapters/factory/","title":"\u0424\u0430\u0431\u0440\u0438\u043a\u0438 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0435\u0432","text":"<p>\u041c\u043e\u0434\u0443\u043b\u044c <code>factory</code> \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043a\u043b\u0430\u0441\u0441\u044b-\u0444\u0430\u0431\u0440\u0438\u043a\u0438 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0435\u0432 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u041e\u0441\u043d\u043e\u0432\u043d\u0430\u044f \u0446\u0435\u043b\u044c - \u0438\u043d\u043a\u0430\u043f\u0441\u0443\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043b\u043e\u0433\u0438\u043a\u0443 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0435\u0432 \u0438 \u0438\u0445 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439, \u0447\u0442\u043e \u0443\u043f\u0440\u043e\u0449\u0430\u0435\u0442 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0436\u0438\u0437\u043d\u0435\u043d\u043d\u044b\u043c \u0446\u0438\u043a\u043b\u043e\u043c \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0438 \u0432\u043d\u0435\u0434\u0440\u0435\u043d\u0438\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439.</p>"},{"location":"api/python/adapters/factory/#api","title":"\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f API","text":""},{"location":"api/python/adapters/factory/#src.adapters.factory.ABCUsersRepositoryFactory","title":"<code>ABCUsersRepositoryFactory</code>","text":"<p>               Bases: <code>ABC</code></p> <p>\u0410\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u0430\u044f \u0444\u0430\u0431\u0440\u0438\u043a\u0430 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.</p> Source code in <code>src/adapters/factory.py</code> <pre><code>class ABCUsersRepositoryFactory(abc.ABC):\n    \"\"\"\u0410\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u0430\u044f \u0444\u0430\u0431\u0440\u0438\u043a\u0430 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.\"\"\"\n\n    @abc.abstractmethod\n    def create(self, session: AsyncSession) -&gt; ABCUsersRepository:\n        \"\"\"\u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.\"\"\"\n        raise NotImplementedError\n</code></pre>"},{"location":"api/python/adapters/factory/#src.adapters.factory.ABCUsersRepositoryFactory.create","title":"<code>create(session)</code>  <code>abstractmethod</code>","text":"<p>\u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.</p> Source code in <code>src/adapters/factory.py</code> <pre><code>@abc.abstractmethod\ndef create(self, session: AsyncSession) -&gt; ABCUsersRepository:\n    \"\"\"\u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.\"\"\"\n    raise NotImplementedError\n</code></pre>"},{"location":"api/python/adapters/factory/#src.adapters.factory.SQLAlchemyUsersRepositoryFactory","title":"<code>SQLAlchemyUsersRepositoryFactory</code>","text":"<p>               Bases: <code>ABCUsersRepositoryFactory</code></p> Source code in <code>src/adapters/factory.py</code> <pre><code>class SQLAlchemyUsersRepositoryFactory(ABCUsersRepositoryFactory):\n    def __init__(self, hasher: IPasswordHasher):\n        self._hasher = hasher\n\n    def create(self, session: AsyncSession) -&gt; SQLAlchemyUsersRepository:\n        return SQLAlchemyUsersRepository(session, self._hasher)\n</code></pre>"},{"location":"api/python/adapters/factory/#_2","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f","text":"<pre><code>from sqlalchemy.ext.asyncio import create_async_engine, AsyncSession\nfrom src.adapters.factory import SQLAlchemyUsersRepositoryFactory\nfrom src.adapters.hasher import BcryptPasswordHasher\n\n# \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439\nhasher = BcryptPasswordHasher()\nengine = create_async_engine(\"postgresql+asyncpg://user:password@localhost/db\")\n\n# \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f\nasync with AsyncSession(engine) as session:\n    factory = SQLAlchemyUsersRepositoryFactory(hasher=hasher)\n    repository = factory.create(session=session)\n\n    # \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f\n    user = await repository.get_user_by_email(\"user@example.com\")\n</code></pre>"},{"location":"api/python/adapters/interfaces/","title":"\u0418\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b \u0430\u0434\u0430\u043f\u0442\u0435\u0440\u043e\u0432","text":"<p>\u041c\u043e\u0434\u0443\u043b\u044c <code>interfaces</code> \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u044b (\u043a\u043e\u043d\u0442\u0440\u0430\u043a\u0442\u044b) \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0432\u043d\u0435\u0448\u043d\u0438\u043c\u0438 \u0441\u0435\u0440\u0432\u0438\u0441\u0430\u043c\u0438. \u042d\u0442\u0438 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u044e\u0442 \u0433\u0438\u0431\u043a\u043e\u0441\u0442\u044c \u043f\u0440\u0438 \u0438\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u0438 \u0441 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u043c\u0438 \u0441\u0435\u0440\u0432\u0438\u0441\u0430\u043c\u0438 \u0438 \u0443\u043f\u0440\u043e\u0449\u0430\u044e\u0442 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435.</p>"},{"location":"api/python/adapters/interfaces/#isecretsprovider","title":"ISecretsProvider","text":"<p>\u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430\u043c\u0438 \u0441\u0435\u043a\u0440\u0435\u0442\u043e\u0432. \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0439 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0434\u043b\u044f \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0433\u043e \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u043a\u043e\u043d\u0444\u0438\u0434\u0435\u043d\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u043c \u0434\u0430\u043d\u043d\u044b\u043c.</p>"},{"location":"api/python/adapters/interfaces/#_2","title":"\u041a\u043e\u0433\u0434\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c","text":"<ul> <li>\u0414\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u043c\u0438 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430\u043c\u0438 \u0441\u0435\u043a\u0440\u0435\u0442\u043e\u0432 (HashiCorp Vault, AWS Secrets Manager \u0438 \u0442.\u0434.)</li> <li>\u041f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u0438\u0437\u043e\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043b\u043e\u0433\u0438\u043a\u0443 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0441\u0435\u043a\u0440\u0435\u0442\u0430\u043c\u0438 \u043e\u0442 \u043e\u0441\u0442\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043a\u043e\u0434\u0430</li> <li>\u0414\u043b\u044f \u0443\u043f\u0440\u043e\u0449\u0435\u043d\u0438\u044f \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u043e\u0432</li> </ul>"},{"location":"api/python/adapters/interfaces/#_3","title":"\u0414\u0435\u0442\u0430\u043b\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438","text":"<p>               Bases: <code>Protocol</code></p> <p>\u041a\u043e\u043d\u0442\u0440\u0430\u043a\u0442 \u0434\u043b\u044f \u043b\u044e\u0431\u043e\u0433\u043e \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430 \u0441\u0435\u043a\u0440\u0435\u0442\u043e\u0432.</p> Source code in <code>src/adapters/interfaces.py</code> <pre><code>class ISecretsProvider(Protocol):\n    \"\"\"\u041a\u043e\u043d\u0442\u0440\u0430\u043a\u0442 \u0434\u043b\u044f \u043b\u044e\u0431\u043e\u0433\u043e \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430 \u0441\u0435\u043a\u0440\u0435\u0442\u043e\u0432.\"\"\"\n\n    async def get_secret(self, path: str, key: str | None = None) -&gt; dict[str, Any]:\n        \"\"\"\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u0435\u043a\u0440\u0435\u0442\u0430 \u043f\u043e \u043f\u0443\u0442\u0438 \u0438 \u043a\u043b\u044e\u0447\u0443.\n\n        Args:\n            path: \u041f\u0443\u0442\u044c \u043a \u0441\u0435\u043a\u0440\u0435\u0442\u0443 \u0432 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435\n            key: \u041a\u043b\u044e\u0447 \u0441\u0435\u043a\u0440\u0435\u0442\u0430 (\u043e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e)\n\n        Returns:\n            \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u0435\u043a\u0440\u0435\u0442\u0430 \u0438\u043b\u0438 None, \u0435\u0441\u043b\u0438 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e\n\n        \"\"\"\n        ...\n</code></pre>"},{"location":"api/python/adapters/interfaces/#src.adapters.interfaces.ISecretsProvider.get_secret","title":"<code>get_secret(path: str, key: str | None = None) -&gt; dict[str, Any]</code>  <code>async</code>","text":"<p>\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u0435\u043a\u0440\u0435\u0442\u0430 \u043f\u043e \u043f\u0443\u0442\u0438 \u0438 \u043a\u043b\u044e\u0447\u0443.</p> <p>Parameters:</p> Name Type Description Default <code>path</code> <code>str</code> <p>\u041f\u0443\u0442\u044c \u043a \u0441\u0435\u043a\u0440\u0435\u0442\u0443 \u0432 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435</p> required <code>key</code> <code>str | None</code> <p>\u041a\u043b\u044e\u0447 \u0441\u0435\u043a\u0440\u0435\u0442\u0430 (\u043e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e)</p> <code>None</code> <p>Returns:</p> Type Description <code>dict[str, Any]</code> <p>\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u0435\u043a\u0440\u0435\u0442\u0430 \u0438\u043b\u0438 None, \u0435\u0441\u043b\u0438 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e</p> Source code in <code>src/adapters/interfaces.py</code> <pre><code>async def get_secret(self, path: str, key: str | None = None) -&gt; dict[str, Any]:\n    \"\"\"\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u0435\u043a\u0440\u0435\u0442\u0430 \u043f\u043e \u043f\u0443\u0442\u0438 \u0438 \u043a\u043b\u044e\u0447\u0443.\n\n    Args:\n        path: \u041f\u0443\u0442\u044c \u043a \u0441\u0435\u043a\u0440\u0435\u0442\u0443 \u0432 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435\n        key: \u041a\u043b\u044e\u0447 \u0441\u0435\u043a\u0440\u0435\u0442\u0430 (\u043e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e)\n\n    Returns:\n        \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u0435\u043a\u0440\u0435\u0442\u0430 \u0438\u043b\u0438 None, \u0435\u0441\u043b\u0438 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e\n\n    \"\"\"\n    ...\n</code></pre>"},{"location":"api/python/adapters/interfaces/#ipasswordhasher","title":"IPasswordHasher","text":"<p>\u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b \u0434\u043b\u044f \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0433\u043e \u0445\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043f\u0430\u0440\u043e\u043b\u0435\u0439. \u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u044b \u0445\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f.</p>"},{"location":"api/python/adapters/interfaces/#_4","title":"\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438","text":"<ul> <li>\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u043e\u0432 \u0445\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f</li> <li>\u0415\u0434\u0438\u043d\u0430\u044f \u0442\u043e\u0447\u043a\u0430 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u044c\u044e \u043f\u0430\u0440\u043e\u043b\u0435\u0439</li> <li>\u041f\u0440\u043e\u0441\u0442\u0430\u044f \u0438\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u043c\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u0430\u043c\u0438 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438</li> </ul>"},{"location":"api/python/adapters/interfaces/#_5","title":"\u0414\u0435\u0442\u0430\u043b\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438","text":"<p>               Bases: <code>Protocol</code></p> <p>\u041a\u043e\u043d\u0442\u0440\u0430\u043a\u0442 \u0434\u043b\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0433\u043e \u0445\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043f\u0430\u0440\u043e\u043b\u044f\u043c\u0438.</p> Source code in <code>src/adapters/interfaces.py</code> <pre><code>class IPasswordHasher(Protocol):\n    \"\"\"\u041a\u043e\u043d\u0442\u0440\u0430\u043a\u0442 \u0434\u043b\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0441\u043e\u0431\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0433\u043e \u0445\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043f\u0430\u0440\u043e\u043b\u044f\u043c\u0438.\"\"\"\n\n    def verify_password(self, password: str, hashed_password: str) -&gt; bool:\n        \"\"\"\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c \u0441 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u043c.\n\n        Args:\n            password: \u0412\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c\n            hashed_password: \u0417\u0430\u0445\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c\n\n        Returns:\n            True, \u0435\u0441\u043b\u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u0435\u0442, False \u0432 \u0438\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435\n\n        \"\"\"\n        ...\n\n    def hash_password(self, password: str) -&gt; str:\n        \"\"\"\u0417\u0430\u0445\u044d\u0448\u0438\u0440\u0432\u0430\u0442\u044c \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c \u0438 \u0432\u0435\u0440\u043d\u0443\u0442\u044c \u0435\u0433\u043e \u0445\u044d\u0448.\n\n        Args:\n            password: \u041f\u0430\u0440\u043e\u043b\u044c, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0437\u0430\u0445\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u0442\u044c\n\n        Returns:\n            \u0425\u044d\u0448 \u043f\u0430\u0440\u043e\u043b\u044f.\n\n        \"\"\"\n        ...\n</code></pre>"},{"location":"api/python/adapters/interfaces/#src.adapters.interfaces.IPasswordHasher.hash_password","title":"<code>hash_password(password: str) -&gt; str</code>","text":"<p>\u0417\u0430\u0445\u044d\u0448\u0438\u0440\u0432\u0430\u0442\u044c \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c \u0438 \u0432\u0435\u0440\u043d\u0443\u0442\u044c \u0435\u0433\u043e \u0445\u044d\u0448.</p> <p>Parameters:</p> Name Type Description Default <code>password</code> <code>str</code> <p>\u041f\u0430\u0440\u043e\u043b\u044c, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0437\u0430\u0445\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u0442\u044c</p> required <p>Returns:</p> Type Description <code>str</code> <p>\u0425\u044d\u0448 \u043f\u0430\u0440\u043e\u043b\u044f.</p> Source code in <code>src/adapters/interfaces.py</code> <pre><code>def hash_password(self, password: str) -&gt; str:\n    \"\"\"\u0417\u0430\u0445\u044d\u0448\u0438\u0440\u0432\u0430\u0442\u044c \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c \u0438 \u0432\u0435\u0440\u043d\u0443\u0442\u044c \u0435\u0433\u043e \u0445\u044d\u0448.\n\n    Args:\n        password: \u041f\u0430\u0440\u043e\u043b\u044c, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0437\u0430\u0445\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u0442\u044c\n\n    Returns:\n        \u0425\u044d\u0448 \u043f\u0430\u0440\u043e\u043b\u044f.\n\n    \"\"\"\n    ...\n</code></pre>"},{"location":"api/python/adapters/interfaces/#src.adapters.interfaces.IPasswordHasher.verify_password","title":"<code>verify_password(password: str, hashed_password: str) -&gt; bool</code>","text":"<p>\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c \u0441 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u043c.</p> <p>Parameters:</p> Name Type Description Default <code>password</code> <code>str</code> <p>\u0412\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c</p> required <code>hashed_password</code> <code>str</code> <p>\u0417\u0430\u0445\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c</p> required <p>Returns:</p> Type Description <code>bool</code> <p>True, \u0435\u0441\u043b\u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u0435\u0442, False \u0432 \u0438\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435</p> Source code in <code>src/adapters/interfaces.py</code> <pre><code>def verify_password(self, password: str, hashed_password: str) -&gt; bool:\n    \"\"\"\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c \u0441 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u043c.\n\n    Args:\n        password: \u0412\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c\n        hashed_password: \u0417\u0430\u0445\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c\n\n    Returns:\n        True, \u0435\u0441\u043b\u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u0435\u0442, False \u0432 \u0438\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435\n\n    \"\"\"\n    ...\n</code></pre>"},{"location":"api/python/adapters/interfaces/#_6","title":"\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f","text":""},{"location":"api/python/adapters/interfaces/#isecretsprovider_1","title":"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 ISecretsProvider","text":"<pre><code>from src.adapters.interfaces import ISecretsProvider\n\nclass VaultSecretsProvider(ISecretsProvider):\n    async def get_secret(self, path: str, key: str | None = None) -&gt; dict[str, Any]:\n        # \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u0435\u043a\u0440\u0435\u0442\u0430\n        ...\n</code></pre>"},{"location":"api/python/adapters/interfaces/#ipasswordhasher_1","title":"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 IPasswordHasher","text":"<pre><code>from src.adapters.interfaces import IPasswordHasher\n\nclass BcryptPasswordHasher(IPasswordHasher):\n    def verify_password(self, password: str, hashed_password: str) -&gt; bool:\n        # \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043f\u0430\u0440\u043e\u043b\u044f\n        ...\n\n    def hash_password(self, password: str) -&gt; str:\n        # \u0425\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u0440\u043e\u043b\u044f\n        ...\n</code></pre>"},{"location":"api/python/adapters/interfaces/#_7","title":"\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438","text":"<ol> <li>\u0412\u0441\u0435\u0433\u0434\u0430 \u0432\u043d\u0435\u0434\u0440\u044f\u0439\u0442\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u0447\u0435\u0440\u0435\u0437 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440</li> <li>\u0421\u043e\u0437\u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u043c\u043e\u043a-\u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f</li> <li>\u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0439\u0442\u0435 \u043e\u0448\u0438\u0431\u043a\u0438 \u043d\u0430 \u0443\u0440\u043e\u0432\u043d\u0435 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438</li> <li>\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u043d\u0435\u043e\u0447\u0435\u0432\u0438\u0434\u043d\u044b\u0435 \u0430\u0441\u043f\u0435\u043a\u0442\u044b \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438</li> </ol>"},{"location":"api/python/adapters/orm/","title":"ORM \u041c\u043e\u0434\u0443\u043b\u044c","text":"<p>\u041c\u043e\u0434\u0443\u043b\u044c <code>orm</code> \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u043d\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u043d\u0430 \u0440\u0435\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u0443\u044e \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c SQLAlchemy. \u0421\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0442\u0430\u0431\u043b\u0438\u0446 \u0438 \u0438\u0445 \u0441\u0432\u044f\u0437\u0435\u0439, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043c\u0430\u043f\u043f\u0438\u043d\u0433\u0430.</p>"},{"location":"api/python/adapters/orm/#_1","title":"\u0422\u0430\u0431\u043b\u0438\u0446\u044b \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445","text":""},{"location":"api/python/adapters/orm/#users","title":"\u0422\u0430\u0431\u043b\u0438\u0446\u0430 <code>users</code>","text":"<p>\u041e\u0441\u043d\u043e\u0432\u043d\u0430\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0434\u043e\u043c\u0435\u043d\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 <code>User</code>.</p>"},{"location":"api/python/adapters/orm/#_2","title":"\u0424\u0443\u043d\u043a\u0446\u0438\u0438 \u043c\u0430\u043f\u043f\u0438\u043d\u0433\u0430","text":""},{"location":"api/python/adapters/orm/#start_mappers","title":"<code>start_mappers()</code>","text":"<p>\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u043c\u0430\u043f\u043f\u0438\u043d\u0433 \u043c\u0435\u0436\u0434\u0443 \u043a\u043b\u0430\u0441\u0441\u0430\u043c\u0438 Python \u0438 \u0442\u0430\u0431\u043b\u0438\u0446\u0430\u043c\u0438 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445.</p> <p>\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438:</p> <ul> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0438\u043c\u043f\u0435\u0440\u0430\u0442\u0438\u0432\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c \u043c\u0430\u043f\u043f\u0438\u043d\u0433\u0430 SQLAlchemy</li> <li>\u0421\u0432\u044f\u0437\u044b\u0432\u0430\u0435\u0442 \u0434\u043e\u043c\u0435\u043d\u043d\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c <code>User</code> \u0441 \u0442\u0430\u0431\u043b\u0438\u0446\u0435\u0439 <code>users</code></li> <li>\u0414\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u0432\u044b\u0437\u0432\u0430\u043d\u0430 \u043f\u0440\u0438 \u0441\u0442\u0430\u0440\u0442\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f</li> </ul> <p>\u041f\u0440\u0438\u043c\u0435\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f:</p> <pre><code>from src.adapters.orm import start_mappers\n\n# \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043c\u0430\u043f\u043f\u0438\u043d\u0433\u0430 \u043f\u0440\u0438 \u0441\u0442\u0430\u0440\u0442\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\nstart_mappers()\n</code></pre>"},{"location":"api/python/adapters/orm/#_3","title":"\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438","text":"<ol> <li>\u041c\u0438\u0433\u0440\u0430\u0446\u0438\u0438 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u044b \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438 (Alembic) \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\u043c\u0438 \u0441\u0445\u0435\u043c\u044b</li> <li> <p>\u0412\u0441\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b \u0442\u0430\u0431\u043b\u0438\u0446 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043e\u0442\u0440\u0430\u0436\u0435\u043d\u044b \u0432 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u044f\u0445</p> </li> <li> <p>\u041f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c</p> </li> <li>\u0414\u043b\u044f \u0447\u0430\u0441\u0442\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0439\u0442\u0435 \u0438\u043d\u0434\u0435\u043a\u0441\u044b</li> <li> <p>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 <code>selectinload</code> \u0438\u043b\u0438 <code>joinedload</code> \u0434\u043b\u044f \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0445 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0435\u0439</p> </li> <li> <p>\u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u044c</p> </li> <li>\u041d\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0441\u044b\u0440\u044b\u0435 SQL-\u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0431\u0435\u0437 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438</li> <li> <p>\u0412\u0441\u0435\u0433\u0434\u0430 \u0432\u0430\u043b\u0438\u0434\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u0435\u0440\u0435\u0434 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435\u043c</p> </li> <li> <p>\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435</p> </li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0442\u0435\u0441\u0442\u043e\u0432\u0443\u044e \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u044e\u043d\u0438\u0442-\u0442\u0435\u0441\u0442\u043e\u0432</li> <li>\u041f\u0440\u0438\u043c\u0435\u043d\u044f\u0439\u0442\u0435 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u0434\u043b\u044f \u0438\u0437\u043e\u043b\u044f\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u043e\u0432</li> </ol>"},{"location":"api/python/adapters/orm/#_4","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f","text":"<p><pre><code>from sqlalchemy.orm import Session\nfrom src.adapters.orm import start_mappers\nfrom src.domain.model import User\n\n# \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043c\u0430\u043f\u043f\u0438\u043d\u0433\u0430\nstart_mappers()\n\n# \u041f\u0440\u0438\u043c\u0435\u0440 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 ORM\nwith Session(engine) as session:\n    # \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\n    new_user = User(\n        first_name=\"\u0418\u0432\u0430\u043d\",\n        last_name=\"\u0418\u0432\u0430\u043d\u043e\u0432\",\n        email=\"ivan@example.com\",\n        hashed_password=\"hashed_password_here\"\n    )\n    session.add(new_user)\n    session.commit()\n\n    # \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\n    user = session.query(User).filter_by(email=\"ivan@example.com\").first()\n</code></pre> \u041c\u043e\u0434\u0443\u043b\u044c ORM</p> <p>\u041e\u0431\u044a\u0435\u043a\u0442\u043d\u043e-\u0440\u0435\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445 (ORM) \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u0430\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u0445, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043c\u0430\u043d\u0438\u043f\u0443\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u043c\u0438 \u044f\u0437\u044b\u043a\u0430 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f, \u0447\u0442\u043e \u0432 \u043a\u043e\u043d\u0435\u0447\u043d\u043e\u043c \u0441\u0447\u0435\u0442\u0435, \u0443\u043f\u0440\u043e\u0449\u0430\u0435\u0442 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435.</p> <p>\u041c\u043e\u0434\u0443\u043b\u044c <code>src.adapters.orm</code> \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 ORM SQLite, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0432 \u044d\u0442\u043e\u043c \u043f\u0440\u043e\u0435\u043a\u0442\u0435 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0438 \u0438\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 \u0431\u0430\u0437\u044b.</p> <p>\u042d\u0442\u043e\u0442 \u043c\u043e\u0434\u0443\u043b\u044c \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043a\u043b\u0430\u0441\u0441\u044b \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0441 \u0442\u0430\u0431\u043b\u0438\u0446\u0430\u043c\u0438 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445, \u0432\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c, \u0438\u0437\u0432\u043b\u0435\u043a\u0430\u0442\u044c \u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0441 \u0431\u0430\u0437\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e \u0447\u0435\u0440\u0435\u0437 SQL \u0437\u0430\u043f\u0440\u043e\u0441\u044b.</p> <p>\u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043b\u0430\u0441\u0441\u044b \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u043c\u043e\u0434\u0443\u043b\u044f:</p> <ul> <li><code>DB</code>: \u043a\u043b\u0430\u0441\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u0431\u043e\u0439 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0431\u0430\u0437\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445</li> <li><code>Base</code>: \u0431\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441, \u043e\u0442 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043d\u0430\u0441\u043b\u0435\u0434\u0443\u044e\u0442\u0441\u044f \u0432\u0441\u0435 \u043c\u043e\u0434\u0435\u043b\u0438</li> <li><code>Model</code>: \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u044b\u0439 \u043a\u043b\u0430\u0441\u0441, \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445</li> <li><code>Column</code>: \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u044b\u0439 \u043a\u043b\u0430\u0441\u0441, \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0439 \u0441\u0442\u043e\u043b\u0431\u0435\u0446 \u0442\u0430\u0431\u043b\u0438\u0446\u044b</li> <li><code>IntegerColumn</code>, <code>StringColumn</code>, <code>FloatColumn</code>, <code>BooleanColumn</code>:   \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043a\u043b\u0430\u0441\u0441\u044b \u0441\u0442\u043e\u043b\u0431\u0446\u043e\u0432</li> <li><code>ForeignKey</code>: \u043a\u043b\u0430\u0441\u0441, \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0439 \u0432\u043d\u0435\u0448\u043d\u0438\u0439 \u043a\u043b\u044e\u0447</li> <li><code>relationship</code>: \u0434\u0435\u043a\u043e\u0440\u0430\u0442\u043e\u0440 \u0434\u043b\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u043e\u0442\u043d\u043e\u0448\u0435\u043d\u0438\u0439 \u043c\u0435\u0436\u0434\u0443 \u043c\u043e\u0434\u0435\u043b\u044f\u043c\u0438</li> <li><code>create_all</code>: \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0432\u0441\u0435\u0445 \u0442\u0430\u0431\u043b\u0438\u0446 \u0432 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445</li> <li><code>drop_all</code>: \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0432\u0441\u0435\u0445 \u0442\u0430\u0431\u043b\u0438\u0446 \u0432 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u043c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u043e \u0434\u0440\u0443\u0433\u0438\u0445</li> </ul> <p>\u042d\u0442\u043e\u0442 \u043c\u043e\u0434\u0443\u043b\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0432 \u043f\u0440\u043e\u0435\u043a\u0442\u0435 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0431\u0430\u0437\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445</p>"},{"location":"api/python/adapters/password_hasher/","title":"\u041c\u043e\u0434\u0443\u043b\u044c \u0445\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u0430\u0440\u043e\u043b\u0435\u0439","text":"<p>\u041c\u043e\u0434\u0443\u043b\u044c <code>password_hasher</code> \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0430 <code>IPasswordHasher</code> \u0434\u043b\u044f \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0433\u043e \u0445\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043f\u0430\u0440\u043e\u043b\u0435\u0439 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430 Argon2.</p>"},{"location":"api/python/adapters/password_hasher/#userpasswordhasher","title":"UserPasswordHasher","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0445\u0435\u0448\u0435\u0440\u0430 \u043f\u0430\u0440\u043e\u043b\u0435\u0439 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 Argon2. Argon2 \u2014 \u044d\u0442\u043e \u043f\u043e\u0431\u0435\u0434\u0438\u0442\u0435\u043b\u044c \u043a\u043e\u043d\u043a\u0443\u0440\u0441\u0430 Password Hashing Competition 2015 \u0433\u043e\u0434\u0430, \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u044e\u0449\u0438\u0439 \u0437\u0430\u0449\u0438\u0442\u0443 \u043e\u0442 \u0430\u0442\u0430\u043a \u043f\u0435\u0440\u0435\u0431\u043e\u0440\u043e\u043c \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u044f.</p>"},{"location":"api/python/adapters/password_hasher/#_2","title":"\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438","text":"<ul> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0441\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0439 \u0438 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0439 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c Argon2</li> <li>\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u0441\u043e\u043b\u044c (salt) \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043f\u0430\u0440\u043e\u043b\u044f</li> <li>\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0443 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0432\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u0438</li> <li>\u0420\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u0442 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 <code>IPasswordHasher</code></li> </ul>"},{"location":"api/python/adapters/password_hasher/#_3","title":"\u0414\u0435\u0442\u0430\u043b\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438","text":"<p>               Bases: <code>IPasswordHasher</code></p> <p>\u0420\u0430\u0431\u043e\u0447\u0438\u0439 \u0445\u0435\u0448\u0435\u0440 \u043f\u0430\u0440\u043e\u043b\u0435\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c Argon2.</p> Source code in <code>src/adapters/password_hasher.py</code> <pre><code>class UserPasswordHasher(IPasswordHasher):\n    \"\"\"\u0420\u0430\u0431\u043e\u0447\u0438\u0439 \u0445\u0435\u0448\u0435\u0440 \u043f\u0430\u0440\u043e\u043b\u0435\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c Argon2.\"\"\"\n\n    def verify_password(self, password: str, hashed_password: str) -&gt; bool:\n        \"\"\"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0435 \u043f\u0430\u0440\u043e\u043b\u044f \u0438 \u0435\u0433\u043e \u0445\u0435\u0448\u0430.\n\n        Args:\n            password: \u041e\u0440\u0438\u0433\u0438\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c \u0432 \u043e\u0442\u043a\u0440\u044b\u0442\u043e\u043c \u0432\u0438\u0434\u0435.\n            hashed_password: \u0425\u0435\u0448 \u043f\u0430\u0440\u043e\u043b\u044f \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438.\n\n        Returns:\n            True, \u0435\u0441\u043b\u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u0435\u0442, \u0438\u043d\u0430\u0447\u0435 False.\n\n        \"\"\"\n        return argon2.verify(password, hashed_password)\n\n    def hash_password(self, password: str) -&gt; str:\n        \"\"\"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0439 \u0445\u0435\u0448 \u0434\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u0430\u0440\u043e\u043b\u044f.\n\n        Args:\n            password: \u041f\u0430\u0440\u043e\u043b\u044c \u0432 \u043e\u0442\u043a\u0440\u044b\u0442\u043e\u043c \u0432\u0438\u0434\u0435.\n\n        Returns:\n            \u0425\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0430\u0440\u043e\u043b\u044f.\n\n        \"\"\"\n        return argon2.hash(password)\n</code></pre>"},{"location":"api/python/adapters/password_hasher/#src.adapters.password_hasher.UserPasswordHasher.hash_password","title":"<code>hash_password(password: str) -&gt; str</code>","text":"<p>\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0439 \u0445\u0435\u0448 \u0434\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u0430\u0440\u043e\u043b\u044f.</p> <p>Parameters:</p> Name Type Description Default <code>password</code> <code>str</code> <p>\u041f\u0430\u0440\u043e\u043b\u044c \u0432 \u043e\u0442\u043a\u0440\u044b\u0442\u043e\u043c \u0432\u0438\u0434\u0435.</p> required <p>Returns:</p> Type Description <code>str</code> <p>\u0425\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0430\u0440\u043e\u043b\u044f.</p> Source code in <code>src/adapters/password_hasher.py</code> <pre><code>def hash_password(self, password: str) -&gt; str:\n    \"\"\"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0439 \u0445\u0435\u0448 \u0434\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u0430\u0440\u043e\u043b\u044f.\n\n    Args:\n        password: \u041f\u0430\u0440\u043e\u043b\u044c \u0432 \u043e\u0442\u043a\u0440\u044b\u0442\u043e\u043c \u0432\u0438\u0434\u0435.\n\n    Returns:\n        \u0425\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0430\u0440\u043e\u043b\u044f.\n\n    \"\"\"\n    return argon2.hash(password)\n</code></pre>"},{"location":"api/python/adapters/password_hasher/#src.adapters.password_hasher.UserPasswordHasher.verify_password","title":"<code>verify_password(password: str, hashed_password: str) -&gt; bool</code>","text":"<p>\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0435 \u043f\u0430\u0440\u043e\u043b\u044f \u0438 \u0435\u0433\u043e \u0445\u0435\u0448\u0430.</p> <p>Parameters:</p> Name Type Description Default <code>password</code> <code>str</code> <p>\u041e\u0440\u0438\u0433\u0438\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c \u0432 \u043e\u0442\u043a\u0440\u044b\u0442\u043e\u043c \u0432\u0438\u0434\u0435.</p> required <code>hashed_password</code> <code>str</code> <p>\u0425\u0435\u0448 \u043f\u0430\u0440\u043e\u043b\u044f \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438.</p> required <p>Returns:</p> Type Description <code>bool</code> <p>True, \u0435\u0441\u043b\u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u0435\u0442, \u0438\u043d\u0430\u0447\u0435 False.</p> Source code in <code>src/adapters/password_hasher.py</code> <pre><code>def verify_password(self, password: str, hashed_password: str) -&gt; bool:\n    \"\"\"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0435 \u043f\u0430\u0440\u043e\u043b\u044f \u0438 \u0435\u0433\u043e \u0445\u0435\u0448\u0430.\n\n    Args:\n        password: \u041e\u0440\u0438\u0433\u0438\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c \u0432 \u043e\u0442\u043a\u0440\u044b\u0442\u043e\u043c \u0432\u0438\u0434\u0435.\n        hashed_password: \u0425\u0435\u0448 \u043f\u0430\u0440\u043e\u043b\u044f \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438.\n\n    Returns:\n        True, \u0435\u0441\u043b\u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u0435\u0442, \u0438\u043d\u0430\u0447\u0435 False.\n\n    \"\"\"\n    return argon2.verify(password, hashed_password)\n</code></pre>"},{"location":"api/python/adapters/password_hasher/#_4","title":"\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f","text":"<p>\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442 \u0441\u043e\u043b\u044c (salt) \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043f\u0430\u0440\u043e\u043b\u044f - \u041f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0443 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u0432\u044b\u0447\u0438\u0441\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u0438 - \u0420\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u0442 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 <code>IPasswordHasher</code></p>"},{"location":"api/python/adapters/password_hasher/#_5","title":"\u0414\u0435\u0442\u0430\u043b\u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438","text":"<p>               Bases: <code>IPasswordHasher</code></p> <p>\u0420\u0430\u0431\u043e\u0447\u0438\u0439 \u0445\u0435\u0448\u0435\u0440 \u043f\u0430\u0440\u043e\u043b\u0435\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c Argon2.</p> Source code in <code>src/adapters/password_hasher.py</code> <pre><code>class UserPasswordHasher(IPasswordHasher):\n    \"\"\"\u0420\u0430\u0431\u043e\u0447\u0438\u0439 \u0445\u0435\u0448\u0435\u0440 \u043f\u0430\u0440\u043e\u043b\u0435\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c Argon2.\"\"\"\n\n    def verify_password(self, password: str, hashed_password: str) -&gt; bool:\n        \"\"\"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0435 \u043f\u0430\u0440\u043e\u043b\u044f \u0438 \u0435\u0433\u043e \u0445\u0435\u0448\u0430.\n\n        Args:\n            password: \u041e\u0440\u0438\u0433\u0438\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c \u0432 \u043e\u0442\u043a\u0440\u044b\u0442\u043e\u043c \u0432\u0438\u0434\u0435.\n            hashed_password: \u0425\u0435\u0448 \u043f\u0430\u0440\u043e\u043b\u044f \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438.\n\n        Returns:\n            True, \u0435\u0441\u043b\u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u0435\u0442, \u0438\u043d\u0430\u0447\u0435 False.\n\n        \"\"\"\n        return argon2.verify(password, hashed_password)\n\n    def hash_password(self, password: str) -&gt; str:\n        \"\"\"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0439 \u0445\u0435\u0448 \u0434\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u0430\u0440\u043e\u043b\u044f.\n\n        Args:\n            password: \u041f\u0430\u0440\u043e\u043b\u044c \u0432 \u043e\u0442\u043a\u0440\u044b\u0442\u043e\u043c \u0432\u0438\u0434\u0435.\n\n        Returns:\n            \u0425\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0430\u0440\u043e\u043b\u044f.\n\n        \"\"\"\n        return argon2.hash(password)\n</code></pre>"},{"location":"api/python/adapters/password_hasher/#src.adapters.password_hasher.UserPasswordHasher.hash_password","title":"<code>hash_password(password: str) -&gt; str</code>","text":"<p>\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0439 \u0445\u0435\u0448 \u0434\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u0430\u0440\u043e\u043b\u044f.</p> <p>Parameters:</p> Name Type Description Default <code>password</code> <code>str</code> <p>\u041f\u0430\u0440\u043e\u043b\u044c \u0432 \u043e\u0442\u043a\u0440\u044b\u0442\u043e\u043c \u0432\u0438\u0434\u0435.</p> required <p>Returns:</p> Type Description <code>str</code> <p>\u0425\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0430\u0440\u043e\u043b\u044f.</p> Source code in <code>src/adapters/password_hasher.py</code> <pre><code>def hash_password(self, password: str) -&gt; str:\n    \"\"\"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0439 \u0445\u0435\u0448 \u0434\u043b\u044f \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u0430\u0440\u043e\u043b\u044f.\n\n    Args:\n        password: \u041f\u0430\u0440\u043e\u043b\u044c \u0432 \u043e\u0442\u043a\u0440\u044b\u0442\u043e\u043c \u0432\u0438\u0434\u0435.\n\n    Returns:\n        \u0425\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u0430\u0440\u043e\u043b\u044f.\n\n    \"\"\"\n    return argon2.hash(password)\n</code></pre>"},{"location":"api/python/adapters/password_hasher/#src.adapters.password_hasher.UserPasswordHasher.verify_password","title":"<code>verify_password(password: str, hashed_password: str) -&gt; bool</code>","text":"<p>\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0435 \u043f\u0430\u0440\u043e\u043b\u044f \u0438 \u0435\u0433\u043e \u0445\u0435\u0448\u0430.</p> <p>Parameters:</p> Name Type Description Default <code>password</code> <code>str</code> <p>\u041e\u0440\u0438\u0433\u0438\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c \u0432 \u043e\u0442\u043a\u0440\u044b\u0442\u043e\u043c \u0432\u0438\u0434\u0435.</p> required <code>hashed_password</code> <code>str</code> <p>\u0425\u0435\u0448 \u043f\u0430\u0440\u043e\u043b\u044f \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438.</p> required <p>Returns:</p> Type Description <code>bool</code> <p>True, \u0435\u0441\u043b\u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u0435\u0442, \u0438\u043d\u0430\u0447\u0435 False.</p> Source code in <code>src/adapters/password_hasher.py</code> <pre><code>def verify_password(self, password: str, hashed_password: str) -&gt; bool:\n    \"\"\"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0435 \u043f\u0430\u0440\u043e\u043b\u044f \u0438 \u0435\u0433\u043e \u0445\u0435\u0448\u0430.\n\n    Args:\n        password: \u041e\u0440\u0438\u0433\u0438\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c \u0432 \u043e\u0442\u043a\u0440\u044b\u0442\u043e\u043c \u0432\u0438\u0434\u0435.\n        hashed_password: \u0425\u0435\u0448 \u043f\u0430\u0440\u043e\u043b\u044f \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438.\n\n    Returns:\n        True, \u0435\u0441\u043b\u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u0435\u0442, \u0438\u043d\u0430\u0447\u0435 False.\n\n    \"\"\"\n    return argon2.verify(password, hashed_password)\n</code></pre>"},{"location":"api/python/adapters/password_hasher/#_6","title":"\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f","text":""},{"location":"api/python/adapters/password_hasher/#_7","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0445\u0435\u0448\u0435\u0440\u0430","text":"<pre><code>from src.adapters.password_hasher import UserPasswordHasher\n\n# \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 \u0445\u0435\u0448\u0435\u0440\u0430\nhasher = UserPasswordHasher()\n\n# \u0425\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u0440\u043e\u043b\u044f\nhashed_password = hasher.hash_password(\"my_secure_password\")\n\n# \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043f\u0430\u0440\u043e\u043b\u044f\nis_valid = hasher.verify_password(\"my_secure_password\", hashed_password)  # \u0412\u0435\u0440\u043d\u0435\u0442 True\n</code></pre>"},{"location":"api/python/adapters/password_hasher/#_8","title":"\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u044c\u044e","text":"<pre><code>from dataclasses import dataclass\nfrom src.adapters.password_hasher import UserPasswordHasher\n\nhasher = UserPasswordHasher()\n\n@dataclass\nclass User:\n    username: str\n    _hashed_password: str\n\n    def set_password(self, password: str) -&gt; None:\n        self._hashed_password = hasher.hash_password(password)\n\n    def check_password(self, password: str) -&gt; bool:\n        return hasher.verify_password(password, self._hashed_password)\n</code></pre>"},{"location":"api/python/adapters/password_hasher/#_9","title":"\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438","text":"<ol> <li>\u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u044c \u043f\u0430\u0440\u043e\u043b\u0435\u0439</li> <li>\u041d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u0445\u0440\u0430\u043d\u0438\u0442\u0435 \u043f\u0430\u0440\u043e\u043b\u0438 \u0432 \u043e\u0442\u043a\u0440\u044b\u0442\u043e\u043c \u0432\u0438\u0434\u0435</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0434\u043b\u0438\u043d\u043d\u044b\u0435 \u0438 \u0441\u043b\u043e\u0436\u043d\u044b\u0435 \u043f\u0430\u0440\u043e\u043b\u0438</li> <li> <p>\u0420\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0439\u0442\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0445\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f</p> </li> <li> <p>\u041f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c</p> </li> <li>\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u0442\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u0438 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0432\u0430\u0448\u0438\u043c\u0438 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c\u0438</li> <li> <p>\u0423\u0447\u0438\u0442\u044b\u0432\u0430\u0439\u0442\u0435 \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0443 \u043d\u0430 \u043f\u0440\u043e\u0446\u0435\u0441\u0441\u043e\u0440 \u043f\u0440\u0438 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0431\u043e\u043b\u044c\u0448\u043e\u0433\u043e \u0447\u0438\u0441\u043b\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439</p> </li> <li> <p>\u041c\u0438\u0433\u0440\u0430\u0446\u0438\u0438</p> </li> <li>\u041f\u0440\u0438 \u0441\u043c\u0435\u043d\u0435 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430 \u0445\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u0440\u0435\u0434\u0443\u0441\u043c\u043e\u0442\u0440\u0438\u0442\u0435 \u043c\u0435\u0445\u0430\u043d\u0438\u0437\u043c \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0445\u0435\u0448\u0435\u0439</li> <li>\u0425\u0440\u0430\u043d\u0438\u0442\u0435 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0432\u0435\u0440\u0441\u0438\u0438 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u0430 \u0445\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f</li> </ol>"},{"location":"api/python/adapters/password_hasher/#_10","title":"\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u044f","text":"<ul> <li>\u0422\u0435\u043a\u0443\u0449\u0430\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 <code>passlib</code></li> <li>\u0414\u043b\u044f \u043f\u0440\u043e\u0434\u0430\u043a\u0448\u043d-\u0441\u0440\u0435\u0434\u044b \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u0438 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0432\u0430\u0448\u0438\u043c\u0438 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f\u043c\u0438 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u0438</li> </ul>"},{"location":"api/python/adapters/repository/","title":"\u041c\u043e\u0434\u0443\u043b\u044c \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439","text":"<p>\u041c\u043e\u0434\u0443\u043b\u044c <code>repository</code> \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u0442 \u043f\u0430\u0442\u0442\u0435\u0440\u043d Repository \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u0421\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u044b\u0439 \u0431\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 \u0438 \u0435\u0433\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e \u043d\u0430 SQLAlchemy.</p>"},{"location":"api/python/adapters/repository/#abcusersrepository","title":"ABCUsersRepository","text":"<p>\u0410\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u044b\u0439 \u0431\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u044e\u0449\u0438\u0439 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.</p>"},{"location":"api/python/adapters/repository/#api","title":"\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f API","text":"<p>               Bases: <code>ABC</code></p> <p>\u0410\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u044b\u0439 \u0431\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.</p> <p>\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d \u0432 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0445 \u043a\u043b\u0430\u0441\u0441\u0430\u0445-\u043d\u0430\u0441\u043b\u0435\u0434\u043d\u0438\u043a\u0430\u0445.</p> Source code in <code>src/adapters/repository.py</code> <pre><code>class ABCUsersRepository(abc.ABC):\n    \"\"\"\u0410\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u044b\u0439 \u0431\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.\n\n    \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439,\n    \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d \u0432 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0445 \u043a\u043b\u0430\u0441\u0441\u0430\u0445-\u043d\u0430\u0441\u043b\u0435\u0434\u043d\u0438\u043a\u0430\u0445.\n    \"\"\"\n\n    @abc.abstractmethod\n    async def update_login_time(self, user_id: uuid.UUID) -&gt; None:\n        \"\"\"\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0432\u0440\u0435\u043c\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0432\u0445\u043e\u0434\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n        Args:\n            user_id: \u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n        Raises:\n            NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n        \"\"\"\n        raise NotImplementedError\n\n    @abc.abstractmethod\n    async def activate(self, user_id: uuid.UUID) -&gt; None:\n        \"\"\"\u0410\u043a\u0442\u0438\u0432\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n        Args:\n            user_id: \u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n        Raises:\n            NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n        \"\"\"\n        raise NotImplementedError\n\n    @abc.abstractmethod\n    async def deactivate(self, user_id: uuid.UUID) -&gt; None:\n        \"\"\"\u0414\u0435\u0430\u043a\u0442\u0438\u0432\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n        Args:\n            user_id: \u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n        Raises:\n            NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n        \"\"\"\n        raise NotImplementedError\n\n    @abc.abstractmethod\n    async def verify_email(self, user_id: uuid.UUID) -&gt; None:\n        \"\"\"\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044c email \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n        Args:\n            user_id: \u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n        Raises:\n            NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n        \"\"\"\n        raise NotImplementedError\n\n    @abc.abstractmethod\n    async def verify_password(self, user_id: uuid.UUID, password: str) -&gt; bool:\n        \"\"\"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0441\u0442\u044c \u043f\u0430\u0440\u043e\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n        Args:\n            user_id: \u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n            password: \u041f\u0430\u0440\u043e\u043b\u044c \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438.\n\n        Returns:\n            bool: True, \u0435\u0441\u043b\u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u0432\u0435\u0440\u043d\u044b\u0439, \u0438\u043d\u0430\u0447\u0435 False.\n\n        Raises:\n            NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n        \"\"\"\n        raise NotImplementedError\n\n    @abc.abstractmethod\n    async def set_password(self, user_id: uuid.UUID, password: str) -&gt; None:\n        \"\"\"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c \u0434\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n        Args:\n            user_id: \u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n            password: \u041d\u043e\u0432\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c.\n\n        Raises:\n            NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n        \"\"\"\n        raise NotImplementedError\n\n    @abc.abstractmethod\n    async def add(self, user: User) -&gt; None:\n        \"\"\"\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439.\n\n        Args:\n            user: \u041e\u0431\u044a\u0435\u043a\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f.\n\n        Raises:\n            NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n        \"\"\"\n        raise NotImplementedError\n\n    @abc.abstractmethod\n    async def get_by_email(self, email: str) -&gt; User | None:\n        \"\"\"\u041d\u0430\u0445\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e email.\n\n        Args:\n            email: Email \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430.\n\n        Returns:\n            User | None: \u041e\u0431\u044a\u0435\u043a\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0435\u0441\u043b\u0438 \u043d\u0430\u0439\u0434\u0435\u043d, \u0438\u043d\u0430\u0447\u0435 None.\n\n        Raises:\n            NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n        \"\"\"\n        raise NotImplementedError\n\n    @abc.abstractmethod\n    async def get_by_id(self, user_id: uuid.UUID) -&gt; User | None:\n        \"\"\"\u041d\u0430\u0445\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u043c\u0443 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0443.\n\n        Args:\n            user_id: UUID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430.\n\n        Returns:\n            User | None: \u041e\u0431\u044a\u0435\u043a\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0435\u0441\u043b\u0438 \u043d\u0430\u0439\u0434\u0435\u043d, \u0438\u043d\u0430\u0447\u0435 None.\n\n        Raises:\n            NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n        \"\"\"\n        raise NotImplementedError\n\n    @abc.abstractmethod\n    async def get_by_username(self, username: str) -&gt; User | None:\n        \"\"\"\u041d\u0430\u0445\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e username.\n\n        Args:\n            username: Username \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430.\n\n        Returns:\n            User | None: \u041e\u0431\u044a\u0435\u043a\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0435\u0441\u043b\u0438 \u043d\u0430\u0439\u0434\u0435\u043d, \u0438\u043d\u0430\u0447\u0435 None.\n\n        Raises:\n            NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n        \"\"\"\n        raise NotImplementedError\n\n    @abc.abstractmethod\n    async def list_all(self, *, only_active: bool = False) -&gt; list[User]:\n        \"\"\"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.\n\n        Args:\n            only_active: \u0415\u0441\u043b\u0438 True, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.\n\n        Returns:\n            list[User]: \u0421\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.\n\n        Raises:\n            NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n        \"\"\"\n        raise NotImplementedError\n\n    @abc.abstractmethod\n    async def update(self, user: User) -&gt; None:\n        \"\"\"\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0438.\n\n        Args:\n            user: \u041e\u0431\u044a\u0435\u043a\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0441 \u043e\u0431\u043d\u043e\u0432\u043b\u0451\u043d\u043d\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438.\n\n        Raises:\n            NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n        \"\"\"\n        raise NotImplementedError\n\n    @abc.abstractmethod\n    async def remove(self, user_id: uuid.UUID) -&gt; None:\n        \"\"\"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u0437 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f.\n\n        Args:\n            user_id: UUID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f.\n\n        Raises:\n            NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n        \"\"\"\n        raise NotImplementedError\n</code></pre>"},{"location":"api/python/adapters/repository/#src.adapters.repository.ABCUsersRepository.activate","title":"<code>activate(user_id: uuid.UUID) -&gt; None</code>  <code>abstractmethod</code> <code>async</code>","text":"<p>\u0410\u043a\u0442\u0438\u0432\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> <p>Parameters:</p> Name Type Description Default <code>user_id</code> <code>UUID</code> <p>\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> required <p>Raises:</p> Type Description <code>NotImplementedError</code> <p>\u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.</p> Source code in <code>src/adapters/repository.py</code> <pre><code>@abc.abstractmethod\nasync def activate(self, user_id: uuid.UUID) -&gt; None:\n    \"\"\"\u0410\u043a\u0442\u0438\u0432\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n    Args:\n        user_id: \u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n    Raises:\n        NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n    \"\"\"\n    raise NotImplementedError\n</code></pre>"},{"location":"api/python/adapters/repository/#src.adapters.repository.ABCUsersRepository.add","title":"<code>add(user: User) -&gt; None</code>  <code>abstractmethod</code> <code>async</code>","text":"<p>\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439.</p> <p>Parameters:</p> Name Type Description Default <code>user</code> <code>User</code> <p>\u041e\u0431\u044a\u0435\u043a\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f.</p> required <p>Raises:</p> Type Description <code>NotImplementedError</code> <p>\u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.</p> Source code in <code>src/adapters/repository.py</code> <pre><code>@abc.abstractmethod\nasync def add(self, user: User) -&gt; None:\n    \"\"\"\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439.\n\n    Args:\n        user: \u041e\u0431\u044a\u0435\u043a\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0434\u043b\u044f \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f.\n\n    Raises:\n        NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n    \"\"\"\n    raise NotImplementedError\n</code></pre>"},{"location":"api/python/adapters/repository/#src.adapters.repository.ABCUsersRepository.deactivate","title":"<code>deactivate(user_id: uuid.UUID) -&gt; None</code>  <code>abstractmethod</code> <code>async</code>","text":"<p>\u0414\u0435\u0430\u043a\u0442\u0438\u0432\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> <p>Parameters:</p> Name Type Description Default <code>user_id</code> <code>UUID</code> <p>\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> required <p>Raises:</p> Type Description <code>NotImplementedError</code> <p>\u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.</p> Source code in <code>src/adapters/repository.py</code> <pre><code>@abc.abstractmethod\nasync def deactivate(self, user_id: uuid.UUID) -&gt; None:\n    \"\"\"\u0414\u0435\u0430\u043a\u0442\u0438\u0432\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n    Args:\n        user_id: \u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n    Raises:\n        NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n    \"\"\"\n    raise NotImplementedError\n</code></pre>"},{"location":"api/python/adapters/repository/#src.adapters.repository.ABCUsersRepository.get_by_email","title":"<code>get_by_email(email: str) -&gt; User | None</code>  <code>abstractmethod</code> <code>async</code>","text":"<p>\u041d\u0430\u0445\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e email.</p> <p>Parameters:</p> Name Type Description Default <code>email</code> <code>str</code> <p>Email \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430.</p> required <p>Returns:</p> Type Description <code>User | None</code> <p>User | None: \u041e\u0431\u044a\u0435\u043a\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0435\u0441\u043b\u0438 \u043d\u0430\u0439\u0434\u0435\u043d, \u0438\u043d\u0430\u0447\u0435 None.</p> <p>Raises:</p> Type Description <code>NotImplementedError</code> <p>\u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.</p> Source code in <code>src/adapters/repository.py</code> <pre><code>@abc.abstractmethod\nasync def get_by_email(self, email: str) -&gt; User | None:\n    \"\"\"\u041d\u0430\u0445\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e email.\n\n    Args:\n        email: Email \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430.\n\n    Returns:\n        User | None: \u041e\u0431\u044a\u0435\u043a\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0435\u0441\u043b\u0438 \u043d\u0430\u0439\u0434\u0435\u043d, \u0438\u043d\u0430\u0447\u0435 None.\n\n    Raises:\n        NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n    \"\"\"\n    raise NotImplementedError\n</code></pre>"},{"location":"api/python/adapters/repository/#src.adapters.repository.ABCUsersRepository.get_by_id","title":"<code>get_by_id(user_id: uuid.UUID) -&gt; User | None</code>  <code>abstractmethod</code> <code>async</code>","text":"<p>\u041d\u0430\u0445\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u043c\u0443 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0443.</p> <p>Parameters:</p> Name Type Description Default <code>user_id</code> <code>UUID</code> <p>UUID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430.</p> required <p>Returns:</p> Type Description <code>User | None</code> <p>User | None: \u041e\u0431\u044a\u0435\u043a\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0435\u0441\u043b\u0438 \u043d\u0430\u0439\u0434\u0435\u043d, \u0438\u043d\u0430\u0447\u0435 None.</p> <p>Raises:</p> Type Description <code>NotImplementedError</code> <p>\u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.</p> Source code in <code>src/adapters/repository.py</code> <pre><code>@abc.abstractmethod\nasync def get_by_id(self, user_id: uuid.UUID) -&gt; User | None:\n    \"\"\"\u041d\u0430\u0445\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u043e\u043c\u0443 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440\u0443.\n\n    Args:\n        user_id: UUID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430.\n\n    Returns:\n        User | None: \u041e\u0431\u044a\u0435\u043a\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0435\u0441\u043b\u0438 \u043d\u0430\u0439\u0434\u0435\u043d, \u0438\u043d\u0430\u0447\u0435 None.\n\n    Raises:\n        NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n    \"\"\"\n    raise NotImplementedError\n</code></pre>"},{"location":"api/python/adapters/repository/#src.adapters.repository.ABCUsersRepository.get_by_username","title":"<code>get_by_username(username: str) -&gt; User | None</code>  <code>abstractmethod</code> <code>async</code>","text":"<p>\u041d\u0430\u0445\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e username.</p> <p>Parameters:</p> Name Type Description Default <code>username</code> <code>str</code> <p>Username \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430.</p> required <p>Returns:</p> Type Description <code>User | None</code> <p>User | None: \u041e\u0431\u044a\u0435\u043a\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0435\u0441\u043b\u0438 \u043d\u0430\u0439\u0434\u0435\u043d, \u0438\u043d\u0430\u0447\u0435 None.</p> <p>Raises:</p> Type Description <code>NotImplementedError</code> <p>\u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.</p> Source code in <code>src/adapters/repository.py</code> <pre><code>@abc.abstractmethod\nasync def get_by_username(self, username: str) -&gt; User | None:\n    \"\"\"\u041d\u0430\u0445\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e username.\n\n    Args:\n        username: Username \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0434\u043b\u044f \u043f\u043e\u0438\u0441\u043a\u0430.\n\n    Returns:\n        User | None: \u041e\u0431\u044a\u0435\u043a\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f, \u0435\u0441\u043b\u0438 \u043d\u0430\u0439\u0434\u0435\u043d, \u0438\u043d\u0430\u0447\u0435 None.\n\n    Raises:\n        NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n    \"\"\"\n    raise NotImplementedError\n</code></pre>"},{"location":"api/python/adapters/repository/#src.adapters.repository.ABCUsersRepository.list_all","title":"<code>list_all(*, only_active: bool = False) -&gt; list[User]</code>  <code>abstractmethod</code> <code>async</code>","text":"<p>\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.</p> <p>Parameters:</p> Name Type Description Default <code>only_active</code> <code>bool</code> <p>\u0415\u0441\u043b\u0438 True, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.</p> <code>False</code> <p>Returns:</p> Type Description <code>list[User]</code> <p>list[User]: \u0421\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.</p> <p>Raises:</p> Type Description <code>NotImplementedError</code> <p>\u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.</p> Source code in <code>src/adapters/repository.py</code> <pre><code>@abc.abstractmethod\nasync def list_all(self, *, only_active: bool = False) -&gt; list[User]:\n    \"\"\"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u0432\u0441\u0435\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.\n\n    Args:\n        only_active: \u0415\u0441\u043b\u0438 True, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.\n\n    Returns:\n        list[User]: \u0421\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.\n\n    Raises:\n        NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n    \"\"\"\n    raise NotImplementedError\n</code></pre>"},{"location":"api/python/adapters/repository/#src.adapters.repository.ABCUsersRepository.remove","title":"<code>remove(user_id: uuid.UUID) -&gt; None</code>  <code>abstractmethod</code> <code>async</code>","text":"<p>\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u0437 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f.</p> <p>Parameters:</p> Name Type Description Default <code>user_id</code> <code>UUID</code> <p>UUID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f.</p> required <p>Raises:</p> Type Description <code>NotImplementedError</code> <p>\u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.</p> Source code in <code>src/adapters/repository.py</code> <pre><code>@abc.abstractmethod\nasync def remove(self, user_id: uuid.UUID) -&gt; None:\n    \"\"\"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u0437 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f.\n\n    Args:\n        user_id: UUID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0434\u043b\u044f \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f.\n\n    Raises:\n        NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n    \"\"\"\n    raise NotImplementedError\n</code></pre>"},{"location":"api/python/adapters/repository/#src.adapters.repository.ABCUsersRepository.set_password","title":"<code>set_password(user_id: uuid.UUID, password: str) -&gt; None</code>  <code>abstractmethod</code> <code>async</code>","text":"<p>\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c \u0434\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> <p>Parameters:</p> Name Type Description Default <code>user_id</code> <code>UUID</code> <p>\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> required <code>password</code> <code>str</code> <p>\u041d\u043e\u0432\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c.</p> required <p>Raises:</p> Type Description <code>NotImplementedError</code> <p>\u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.</p> Source code in <code>src/adapters/repository.py</code> <pre><code>@abc.abstractmethod\nasync def set_password(self, user_id: uuid.UUID, password: str) -&gt; None:\n    \"\"\"\u0423\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043d\u043e\u0432\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c \u0434\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n    Args:\n        user_id: \u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n        password: \u041d\u043e\u0432\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c.\n\n    Raises:\n        NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n    \"\"\"\n    raise NotImplementedError\n</code></pre>"},{"location":"api/python/adapters/repository/#src.adapters.repository.ABCUsersRepository.update","title":"<code>update(user: User) -&gt; None</code>  <code>abstractmethod</code> <code>async</code>","text":"<p>\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0438.</p> <p>Parameters:</p> Name Type Description Default <code>user</code> <code>User</code> <p>\u041e\u0431\u044a\u0435\u043a\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0441 \u043e\u0431\u043d\u043e\u0432\u043b\u0451\u043d\u043d\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438.</p> required <p>Raises:</p> Type Description <code>NotImplementedError</code> <p>\u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.</p> Source code in <code>src/adapters/repository.py</code> <pre><code>@abc.abstractmethod\nasync def update(self, user: User) -&gt; None:\n    \"\"\"\u041e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0438.\n\n    Args:\n        user: \u041e\u0431\u044a\u0435\u043a\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0441 \u043e\u0431\u043d\u043e\u0432\u043b\u0451\u043d\u043d\u044b\u043c\u0438 \u0434\u0430\u043d\u043d\u044b\u043c\u0438.\n\n    Raises:\n        NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n    \"\"\"\n    raise NotImplementedError\n</code></pre>"},{"location":"api/python/adapters/repository/#src.adapters.repository.ABCUsersRepository.update_login_time","title":"<code>update_login_time(user_id: uuid.UUID) -&gt; None</code>  <code>abstractmethod</code> <code>async</code>","text":"<p>\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0432\u0440\u0435\u043c\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0432\u0445\u043e\u0434\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> <p>Parameters:</p> Name Type Description Default <code>user_id</code> <code>UUID</code> <p>\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> required <p>Raises:</p> Type Description <code>NotImplementedError</code> <p>\u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.</p> Source code in <code>src/adapters/repository.py</code> <pre><code>@abc.abstractmethod\nasync def update_login_time(self, user_id: uuid.UUID) -&gt; None:\n    \"\"\"\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0432\u0440\u0435\u043c\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0432\u0445\u043e\u0434\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n    Args:\n        user_id: \u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n    Raises:\n        NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n    \"\"\"\n    raise NotImplementedError\n</code></pre>"},{"location":"api/python/adapters/repository/#src.adapters.repository.ABCUsersRepository.verify_email","title":"<code>verify_email(user_id: uuid.UUID) -&gt; None</code>  <code>abstractmethod</code> <code>async</code>","text":"<p>\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044c email \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> <p>Parameters:</p> Name Type Description Default <code>user_id</code> <code>UUID</code> <p>\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> required <p>Raises:</p> Type Description <code>NotImplementedError</code> <p>\u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.</p> Source code in <code>src/adapters/repository.py</code> <pre><code>@abc.abstractmethod\nasync def verify_email(self, user_id: uuid.UUID) -&gt; None:\n    \"\"\"\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044c email \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n    Args:\n        user_id: \u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n    Raises:\n        NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n    \"\"\"\n    raise NotImplementedError\n</code></pre>"},{"location":"api/python/adapters/repository/#src.adapters.repository.ABCUsersRepository.verify_password","title":"<code>verify_password(user_id: uuid.UUID, password: str) -&gt; bool</code>  <code>abstractmethod</code> <code>async</code>","text":"<p>\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0441\u0442\u044c \u043f\u0430\u0440\u043e\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> <p>Parameters:</p> Name Type Description Default <code>user_id</code> <code>UUID</code> <p>\u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> required <code>password</code> <code>str</code> <p>\u041f\u0430\u0440\u043e\u043b\u044c \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438.</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>True, \u0435\u0441\u043b\u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u0432\u0435\u0440\u043d\u044b\u0439, \u0438\u043d\u0430\u0447\u0435 False.</p> <p>Raises:</p> Type Description <code>NotImplementedError</code> <p>\u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.</p> Source code in <code>src/adapters/repository.py</code> <pre><code>@abc.abstractmethod\nasync def verify_password(self, user_id: uuid.UUID, password: str) -&gt; bool:\n    \"\"\"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0441\u0442\u044c \u043f\u0430\u0440\u043e\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n    Args:\n        user_id: \u0423\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n        password: \u041f\u0430\u0440\u043e\u043b\u044c \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438.\n\n    Returns:\n        bool: True, \u0435\u0441\u043b\u0438 \u043f\u0430\u0440\u043e\u043b\u044c \u0432\u0435\u0440\u043d\u044b\u0439, \u0438\u043d\u0430\u0447\u0435 False.\n\n    Raises:\n        NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n    \"\"\"\n    raise NotImplementedError\n</code></pre>"},{"location":"api/python/adapters/repository/#sqlalchemyusersrepository","title":"SQLAlchemyUsersRepository","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u043d\u0430 \u0431\u0430\u0437\u0435 SQLAlchemy \u0441 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0439 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u043e\u0439.</p>"},{"location":"api/python/adapters/repository/#_2","title":"\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438","text":"<ul> <li>\u041f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 \u0431\u0430\u0437\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445</li> <li>\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 Unit of Work (UoW)</li> <li>\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043c\u0435\u0436\u0434\u0443 ORM-\u043c\u043e\u0434\u0435\u043b\u044f\u043c\u0438 \u0438 \u0434\u043e\u043c\u0435\u043d\u043d\u044b\u043c\u0438 \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u043c\u0438</li> <li>\u0412\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u0430\u044f \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445</li> </ul>"},{"location":"api/python/adapters/repository/#api_1","title":"\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f API","text":"<p>               Bases: <code>ABCUsersRepository</code></p> <p>\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u043d\u0430 SQLAlchemy (PostgreSQL, async) \u0441 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u043e\u0439 UoW.</p> Source code in <code>src/adapters/repository.py</code> <pre><code>class SQLAlchemyUsersRepository(ABCUsersRepository):\n    \"\"\"\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u043d\u0430 SQLAlchemy (PostgreSQL, async) \u0441 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u043e\u0439 UoW.\"\"\"\n\n    def __init__(self, session: AsyncSession, hasher: IPasswordHasher):\n        \"\"\"\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.\n\n        Args:\n            session: \u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u0430\u044f \u0441\u0435\u0441\u0441\u0438\u044f SQLAlchemy.\n            hasher: \u0421\u0435\u0440\u0432\u0438\u0441 \u0434\u043b\u044f \u0445\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u0430\u0440\u043e\u043b\u0435\u0439.\n\n        \"\"\"\n        self.session = session\n        self._hasher = hasher\n\n    async def add(self, user: User) -&gt; None:\n        stmt = users.insert().values(\n            id=user.id,\n            first_name=user.first_name,\n            last_name=user.last_name,\n            email=user.email,\n            username=user.username,\n            hashed_password=user.hashed_password,\n            is_active=user.is_active,\n            is_verified=user.is_verified,\n            created_at=user.created_at,\n            updated_at=user.updated_at,\n            last_login_at=user.last_login_at,\n        )\n        await self.session.execute(stmt)\n\n    async def get_by_email(self, email: str) -&gt; User | None:\n        result = await self.session.execute(select(users).where(users.c.email == email))\n        row = result.first()\n        return self._row_to_user(row) if row else None\n\n    async def get_by_id(self, user_id: uuid.UUID) -&gt; User | None:\n        result = await self.session.execute(select(users).where(users.c.id == user_id))\n        row = result.first()\n        return self._row_to_user(row) if row else None\n\n    async def get_by_username(self, username: str) -&gt; User | None:\n        result = await self.session.execute(select(users).where(users.c.username == username))\n        row = result.first()\n        return self._row_to_user(row) if row else None\n\n    async def list_all(self, *, only_active: bool = False) -&gt; list[User]:\n        stmt = select(users)\n        if only_active:\n            stmt = stmt.where(users.c.is_active.is_(True))\n        result = await self.session.execute(stmt)\n        return [self._row_to_user(row) for row in result.fetchall()]\n\n    async def update(self, user: User) -&gt; None:\n        stmt = (\n            update(users)\n            .where(users.c.id == user.id)\n            .values(\n                first_name=user.first_name,\n                last_name=user.last_name,\n                email=user.email,\n                username=user.username,\n                hashed_password=user.hashed_password,\n                is_active=user.is_active,\n                is_verified=user.is_verified,\n                updated_at=datetime.datetime.now(datetime.UTC),\n                last_login_at=user.last_login_at,\n            )\n        )\n        await self.session.execute(stmt)\n\n    async def remove(self, user_id: uuid.UUID) -&gt; None:\n        stmt = delete(users).where(users.c.id == user_id)\n        await self.session.execute(stmt)\n\n    async def update_login_time(self, user_id: uuid.UUID) -&gt; None:\n        stmt = (\n            update(users)\n            .where(users.c.id == user_id)\n            .values(\n                last_login_at=datetime.datetime.now(datetime.UTC),\n                updated_at=datetime.datetime.now(datetime.UTC),\n            )\n        )\n        await self.session.execute(stmt)\n\n    async def activate(self, user_id: uuid.UUID) -&gt; None:\n        stmt = (\n            update(users)\n            .where(users.c.id == user_id)\n            .values(\n                is_active=True,\n                updated_at=datetime.datetime.now(datetime.UTC),\n            )\n        )\n        await self.session.execute(stmt)\n\n    async def deactivate(self, user_id: uuid.UUID) -&gt; None:\n        stmt = (\n            update(users)\n            .where(users.c.id == user_id)\n            .values(\n                is_active=False,\n                updated_at=datetime.datetime.now(datetime.UTC),\n            )\n        )\n        await self.session.execute(stmt)\n\n    async def verify_email(self, user_id: uuid.UUID) -&gt; None:\n        stmt = (\n            update(users)\n            .where(users.c.id == user_id)\n            .values(\n                is_verified=True,\n                updated_at=datetime.datetime.now(datetime.UTC),\n            )\n        )\n        await self.session.execute(stmt)\n\n    async def verify_password(self, user_id: uuid.UUID, password: str) -&gt; bool:\n        user = await self.get_by_id(user_id)\n        if not user:\n            return False\n        return self._hasher.verify_password(password, user.hashed_password)\n\n    async def set_password(self, user_id: uuid.UUID, password: str) -&gt; None:\n        hashed = self._hasher.hash_password(password)\n        stmt = (\n            update(users)\n            .where(users.c.id == user_id)\n            .values(\n                hashed_password=hashed,\n                updated_at=datetime.datetime.now(datetime.UTC),\n            )\n        )\n        await self.session.execute(stmt)\n\n    def _row_to_user(self, row) -&gt; User:\n        \"\"\"\u041a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u0441\u0442\u0440\u043e\u043a\u0443 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 SQLAlchemy \u0432 \u0434\u043e\u043c\u0435\u043d\u043d\u0443\u044e \u043c\u043e\u0434\u0435\u043b\u044c User.\n\n        Args:\n            row: \u0421\u0442\u0440\u043e\u043a\u0430 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 SQLAlchemy.\n\n        Returns:\n            \u042d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0434\u043e\u043c\u0435\u043d\u043d\u043e\u0439 \u043c\u043e\u0434\u0435\u043b\u0438 User.\n\n        Note:\n            \u0412\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0439 \u043c\u0435\u0442\u043e\u0434, \u043d\u0435 \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d \u0434\u043b\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0438\u0437\u0432\u043d\u0435.\n\n        \"\"\"\n        r = row[0] if isinstance(row, tuple) else row\n        return User(\n            user_id=r.id,\n            first_name=r.first_name,\n            last_name=r.last_name,\n            email=r.email,\n            username=r.username,\n            hashed_password=r.hashed_password,\n            _hasher=self._hasher,\n            is_active=r.is_active,\n            is_verified=r.is_verified,\n            created_at=r.created_at,\n            updated_at=r.updated_at,\n            last_login_at=r.last_login_at,\n        )\n</code></pre>"},{"location":"api/python/adapters/repository/#src.adapters.repository.SQLAlchemyUsersRepository.__init__","title":"<code>__init__(session: AsyncSession, hasher: IPasswordHasher)</code>","text":"<p>\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.</p> <p>Parameters:</p> Name Type Description Default <code>session</code> <code>AsyncSession</code> <p>\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u0430\u044f \u0441\u0435\u0441\u0441\u0438\u044f SQLAlchemy.</p> required <code>hasher</code> <code>IPasswordHasher</code> <p>\u0421\u0435\u0440\u0432\u0438\u0441 \u0434\u043b\u044f \u0445\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u0430\u0440\u043e\u043b\u0435\u0439.</p> required Source code in <code>src/adapters/repository.py</code> <pre><code>def __init__(self, session: AsyncSession, hasher: IPasswordHasher):\n    \"\"\"\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.\n\n    Args:\n        session: \u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u0430\u044f \u0441\u0435\u0441\u0441\u0438\u044f SQLAlchemy.\n        hasher: \u0421\u0435\u0440\u0432\u0438\u0441 \u0434\u043b\u044f \u0445\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u0430\u0440\u043e\u043b\u0435\u0439.\n\n    \"\"\"\n    self.session = session\n    self._hasher = hasher\n</code></pre>"},{"location":"api/python/adapters/repository/#_3","title":"\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f","text":""},{"location":"api/python/adapters/repository/#_4","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f","text":"<pre><code>from sqlalchemy.ext.asyncio import create_async_engine, AsyncSession\nfrom src.adapters.repository import SQLAlchemyUsersRepository\nfrom src.adapters.hasher import BcryptPasswordHasher\n\n# \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439\nengine = create_async_engine(\"postgresql+asyncpg://user:password@localhost/db\")\nhasher = BcryptPasswordHasher()\n\n# \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0435\u0441\u0441\u0438\u0438 \u0438 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f\nasync with AsyncSession(engine) as session:\n    repo = SQLAlchemyUsersRepository(session, hasher)\n\n    # \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f\n    user = await repo.get_by_email(\"user@example.com\")\n</code></pre>"},{"location":"api/python/adapters/repository/#_5","title":"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438","text":"<pre><code># \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\nnew_user = User(\n    email=\"new@example.com\",\n    hashed_password=\"secure_password\",\n    is_active=True\n)\nawait repo.add(new_user)\n\n# \u041f\u043e\u0438\u0441\u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\nuser = await repo.get_by_email(\"new@example.com\")\n\n# \u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445\nuser.first_name = \"\u0418\u0432\u0430\u043d\"\nawait repo.update(user)\n\n# \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\nawait repo.remove(user.id)\n</code></pre>"},{"location":"api/python/adapters/repository/#_6","title":"\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438","text":"<ol> <li>\u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0441\u0435\u0441\u0441\u0438\u044f\u043c\u0438</li> <li>\u0412\u0441\u0435\u0433\u0434\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043d\u044b\u0439 \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440 <code>async with</code> \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0441\u0435\u0441\u0441\u0438\u044f\u043c\u0438</li> <li> <p>\u041d\u0435 \u0445\u0440\u0430\u043d\u0438\u0442\u0435 \u0441\u0441\u044b\u043b\u043a\u0438 \u043d\u0430 \u0441\u0435\u0441\u0441\u0438\u0438 \u0434\u043e\u043b\u044c\u0448\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0433\u043e</p> </li> <li> <p>\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a</p> </li> <li>\u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0439\u0442\u0435 \u0441\u043f\u0435\u0446\u0438\u0444\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f SQLAlchemy</li> <li> <p>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438 \u0434\u043b\u044f \u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0438 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439</p> </li> <li> <p>\u041f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c</p> </li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 <code>selectinload</code> \u0434\u043b\u044f \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0445 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0435\u0439</li> <li> <p>\u041f\u0440\u0438\u043c\u0435\u043d\u044f\u0439\u0442\u0435 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u044e \u0434\u043b\u044f \u0431\u043e\u043b\u044c\u0448\u0438\u0445 \u0432\u044b\u0431\u043e\u0440\u043e\u043a</p> </li> <li> <p>\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435</p> </li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0442\u0435\u0441\u0442\u043e\u0432\u0443\u044e \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445</li> <li>\u041f\u0440\u0438\u043c\u0435\u043d\u044f\u0439\u0442\u0435 \u0444\u0438\u043a\u0441\u0442\u0443\u0440\u044b \u0434\u043b\u044f \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445</li> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0439\u0442\u0435 \u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044e \u0442\u0435\u0441\u0442\u043e\u0432</li> </ol>"},{"location":"api/python/adapters/vault_client/","title":"Vault Client","text":"<p>\u041c\u043e\u0434\u0443\u043b\u044c <code>vault</code> \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442 \u0434\u043b\u044f \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 HashiCorp Vault - \u0441\u0438\u0441\u0442\u0435\u043c\u043e\u0439 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0438 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0441\u0435\u043a\u0440\u0435\u0442\u0430\u043c\u0438. \u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u043a\u043b\u0430\u0441\u0441 <code>VaultClient</code> \u0438\u043d\u043a\u0430\u043f\u0441\u0443\u043b\u0438\u0440\u0443\u0435\u0442 \u0432\u0441\u044e \u043b\u043e\u0433\u0438\u043a\u0443 \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 Vault API, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044e \u0438 \u0447\u0442\u0435\u043d\u0438\u0435 \u0441\u0435\u043a\u0440\u0435\u0442\u043e\u0432.</p>"},{"location":"api/python/adapters/vault_client/#_1","title":"\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438","text":"<ul> <li>\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0442\u043e\u043a\u0435\u043d\u0430</li> <li>\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 KV Secrets Engine v2</li> <li>\u041f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 API</li> <li>\u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u043d\u0430\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a \u0441 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u0430\u043c\u0438 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439</li> <li>\u041b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439</li> </ul>"},{"location":"api/python/adapters/vault_client/#api","title":"\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f API","text":""},{"location":"api/python/adapters/vault_client/#vaultclient","title":"VaultClient","text":"<p>\u041a\u043b\u0438\u0435\u043d\u0442 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 HashiCorp Vault - \u0441\u0438\u0441\u0442\u0435\u043c\u043e\u0439 \u0434\u043b\u044f \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0433\u043e \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0441\u0435\u043a\u0440\u0435\u0442\u043e\u0432.</p> <p>\u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u0441\u0435\u043a\u0440\u0435\u0442\u044b \u0438\u0437 Vault \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0442\u043e\u043a\u0435\u043d\u0430 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438.</p> \u041f\u0440\u0438\u043c\u0435\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435 <ul> <li>\u0414\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0439 \u0438 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0439 \u0441\u0435\u0440\u0432\u0435\u0440 Vault</li> <li>\u0422\u043e\u043a\u0435\u043d \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u043f\u0440\u0430\u0432\u0430 \u043d\u0430 \u0447\u0442\u0435\u043d\u0438\u0435 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043c\u044b\u0445 \u0441\u0435\u043a\u0440\u0435\u0442\u043e\u0432</li> <li>\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f KV Secrets Engine \u0432\u0435\u0440\u0441\u0438\u0438 2</li> </ul> Source code in <code>src/adapters/vault.py</code> <pre><code>class VaultClient:\n    \"\"\"\u041a\u043b\u0438\u0435\u043d\u0442 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 HashiCorp Vault - \u0441\u0438\u0441\u0442\u0435\u043c\u043e\u0439 \u0434\u043b\u044f \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0433\u043e \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0441\u0435\u043a\u0440\u0435\u0442\u043e\u0432.\n\n    \u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0442\u044c \u0441\u0435\u043a\u0440\u0435\u0442\u044b \u0438\u0437 Vault \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0442\u043e\u043a\u0435\u043d\u0430 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438.\n\n    \u041f\u0440\u0438\u043c\u0435\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f:\n        # \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0430\n        vault = VaultClient(\n            addr='http://localhost:8200',  # \u0410\u0434\u0440\u0435\u0441 Vault \u0441\u0435\u0440\u0432\u0435\u0440\u0430\n            token_file='/path/to/token'    # \u0424\u0430\u0439\u043b \u0441 \u0442\u043e\u043a\u0435\u043d\u043e\u043c \u0434\u043e\u0441\u0442\u0443\u043f\u0430\n        )\n\n        # \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u0435\u043a\u0440\u0435\u0442\u0430\n        secret = vault.read_secret('\u043f\u0443\u0442\u044c/\u043a/\u0441\u0435\u043a\u0440\u0435\u0442\u0443')\n\n    \u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435:\n        - \u0414\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0439 \u0438 \u0437\u0430\u043f\u0443\u0449\u0435\u043d\u043d\u044b\u0439 \u0441\u0435\u0440\u0432\u0435\u0440 Vault\n        - \u0422\u043e\u043a\u0435\u043d \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u043f\u0440\u0430\u0432\u0430 \u043d\u0430 \u0447\u0442\u0435\u043d\u0438\u0435 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043c\u044b\u0445 \u0441\u0435\u043a\u0440\u0435\u0442\u043e\u0432\n        - \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f KV Secrets Engine \u0432\u0435\u0440\u0441\u0438\u0438 2\n    \"\"\"\n\n    def __init__(self, addr: str | None = None, token_file: str | None = None) -&gt; None:\n        \"\"\"\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442 Vault \u0441 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f.\n\n        Args:\n            addr (str | None): URL \u0441\u0435\u0440\u0432\u0435\u0440\u0430 Vault. \u0415\u0441\u043b\u0438 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d, \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u043d \u0438\u0437\n            \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f 'VAULT_ADDR'.\n            token_file (str | None): \u041f\u0443\u0442\u044c \u043a \u0444\u0430\u0439\u043b\u0443 \u0441 \u0442\u043e\u043a\u0435\u043d\u043e\u043c \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 Vault. \u0415\u0441\u043b\u0438 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d,\n            \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u043d \u0438\u0437 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f 'VAULT_TOKEN_FILE'.\n\n        Raises:\n            ValueError: \u0415\u0441\u043b\u0438 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u044b \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b addr/token_file \u0438 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435\n            \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0442.\n\n        \"\"\"\n        self._addr = addr or os.environ.get(VAULT_ADDR_ENV_NAME)\n        self._token_file = token_file or os.environ.get(VAULT_TOKEN_FILE_ENV_NAME)\n        self._client = self._init_client()\n\n    def _init_client(self) -&gt; hvac.Client:\n        \"\"\"\u0421\u043e\u0437\u0434\u0430\u0435\u0442 \u0438 \u043d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 Vault.\n\n        Returns:\n            \u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043a\u043b\u0438\u0435\u043d\u0442 Vault\n\n        Raises:\n            VaultError: \u0415\u0441\u043b\u0438 \u043d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\n            VaultConnectionError: \u0415\u0441\u043b\u0438 \u043d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443\n            VaultTokenError: \u0415\u0441\u043b\u0438 \u0432\u043e\u0437\u043d\u0438\u043a\u043b\u0430 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u0441 \u0442\u043e\u043a\u0435\u043d\u043e\u043c\n            VaultAuthenticationError: \u0415\u0441\u043b\u0438 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u043d\u0435 \u0443\u0434\u0430\u043b\u0430\u0441\u044c\n\n        \"\"\"\n        if not self._addr or not self._token_file:\n            logger.error(\n                f'\u041d\u0435 \u0437\u0430\u0434\u0430\u043d\u044b \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f {VAULT_ADDR_ENV_NAME} '\n                f'\u0438 {VAULT_TOKEN_FILE_ENV_NAME}',\n            )\n            raise VaultError(\n                f'\u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f {VAULT_ADDR_ENV_NAME} \u0438 '\n                f'{VAULT_TOKEN_FILE_ENV_NAME} \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0437\u0430\u0434\u0430\u043d\u044b',\n            )\n\n        try:\n            with open(self._token_file) as f:\n                token = f.read().strip()\n\n            if not token:\n                logger.error('\u041e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0442\u043e\u043a\u0435\u043d\u0430 \u043f\u0440\u0438 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 Vault-\u043a\u043b\u0438\u0435\u043d\u0442\u0430')\n                raise VaultTokenError('\u0422\u043e\u043a\u0435\u043d \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043f\u0443\u0441\u0442\u044b\u043c')\n\n            client = hvac.Client(url=self._addr, token=token)\n\n            if not client.is_authenticated():\n                logger.error('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0432 Vault-\u043a\u043b\u0438\u0435\u043d\u0442\u0435')\n                raise VaultAuthenticationError('\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0432 Vault')\n\n            logger.info('Vault-\u043a\u043b\u0438\u0435\u043d\u0442 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u043d')\n            return client\n\n        except FileNotFoundError as e:\n            logger.exception(f'\u0424\u0430\u0439\u043b \u0441 \u0442\u043e\u043a\u0435\u043d\u043e\u043c \u0434\u043b\u044f Vault-\u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d: {self._token_file}')\n            raise VaultTokenError(f'\u0424\u0430\u0439\u043b \u0441 \u0442\u043e\u043a\u0435\u043d\u043e\u043c \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d: {self._token_file}') from e\n        except PermissionError as e:\n            logger.exception(f'\u041d\u0435\u0442 \u043f\u0440\u0430\u0432 \u043d\u0430 \u0447\u0442\u0435\u043d\u0438\u0435 \u0442\u043e\u043a\u0435\u043d\u0430 Vault-\u043a\u043b\u0438\u0435\u043d\u0442\u043e\u043c: {self._token_file}')\n            raise VaultPermissionError(f'\u041d\u0435\u0442 \u043f\u0440\u0430\u0432 \u043d\u0430 \u0447\u0442\u0435\u043d\u0438\u0435 \u0442\u043e\u043a\u0435\u043d\u0430: {self._token_file}') from e\n        except VaultError:\n            raise\n        except Exception as e:\n            if 'connection' in str(e).lower():\n                logger.exception(f'\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c\u0441\u044f \u043a Vault: {e}')\n                raise VaultConnectionError(f'\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c\u0441\u044f \u043a Vault: {e}') from e\n            logger.exception(f'\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 Vault: {e}')\n            raise VaultError(f'\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043a\u043b\u0438\u0435\u043d\u0442\u0430 Vault: {e}') from e\n\n    async def get_secret(self, path: str, key: str | None = None) -&gt; dict[str, Any]:  # type: ignore\n        \"\"\"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u0435\u043a\u0440\u0435\u0442 \u0438\u0437 Vault \u043f\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u043f\u0443\u0442\u0438.\n\n        \u041e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e \u043c\u043e\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c key - \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u044e\u0449\u0438\u0439 \u043a\u043b\u044e\u0447 \u043f\u043e \u043f\u0443\u0442\u0438\n\n        \u041f\u0440\u0438\u043c\u0435\u0440:\n            # \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u0435\u043a\u0440\u0435\u0442\u0430\n            secret = vault.read_secret('eebook/users/database')\n            # \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442: {'username': 'admin', 'password': 's3cr3t'} # pragma: allowlist secret\n\n            # \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\n            db_user = secret['username']\n            db_pass = secret['password']\n\n        Params:\n            path: \u041f\u0443\u0442\u044c \u043a \u0441\u0435\u043a\u0440\u0435\u0442\u0443 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 '\u043f\u0443\u0442\u044c/\u043a/\u0441\u0435\u043a\u0440\u0435\u0442\u0443'.\n                  \u0414\u043b\u044f KV v2 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u0440\u0435\u0444\u0438\u043a\u0441 'data/' \u043f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438.\n            key: \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0441\u0435\u043a\u0440\u0435\u0442\u0430 (\u043f\u0440. db_port)\n\n        Returns:\n            \u0421\u043b\u043e\u0432\u0430\u0440\u044c \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0441\u0435\u043a\u0440\u0435\u0442\u0430\n\n        Raises:\n            VaultSecretNotFoundError: \u0415\u0441\u043b\u0438 \u0441\u0435\u043a\u0440\u0435\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043f\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u043f\u0443\u0442\u0438\n            VaultPermissionError: \u0415\u0441\u043b\u0438 \u043d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u043f\u0440\u0430\u0432 \u0434\u043b\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0441\u0435\u043a\u0440\u0435\u0442\u0443\n            VaultError: \u041f\u0440\u0438 \u0434\u0440\u0443\u0433\u0438\u0445 \u043e\u0448\u0438\u0431\u043a\u0430\u0445 \u043f\u0440\u0438 \u0447\u0442\u0435\u043d\u0438\u0438 \u0441\u0435\u043a\u0440\u0435\u0442\u0430\n\n        \u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u044f:\n            - \u0414\u043b\u044f KV v2 \u0441\u0435\u043a\u0440\u0435\u0442\u044b \u0445\u0440\u0430\u043d\u044f\u0442\u0441\u044f \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 '\u043f\u0443\u0442\u044c/\u043a/\u0441\u0435\u043a\u0440\u0435\u0442\u0443',\n              \u0430 \u043d\u0435 \u0432 \u043f\u043e\u043b\u043d\u043e\u043c \u043f\u0443\u0442\u0438 'secret/data/\u043f\u0443\u0442\u044c/\u043a/\u0441\u0435\u043a\u0440\u0435\u0442\u0443'\n            - \u041c\u0435\u0442\u043e\u0434 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0432\u0435\u0440\u0441\u0438\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 KV v2\n\n        \"\"\"\n        try:\n            secret = self._client.secrets.kv.v2.read_secret_version(path=path)\n            data = secret['data']['data']\n            logger.debug('\u0423\u0441\u043f\u0435\u0448\u043d\u043e \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u043d \u0441\u0435\u043a\u0440\u0435\u0442 \u0438\u0437 Vault')\n\n            if key is not None:\n                if key not in data:\n                    logger.error(f'\u041a\u043b\u044e\u0447 \"{key}\" \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u0432 \u0441\u0435\u043a\u0440\u0435\u0442\u0435 \u043f\u043e \u043f\u0443\u0442\u0438: {path}')\n                    raise VaultSecretNotFoundError(\n                        f'\u041a\u043b\u044e\u0447 \"{key}\" \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u0432 \u0441\u0435\u043a\u0440\u0435\u0442\u0435 \u043f\u043e \u043f\u0443\u0442\u0438: {path}',\n                    )\n                return data[key]\n\n            return data\n        except VaultError:\n            raise\n\n        except Exception as e:\n            if '404' in str(e) or 'Not found' in str(e):\n                logger.exception(\n                    f'\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0438\u0442\u044c \u0441\u0435\u043a\u0440\u0435\u0442 \u0432 Vault \u043f\u043e \u043f\u0443\u0442\u0438: {path}',\n                )\n                raise VaultSecretNotFoundError(f'\u0421\u0435\u043a\u0440\u0435\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d: {path}') from e\n            logger.exception('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0447\u0442\u0435\u043d\u0438\u0438 Vault-\u0441\u0435\u043a\u0440\u0435\u0442\u0430')\n            raise VaultError(f'\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0447\u0442\u0435\u043d\u0438\u0438 \u0441\u0435\u043a\u0440\u0435\u0442\u0430: {e}') from e\n</code></pre>"},{"location":"api/python/adapters/vault_client/#src.adapters.vault.VaultClient--_1","title":"\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0430","text":"<p>vault = VaultClient(     addr='http://localhost:8200',  # \u0410\u0434\u0440\u0435\u0441 Vault \u0441\u0435\u0440\u0432\u0435\u0440\u0430     token_file='/path/to/token'    # \u0424\u0430\u0439\u043b \u0441 \u0442\u043e\u043a\u0435\u043d\u043e\u043c \u0434\u043e\u0441\u0442\u0443\u043f\u0430 )</p>"},{"location":"api/python/adapters/vault_client/#src.adapters.vault.VaultClient--_2","title":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u0435\u043a\u0440\u0435\u0442\u0430","text":"<p>secret = vault.read_secret('\u043f\u0443\u0442\u044c/\u043a/\u0441\u0435\u043a\u0440\u0435\u0442\u0443')</p>"},{"location":"api/python/adapters/vault_client/#src.adapters.vault.VaultClient.__init__","title":"<code>__init__(addr: str | None = None, token_file: str | None = None) -&gt; None</code>","text":"<p>\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442 Vault \u0441 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f.</p> <p>Parameters:</p> Name Type Description Default <code>addr</code> <code>str | None</code> <p>URL \u0441\u0435\u0440\u0432\u0435\u0440\u0430 Vault. \u0415\u0441\u043b\u0438 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d, \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u043d \u0438\u0437</p> <code>None</code> <code>token_file</code> <code>str | None</code> <p>\u041f\u0443\u0442\u044c \u043a \u0444\u0430\u0439\u043b\u0443 \u0441 \u0442\u043e\u043a\u0435\u043d\u043e\u043c \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 Vault. \u0415\u0441\u043b\u0438 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d,</p> <code>None</code> <p>Raises:</p> Type Description <code>ValueError</code> <p>\u0415\u0441\u043b\u0438 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u044b \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b addr/token_file \u0438 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435</p> Source code in <code>src/adapters/vault.py</code> <pre><code>def __init__(self, addr: str | None = None, token_file: str | None = None) -&gt; None:\n    \"\"\"\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442 Vault \u0441 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430\u043c\u0438 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f.\n\n    Args:\n        addr (str | None): URL \u0441\u0435\u0440\u0432\u0435\u0440\u0430 Vault. \u0415\u0441\u043b\u0438 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d, \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u043d \u0438\u0437\n        \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f 'VAULT_ADDR'.\n        token_file (str | None): \u041f\u0443\u0442\u044c \u043a \u0444\u0430\u0439\u043b\u0443 \u0441 \u0442\u043e\u043a\u0435\u043d\u043e\u043c \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 Vault. \u0415\u0441\u043b\u0438 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d,\n        \u0431\u0443\u0434\u0435\u0442 \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u043d \u0438\u0437 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u0439 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f 'VAULT_TOKEN_FILE'.\n\n    Raises:\n        ValueError: \u0415\u0441\u043b\u0438 \u043d\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u044b \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b addr/token_file \u0438 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435\n        \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0442.\n\n    \"\"\"\n    self._addr = addr or os.environ.get(VAULT_ADDR_ENV_NAME)\n    self._token_file = token_file or os.environ.get(VAULT_TOKEN_FILE_ENV_NAME)\n    self._client = self._init_client()\n</code></pre>"},{"location":"api/python/adapters/vault_client/#src.adapters.vault.VaultClient.get_secret","title":"<code>get_secret(path: str, key: str | None = None) -&gt; dict[str, Any]</code>  <code>async</code>","text":"<p>\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u0435\u043a\u0440\u0435\u0442 \u0438\u0437 Vault \u043f\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u043f\u0443\u0442\u0438.</p> <p>\u041e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e \u043c\u043e\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c key - \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u044e\u0449\u0438\u0439 \u043a\u043b\u044e\u0447 \u043f\u043e \u043f\u0443\u0442\u0438</p> \u041f\u0440\u0438\u043c\u0435\u0440 <p>Parameters:</p> Name Type Description Default <code>path</code> <code>str</code> <p>\u041f\u0443\u0442\u044c \u043a \u0441\u0435\u043a\u0440\u0435\u0442\u0443 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 '\u043f\u0443\u0442\u044c/\u043a/\u0441\u0435\u043a\u0440\u0435\u0442\u0443'.   \u0414\u043b\u044f KV v2 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u0440\u0435\u0444\u0438\u043a\u0441 'data/' \u043f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438.</p> required <code>key</code> <code>str | None</code> <p>\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0441\u0435\u043a\u0440\u0435\u0442\u0430 (\u043f\u0440. db_port)</p> <code>None</code> <p>Returns:</p> Type Description <code>dict[str, Any]</code> <p>\u0421\u043b\u043e\u0432\u0430\u0440\u044c \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0441\u0435\u043a\u0440\u0435\u0442\u0430</p> <p>Raises:</p> Type Description <code>VaultSecretNotFoundError</code> <p>\u0415\u0441\u043b\u0438 \u0441\u0435\u043a\u0440\u0435\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043f\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u043f\u0443\u0442\u0438</p> <code>VaultPermissionError</code> <p>\u0415\u0441\u043b\u0438 \u043d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u043f\u0440\u0430\u0432 \u0434\u043b\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0441\u0435\u043a\u0440\u0435\u0442\u0443</p> <code>VaultError</code> <p>\u041f\u0440\u0438 \u0434\u0440\u0443\u0433\u0438\u0445 \u043e\u0448\u0438\u0431\u043a\u0430\u0445 \u043f\u0440\u0438 \u0447\u0442\u0435\u043d\u0438\u0438 \u0441\u0435\u043a\u0440\u0435\u0442\u0430</p> \u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u044f <ul> <li>\u0414\u043b\u044f KV v2 \u0441\u0435\u043a\u0440\u0435\u0442\u044b \u0445\u0440\u0430\u043d\u044f\u0442\u0441\u044f \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 '\u043f\u0443\u0442\u044c/\u043a/\u0441\u0435\u043a\u0440\u0435\u0442\u0443',   \u0430 \u043d\u0435 \u0432 \u043f\u043e\u043b\u043d\u043e\u043c \u043f\u0443\u0442\u0438 'secret/data/\u043f\u0443\u0442\u044c/\u043a/\u0441\u0435\u043a\u0440\u0435\u0442\u0443'</li> <li>\u041c\u0435\u0442\u043e\u0434 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0432\u0435\u0440\u0441\u0438\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 KV v2</li> </ul> Source code in <code>src/adapters/vault.py</code> <pre><code>async def get_secret(self, path: str, key: str | None = None) -&gt; dict[str, Any]:  # type: ignore\n    \"\"\"\u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u0441\u0435\u043a\u0440\u0435\u0442 \u0438\u0437 Vault \u043f\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u043f\u0443\u0442\u0438.\n\n    \u041e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e \u043c\u043e\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c key - \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e \u0438\u043d\u0442\u0435\u0440\u0435\u0441\u0443\u044e\u0449\u0438\u0439 \u043a\u043b\u044e\u0447 \u043f\u043e \u043f\u0443\u0442\u0438\n\n    \u041f\u0440\u0438\u043c\u0435\u0440:\n        # \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u0435\u043a\u0440\u0435\u0442\u0430\n        secret = vault.read_secret('eebook/users/database')\n        # \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442: {'username': 'admin', 'password': 's3cr3t'} # pragma: allowlist secret\n\n        # \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\n        db_user = secret['username']\n        db_pass = secret['password']\n\n    Params:\n        path: \u041f\u0443\u0442\u044c \u043a \u0441\u0435\u043a\u0440\u0435\u0442\u0443 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 '\u043f\u0443\u0442\u044c/\u043a/\u0441\u0435\u043a\u0440\u0435\u0442\u0443'.\n              \u0414\u043b\u044f KV v2 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043f\u0440\u0435\u0444\u0438\u043a\u0441 'data/' \u043f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438.\n        key: \u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0441\u0435\u043a\u0440\u0435\u0442\u0430 (\u043f\u0440. db_port)\n\n    Returns:\n        \u0421\u043b\u043e\u0432\u0430\u0440\u044c \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u0441\u0435\u043a\u0440\u0435\u0442\u0430\n\n    Raises:\n        VaultSecretNotFoundError: \u0415\u0441\u043b\u0438 \u0441\u0435\u043a\u0440\u0435\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043f\u043e \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u043c\u0443 \u043f\u0443\u0442\u0438\n        VaultPermissionError: \u0415\u0441\u043b\u0438 \u043d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u043f\u0440\u0430\u0432 \u0434\u043b\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0441\u0435\u043a\u0440\u0435\u0442\u0443\n        VaultError: \u041f\u0440\u0438 \u0434\u0440\u0443\u0433\u0438\u0445 \u043e\u0448\u0438\u0431\u043a\u0430\u0445 \u043f\u0440\u0438 \u0447\u0442\u0435\u043d\u0438\u0438 \u0441\u0435\u043a\u0440\u0435\u0442\u0430\n\n    \u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u044f:\n        - \u0414\u043b\u044f KV v2 \u0441\u0435\u043a\u0440\u0435\u0442\u044b \u0445\u0440\u0430\u043d\u044f\u0442\u0441\u044f \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 '\u043f\u0443\u0442\u044c/\u043a/\u0441\u0435\u043a\u0440\u0435\u0442\u0443',\n          \u0430 \u043d\u0435 \u0432 \u043f\u043e\u043b\u043d\u043e\u043c \u043f\u0443\u0442\u0438 'secret/data/\u043f\u0443\u0442\u044c/\u043a/\u0441\u0435\u043a\u0440\u0435\u0442\u0443'\n        - \u041c\u0435\u0442\u043e\u0434 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u0432\u0435\u0440\u0441\u0438\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 KV v2\n\n    \"\"\"\n    try:\n        secret = self._client.secrets.kv.v2.read_secret_version(path=path)\n        data = secret['data']['data']\n        logger.debug('\u0423\u0441\u043f\u0435\u0448\u043d\u043e \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u043d \u0441\u0435\u043a\u0440\u0435\u0442 \u0438\u0437 Vault')\n\n        if key is not None:\n            if key not in data:\n                logger.error(f'\u041a\u043b\u044e\u0447 \"{key}\" \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u0432 \u0441\u0435\u043a\u0440\u0435\u0442\u0435 \u043f\u043e \u043f\u0443\u0442\u0438: {path}')\n                raise VaultSecretNotFoundError(\n                    f'\u041a\u043b\u044e\u0447 \"{key}\" \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u0432 \u0441\u0435\u043a\u0440\u0435\u0442\u0435 \u043f\u043e \u043f\u0443\u0442\u0438: {path}',\n                )\n            return data[key]\n\n        return data\n    except VaultError:\n        raise\n\n    except Exception as e:\n        if '404' in str(e) or 'Not found' in str(e):\n            logger.exception(\n                f'\u041d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0438\u0442\u044c \u0441\u0435\u043a\u0440\u0435\u0442 \u0432 Vault \u043f\u043e \u043f\u0443\u0442\u0438: {path}',\n            )\n            raise VaultSecretNotFoundError(f'\u0421\u0435\u043a\u0440\u0435\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d: {path}') from e\n        logger.exception('\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0447\u0442\u0435\u043d\u0438\u0438 Vault-\u0441\u0435\u043a\u0440\u0435\u0442\u0430')\n        raise VaultError(f'\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0447\u0442\u0435\u043d\u0438\u0438 \u0441\u0435\u043a\u0440\u0435\u0442\u0430: {e}') from e\n</code></pre>"},{"location":"api/python/adapters/vault_client/#src.adapters.vault.VaultClient.get_secret--_1","title":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u0435\u043a\u0440\u0435\u0442\u0430","text":"<p>secret = vault.read_secret('eebook/users/database')</p>"},{"location":"api/python/adapters/vault_client/#src.adapters.vault.VaultClient.get_secret--username-admin-password-s3cr3t-pragma-allowlist-secret","title":"\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442: {'username': 'admin', 'password': 's3cr3t'} # pragma: allowlist secret","text":""},{"location":"api/python/adapters/vault_client/#src.adapters.vault.VaultClient.get_secret--_2","title":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445","text":"<p>db_user = secret['username'] db_pass = secret['password']</p>"},{"location":"api/python/adapters/vault_client/#_2","title":"\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f","text":""},{"location":"api/python/adapters/vault_client/#_3","title":"\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0430","text":"<pre><code>from src.adapters.vault import VaultClient\n\n# \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441 \u044f\u0432\u043d\u044b\u043c \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432\nvault = VaultClient(\n    addr='http://localhost:8200',  # \u0410\u0434\u0440\u0435\u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 Vault\n    token_file='/path/to/vault/token'  # \u0424\u0430\u0439\u043b \u0441 \u0442\u043e\u043a\u0435\u043d\u043e\u043c \u0434\u043e\u0441\u0442\u0443\u043f\u0430\n)\n\n# \u0418\u043b\u0438 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f\n# export VAULT_ADDR='http://localhost:8200'\n# export VAULT_TOKEN_FILE='/path/to/vault/token'\nvault = VaultClient()\n</code></pre>"},{"location":"api/python/adapters/vault_client/#_4","title":"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0441\u0435\u043a\u0440\u0435\u0442\u0430\u043c\u0438","text":"<pre><code># \u0427\u0442\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0433\u043e \u0441\u0435\u043a\u0440\u0435\u0442\u0430\nsecret = await vault.get_secret('eebook/database')\n# \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442: {'username': 'admin', 'password': 's3cr3t'}\n\n# \u0427\u0442\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043a\u043b\u044e\u0447\u0430 \u0438\u0437 \u0441\u0435\u043a\u0440\u0435\u0442\u0430\ndb_password = await vault.get_secret('eebook/database', key='password')\n# \u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442: 's3cr3t'\n\n# \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a\ntry:\n    secret = await vault.get_secret('nonexistent/secret')\nexcept VaultSecretNotFoundError:\n    print('\u0421\u0435\u043a\u0440\u0435\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d')\nexcept VaultPermissionError:\n    print('\u041d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u043f\u0440\u0430\u0432 \u0434\u043b\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0441\u0435\u043a\u0440\u0435\u0442\u0443')\nexcept VaultError as e:\n    print(f'\u041e\u0448\u0438\u0431\u043a\u0430 Vault: {e}')\n</code></pre>"},{"location":"api/python/adapters/vault_client/#_5","title":"\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438 \u043f\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044e","text":"<ol> <li>\u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u044c</li> <li>\u041d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u0445\u0440\u0430\u043d\u0438\u0442\u0435 \u0442\u043e\u043a\u0435\u043d\u044b \u0432 \u043a\u043e\u0434\u0435 \u0438\u043b\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u0435 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044f \u0432\u0435\u0440\u0441\u0438\u0439</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u043f\u0440\u0430\u0432\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u0434\u043b\u044f \u0442\u043e\u043a\u0435\u043d\u043e\u0432</li> <li> <p>\u0420\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0439\u0442\u0435 \u0442\u043e\u043a\u0435\u043d\u044b \u0434\u043e\u0441\u0442\u0443\u043f\u0430</p> </li> <li> <p>\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a</p> </li> <li>\u0412\u0441\u0435\u0433\u0434\u0430 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0439\u0442\u0435 \u0441\u043f\u0435\u0446\u0438\u0444\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f Vault</li> <li>\u0420\u0435\u0430\u043b\u0438\u0437\u0443\u0439\u0442\u0435 \u043c\u0435\u0445\u0430\u043d\u0438\u0437\u043c \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u044b\u0445 \u043f\u043e\u043f\u044b\u0442\u043e\u043a \u043f\u0440\u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0441\u0431\u043e\u044f\u0445</li> <li> <p>\u041b\u043e\u0433\u0438\u0440\u0443\u0439\u0442\u0435 \u043e\u0448\u0438\u0431\u043a\u0438 \u0434\u043b\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u0430\u0443\u0434\u0438\u0442\u0430</p> </li> <li> <p>\u041f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c</p> </li> <li>\u041a\u044d\u0448\u0438\u0440\u0443\u0439\u0442\u0435 \u0447\u0430\u0441\u0442\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0435 \u0441\u0435\u043a\u0440\u0435\u0442\u044b \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f</li> <li>\u0418\u0437\u0431\u0435\u0433\u0430\u0439\u0442\u0435 \u0447\u0430\u0441\u0442\u044b\u0445 \u043e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0439 \u043a Vault \u0437\u0430 \u043e\u0434\u043d\u0438\u043c\u0438 \u0438 \u0442\u0435\u043c\u0438 \u0436\u0435 \u0434\u0430\u043d\u043d\u044b\u043c\u0438</li> <li> <p>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043f\u0443\u043b\u044b \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0439 \u0434\u043b\u044f \u0447\u0430\u0441\u0442\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0445 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432</p> </li> <li> <p>\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435</p> </li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043c\u043e\u043a\u0438 \u0434\u043b\u044f \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0431\u0435\u0437 \u0440\u0435\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0441\u0435\u0440\u0432\u0435\u0440\u0430 Vault</li> <li>\u0422\u0435\u0441\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0438 \u043e\u0448\u0438\u0431\u043e\u043a</li> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0439\u0442\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0443 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u0438\u043b\u0438 \u043d\u0435\u0432\u0430\u043b\u0438\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445</li> </ol>"},{"location":"api/python/adapters/vault_client/#_6","title":"\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a","text":"<p>\u041c\u043e\u0434\u0443\u043b\u044c \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0442\u0438\u043f\u043e\u0432 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 \u0434\u043b\u044f \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0435\u0432 \u0441\u0431\u043e\u0435\u0432:</p> <ul> <li><code>VaultError</code>: \u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439 Vault</li> <li><code>VaultConnectionError</code>: \u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443 Vault</li> <li><code>VaultTokenError</code>: \u041e\u0448\u0438\u0431\u043a\u0430 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0438\u043b\u0438 \u043d\u0435\u0432\u0430\u043b\u0438\u0434\u043d\u044b\u0439 \u0442\u043e\u043a\u0435\u043d</li> <li><code>VaultPermissionError</code>: \u041d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e \u043f\u0440\u0430\u0432 \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438</li> <li><code>VaultSecretNotFoundError</code>: \u0417\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043c\u044b\u0439 \u0441\u0435\u043a\u0440\u0435\u0442 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d</li> </ul>"},{"location":"api/python/adapters/vault_client/#_7","title":"\u041f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f","text":"<ul> <li><code>VAULT_ADDR</code>: URL \u0441\u0435\u0440\u0432\u0435\u0440\u0430 Vault (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, 'http://localhost:8200')</li> <li><code>VAULT_TOKEN_FILE</code>: \u041f\u0443\u0442\u044c \u043a \u0444\u0430\u0439\u043b\u0443, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u043c\u0443 \u0442\u043e\u043a\u0435\u043d \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438</li> </ul>"},{"location":"api/python/config/loader/","title":"\u0417\u0430\u0433\u0440\u0443\u0437\u0447\u0438\u043a \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a","text":"<p>\u041c\u043e\u0434\u0443\u043b\u044c <code>loader</code> \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b \u0434\u043b\u044f \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0439 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a \u0438 \u0441\u0435\u043a\u0440\u0435\u0442\u043e\u0432 \u0438\u0437 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u043d\u043e\u0433\u043e \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430 \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043f\u0430\u0442\u0442\u0435\u0440\u043d \"\u041f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440 \u0441\u0435\u043a\u0440\u0435\u0442\u043e\u0432\" \u0434\u043b\u044f \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0446\u0438\u0438 \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445.</p>"},{"location":"api/python/config/loader/#_2","title":"\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438","text":"<ul> <li>\u0413\u0438\u0431\u043a\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0441\u0435\u043a\u0440\u0435\u0442\u043e\u0432 \u0447\u0435\u0440\u0435\u0437 \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u044b\u0439 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 <code>ISecretsProvider</code></li> <li>\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u043e\u0432 \u0441\u0435\u043a\u0440\u0435\u0442\u043e\u0432 (\u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f Vault)</li> <li>\u041f\u043e\u0442\u043e\u043a\u043e\u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c\u0438 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f</li> <li>\u0414\u0435\u0442\u0430\u043b\u044c\u043d\u043e\u0435 \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439</li> <li>\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a \u0441 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u043c\u0438 \u0442\u0438\u043f\u0430\u043c\u0438 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0439</li> </ul>"},{"location":"api/python/config/loader/#api","title":"\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f API","text":""},{"location":"api/python/config/loader/#settingsloader","title":"SettingsLoader","text":"<p>\u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0441\u0435\u043a\u0440\u0435\u0442\u044b \u0438\u0437 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430 \u0441\u0435\u043a\u0440\u0435\u0442\u043e\u0432 \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f.</p> Source code in <code>src/config/loader.py</code> <pre><code>class SettingsLoader:\n    \"\"\"\u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0441\u0435\u043a\u0440\u0435\u0442\u044b \u0438\u0437 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430 \u0441\u0435\u043a\u0440\u0435\u0442\u043e\u0432 \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f.\"\"\"\n\n    def __init__(self, secrets_provider: ISecretsProvider | None = None) -&gt; None:\n        try:\n            self._sp = secrets_provider or VaultClient()\n            logger.info(f'{SettingsLoader.__name__} \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d')\n        except Exception as e:\n            logger.exception(f'\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 {SettingsLoader.__name__}')\n            raise SettingsLoaderInitializationError(\n                f'\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 {SettingsLoader.__name__}: {e}',\n            ) from e\n\n    async def load(self) -&gt; None:\n        \"\"\"\u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0441\u0435\u043a\u0440\u0435\u0442\u044b \u0438\u0437 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430 \u0441\u0435\u043a\u0440\u0435\u0442\u043e\u0432 \u0432 env.\"\"\"\n        secret_paths = [\n            'eebook/users',\n        ]\n        for path in secret_paths:\n            data = await self._sp.get_secret(path)\n            for key, value in data.items():\n                os.environ[key] = str(value)\n        logger.info('\u0421\u0435\u043a\u0440\u0435\u0442\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u044b \u0432 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0435')\n</code></pre>"},{"location":"api/python/config/loader/#src.config.loader.SettingsLoader.load","title":"<code>load() -&gt; None</code>  <code>async</code>","text":"<p>\u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0441\u0435\u043a\u0440\u0435\u0442\u044b \u0438\u0437 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430 \u0441\u0435\u043a\u0440\u0435\u0442\u043e\u0432 \u0432 env.</p> Source code in <code>src/config/loader.py</code> <pre><code>async def load(self) -&gt; None:\n    \"\"\"\u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0441\u0435\u043a\u0440\u0435\u0442\u044b \u0438\u0437 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0430 \u0441\u0435\u043a\u0440\u0435\u0442\u043e\u0432 \u0432 env.\"\"\"\n    secret_paths = [\n        'eebook/users',\n    ]\n    for path in secret_paths:\n        data = await self._sp.get_secret(path)\n        for key, value in data.items():\n            os.environ[key] = str(value)\n    logger.info('\u0421\u0435\u043a\u0440\u0435\u0442\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u044b \u0432 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0435')\n</code></pre>"},{"location":"api/python/config/loader/#_3","title":"\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f","text":""},{"location":"api/python/config/loader/#vault","title":"\u0411\u0430\u0437\u043e\u0432\u043e\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0441 Vault \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e","text":"<pre><code>from src.config.loader import SettingsLoader\n\n# \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0437\u0430\u0433\u0440\u0443\u0437\u0447\u0438\u043a\u0430 \u0441 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u043e\u043c \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e (Vault)\nloader = SettingsLoader()\n\n# \u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0441\u0435\u043a\u0440\u0435\u0442\u043e\u0432 \u0432 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f\nawait loader.load()\n\n# \u0422\u0435\u043f\u0435\u0440\u044c \u0441\u0435\u043a\u0440\u0435\u0442\u044b \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b \u0447\u0435\u0440\u0435\u0437 os.environ\nimport os\nprint(os.environ['DATABASE_URL'])  # \u041f\u0440\u0438\u043c\u0435\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u043e\u0433\u043e \u0441\u0435\u043a\u0440\u0435\u0442\u0430\n</code></pre>"},{"location":"api/python/config/loader/#_4","title":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0441 \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u043c \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u043e\u043c","text":"<pre><code>from src.config.loader import SettingsLoader\nfrom my_secrets_provider import MyCustomSecretsProvider\n\n# \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u043c \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u043e\u043c\ncustom_provider = MyCustomSecretsProvider()\nloader = SettingsLoader(secrets_provider=custom_provider)\n\n# \u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0441\u0435\u043a\u0440\u0435\u0442\u043e\u0432\nawait loader.load()\n</code></pre>"},{"location":"api/python/config/loader/#_5","title":"\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438 \u043f\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044e","text":"<ol> <li>\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f</li> <li>\u0421\u043e\u0437\u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 <code>SettingsLoader</code> \u043d\u0430 \u0440\u0430\u043d\u043d\u0438\u0445 \u044d\u0442\u0430\u043f\u0430\u0445 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f</li> <li> <p>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0432\u043d\u0435\u0434\u0440\u0435\u043d\u0438\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439 \u0434\u043b\u044f \u043f\u0435\u0440\u0435\u0434\u0430\u0447\u0438 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u0430 \u0441\u0435\u043a\u0440\u0435\u0442\u043e\u0432</p> </li> <li> <p>\u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u044c</p> </li> <li>\u041d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u0445\u0440\u0430\u043d\u0438\u0442\u0435 \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u0435 \u0441\u0435\u043a\u0440\u0435\u0442\u044b \u0432 \u043a\u043e\u0434\u0435 \u0438\u043b\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u0435 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044f \u0432\u0435\u0440\u0441\u0438\u0439</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u043f\u0440\u0430\u0432\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u0434\u043b\u044f \u0442\u043e\u043a\u0435\u043d\u043e\u0432 Vault</li> <li> <p>\u0420\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0439\u0442\u0435 \u0442\u043e\u043a\u0435\u043d\u044b \u0434\u043e\u0441\u0442\u0443\u043f\u0430</p> </li> <li> <p>\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a <pre><code>try:\n    loader = SettingsLoader()\n    await loader.load()\nexcept SettingsLoaderInitializationError as e:\n    # \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438\n    logger.error(f'\u041e\u0448\u0438\u0431\u043a\u0430 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u0447\u0438\u043a\u0430: {e}')\n    raise\nexcept Exception as e:\n    # \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043f\u0440\u043e\u0447\u0438\u0445 \u043e\u0448\u0438\u0431\u043e\u043a\n    logger.error(f'\u041d\u0435\u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430\u044f \u043e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a: {e}')\n    raise\n</code></pre></p> </li> <li> <p>\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435</p> </li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043c\u043e\u043a\u0438 \u0434\u043b\u044f <code>ISecretsProvider</code> \u0432 \u0442\u0435\u0441\u0442\u0430\u0445</li> <li>\u0422\u0435\u0441\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0438 \u043e\u0448\u0438\u0431\u043e\u043a</li> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0439\u0442\u0435 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0441\u0442\u044c \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0441\u0435\u043a\u0440\u0435\u0442\u043e\u0432 \u0432 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0435</li> </ol>"},{"location":"api/python/config/loader/#_6","title":"\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f","text":"<ul> <li>\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 API</li> <li>\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u044e\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0441\u0435\u043a\u0440\u0435\u0442\u044b \u0438\u0437 \u043f\u0443\u0442\u0438 'eebook/users'</li> <li>\u0412\u0441\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u0443\u044e\u0442\u0441\u044f \u0432 \u0441\u0442\u0440\u043e\u043a\u0438 \u043f\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u0432 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0435</li> </ul>"},{"location":"api/python/config/settings/","title":"\u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430\u043c\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f","text":"<p>\u041c\u043e\u0434\u0443\u043b\u044c <code>settings</code> \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u0442 \u043f\u0430\u0442\u0442\u0435\u0440\u043d \"\u041a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f \u043a\u0430\u043a \u043a\u043e\u0434\" \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c Pydantic, \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044f \u0442\u0438\u043f\u043e\u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b\u0439 \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.</p>"},{"location":"api/python/config/settings/#_2","title":"\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438","text":"<ul> <li>\u0421\u0442\u0440\u043e\u0433\u0430\u044f \u0442\u0438\u043f\u0438\u0437\u0430\u0446\u0438\u044f \u0432\u0441\u0435\u0445 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a</li> <li>\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0438\u0437 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f</li> <li>\u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0430 \u044d\u0442\u0430\u043f\u0435 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438</li> <li>\u0412\u044b\u0447\u0438\u0441\u043b\u044f\u0435\u043c\u044b\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u0434\u043b\u044f \u0447\u0430\u0441\u0442\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439</li> <li>\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u0440\u0430\u0441\u0448\u0438\u0440\u044f\u0435\u043c\u043e\u0439 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438</li> </ul>"},{"location":"api/python/config/settings/#api","title":"\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f API","text":""},{"location":"api/python/config/settings/#settings","title":"\u041a\u043b\u0430\u0441\u0441 Settings","text":"<p>\u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u043a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430\u043c\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041d\u0430\u0441\u043b\u0435\u0434\u0443\u0435\u0442\u0441\u044f \u043e\u0442 <code>pydantic.BaseSettings</code>.</p> <p>               Bases: <code>BaseSettings</code></p> <p>Pydantic-\u043c\u043e\u0434\u0435\u043b\u044c \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.</p> Source code in <code>src/config/settings.py</code> <pre><code>class Settings(BaseSettings):\n    \"\"\"Pydantic-\u043c\u043e\u0434\u0435\u043b\u044c \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.\"\"\"\n\n    FASTAPI_SECRET: str\n    POSTGRES_USER: str\n    POSTGRES_PASSWORD: str\n    POSTGRES_DB: str\n    POSTGRES_PORT: int\n    POSTGRES_HOST: str\n\n    class Config:\n        env_file_encoding = 'utf-8'\n        extra = 'allow'\n\n    @property\n    def postgres_uri(self) -&gt; str:\n        return (\n            f'postgresql+asyncpg://{self.POSTGRES_USER}:{self.POSTGRES_PASSWORD}'\n            f'@{self.POSTGRES_HOST}:{self.POSTGRES_PORT}/{self.POSTGRES_DB}'\n        )\n</code></pre>"},{"location":"api/python/config/settings/#_3","title":"\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f","text":""},{"location":"api/python/config/settings/#_4","title":"\u0411\u0430\u0437\u043e\u0432\u043e\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435","text":"<pre><code>from src.config.settings import Settings\n\n# \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a\nsettings = Settings()\n\n# \u0414\u043e\u0441\u0442\u0443\u043f \u043a \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430\u043c\ndb_uri = settings.postgres_uri\nsecret_key = settings.FASTAPI_SECRET\n</code></pre>"},{"location":"api/python/config/settings/#_5","title":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f","text":"<ol> <li>\u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0444\u0430\u0439\u043b <code>.env</code> \u0432 \u043a\u043e\u0440\u043d\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u0441 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u043c\u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u043c\u0438</li> <li>\u0418\u043b\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0435</li> </ol> <p>\u041f\u0440\u0438\u043c\u0435\u0440 \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e <code>.env</code> \u0444\u0430\u0439\u043b\u0430: <pre><code>FASTAPI_SECRET=your-secret-key\nPOSTGRES_USER=user\nPOSTGRES_PASSWORD=password\nPOSTGRES_DB=dbname\nPOSTGRES_HOST=localhost\nPOSTGRES_PORT=5432\n</code></pre></p>"},{"location":"api/python/config/settings/#_6","title":"\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438","text":"<ol> <li>\u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u044c</li> <li>\u041d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u043a\u043e\u043c\u043c\u0438\u0442\u044c\u0442\u0435 \u0444\u0430\u0439\u043b\u044b \u0441 \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u043c\u0438 \u0441\u0435\u043a\u0440\u0435\u0442\u0430\u043c\u0438 \u0432 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0440\u0430\u0437\u043d\u044b\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0434\u043b\u044f \u0440\u0430\u0437\u043d\u044b\u0445 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0439 (dev/stage/prod)</li> <li> <p>\u0425\u0440\u0430\u043d\u0438\u0442\u0435 \u0447\u0443\u0432\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u043d\u043e\u043c \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, Vault)</p> </li> <li> <p>\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430</p> </li> <li>\u0414\u043b\u044f \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e\u0439 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0441\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0444\u0430\u0439\u043b <code>.env.local</code> (\u0434\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u0435\u0433\u043e \u0432 .gitignore)</li> <li> <p>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0434\u043b\u044f \u043d\u0435\u043a\u0440\u0438\u0442\u0438\u0447\u043d\u044b\u0445 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a</p> </li> <li> <p>\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435</p> </li> <li>\u041f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0439\u0442\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0432 \u0444\u0438\u043a\u0441\u0442\u0443\u0440\u0430\u0445 \u0442\u0435\u0441\u0442\u043e\u0432</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043c\u043e\u043a\u0438 \u0434\u043b\u044f \u0438\u0437\u043e\u043b\u044f\u0446\u0438\u0438 \u0442\u0435\u0441\u0442\u043e\u0432 \u043e\u0442 \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u0445 \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a</li> </ol>"},{"location":"api/python/config/settings/#_7","title":"\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f","text":"<p>\u041c\u043e\u0434\u0443\u043b\u044c <code>settings</code> \u0438\u043d\u0442\u0435\u0433\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0441:</p> <ul> <li>Pydantic \u0434\u043b\u044f \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u0438 \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0430</li> <li>FastAPI (\u0447\u0435\u0440\u0435\u0437 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f)</li> <li>SQLAlchemy (\u0447\u0435\u0440\u0435\u0437 \u0441\u0442\u0440\u043e\u043a\u0443 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f)</li> <li>\u041b\u044e\u0431\u044b\u043c\u0438 \u0434\u0440\u0443\u0433\u0438\u043c\u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0430\u043c\u0438, \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0449\u0438\u043c\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0443 \u0438\u0437 <code>os.environ</code></li> </ul>"},{"location":"api/python/config/settings/#_8","title":"\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f","text":"<ul> <li>\u0412\u0441\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u044e\u0442\u0441\u044f \u043f\u0440\u0438 \u0441\u0442\u0430\u0440\u0442\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f</li> <li>\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0432 <code>.env</code> \u0444\u0430\u0439\u043b\u0435 \u0442\u0440\u0435\u0431\u0443\u044e\u0442 \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f</li> <li>\u0421\u0442\u0440\u043e\u0433\u0430\u044f \u0442\u0438\u043f\u0438\u0437\u0430\u0446\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u0442\u0440\u0435\u0431\u043e\u0432\u0430\u0442\u044c \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0434\u043b\u044f \u043d\u0435\u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445 \u0442\u0438\u043f\u043e\u0432 \u0434\u0430\u043d\u043d\u044b\u0445</li> </ul>"},{"location":"api/python/domain/model/","title":"\u0414\u043e\u043c\u0435\u043d\u043d\u0430\u044f \u043c\u043e\u0434\u0435\u043b\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f","text":"<p>\u041c\u043e\u0434\u0443\u043b\u044c <code>domain.model</code> \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u044f\u0434\u0440\u043e \u0431\u0438\u0437\u043d\u0435\u0441-\u043b\u043e\u0433\u0438\u043a\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u044f \u043f\u0430\u0442\u0442\u0435\u0440\u043d \"\u0411\u043e\u0433\u0430\u0442\u0430\u044f \u043c\u043e\u0434\u0435\u043b\u044c\" (Rich Domain Model). \u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u043a\u043b\u0430\u0441\u0441 <code>User</code> \u0438\u043d\u043a\u0430\u043f\u0441\u0443\u043b\u0438\u0440\u0443\u0435\u0442 \u0432\u0441\u044e \u043b\u043e\u0433\u0438\u043a\u0443 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438.</p>"},{"location":"api/python/domain/model/#_2","title":"\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438","text":"<ul> <li>\u0427\u0435\u0442\u043a\u043e\u0435 \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0441\u0442\u0438</li> <li>\u0418\u043d\u043a\u0430\u043f\u0441\u0443\u043b\u044f\u0446\u0438\u044f \u0431\u0438\u0437\u043d\u0435\u0441-\u043f\u0440\u0430\u0432\u0438\u043b</li> <li>\u041d\u0435\u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044c \u043e\u0442 \u0438\u043d\u0444\u0440\u0430\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u043d\u043e\u0433\u043e \u043a\u043e\u0434\u0430</li> <li>\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u0438\u043c\u043c\u0443\u0442\u0430\u0431\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0433\u0434\u0435 \u044d\u0442\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e</li> <li>\u0421\u0442\u0440\u043e\u0433\u0430\u044f \u0442\u0438\u043f\u0438\u0437\u0430\u0446\u0438\u044f</li> </ul>"},{"location":"api/python/domain/model/#api","title":"\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f API","text":""},{"location":"api/python/domain/model/#user","title":"\u041a\u043b\u0430\u0441\u0441 User","text":"<p>\u041e\u0441\u043d\u043e\u0432\u043d\u0430\u044f \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u044c, \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0430\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0435.</p> Source code in <code>src/domain/model.py</code> <pre><code>class User:\n    def __init__(\n        self,\n        user_id: uuid.UUID | None,\n        first_name: str,\n        last_name: str,\n        email: str,\n        username: str,\n        hashed_password: str,\n        _hasher: IPasswordHasher,\n        is_active: bool = True,\n        is_verified: bool = False,\n        created_at: datetime.datetime | None = None,\n        updated_at: datetime.datetime | None = None,\n        last_login_at: datetime.datetime | None = None,\n    ) -&gt; None:\n        self.id = user_id or uuid.uuid4()\n        self.first_name = first_name\n        self.last_name = last_name\n        self.username = username\n        self.email = email\n        self.hashed_password = hashed_password\n        self.is_active = is_active\n        self.is_verified = is_verified\n        self._hasher = _hasher\n        self.created_at = created_at or datetime.datetime.now(datetime.UTC)\n        self.updated_at = updated_at or datetime.datetime.now(datetime.UTC)\n        self.last_login_at = last_login_at\n\n    def update_login_time(self) -&gt; None:\n        \"\"\"\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0432\u0440\u0435\u043c\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0432\u0445\u043e\u0434\u0430.\"\"\"\n        self.last_login_at = datetime.datetime.now(datetime.UTC)\n\n    def activate(self) -&gt; None:\n        self.is_active = True\n        self.updated_at = datetime.datetime.now(datetime.UTC)\n\n    def deactivate(self) -&gt; None:\n        self.is_active = False\n        self.updated_at = datetime.datetime.now(datetime.UTC)\n\n    def verify_email(self) -&gt; None:\n        self.is_verified = True\n        self.updated_at = datetime.datetime.now(datetime.UTC)\n\n    def verify_password(self, password: str) -&gt; bool:\n        return self._hasher.verify_password(password, self.hashed_password)\n\n    def set_password(self, password: str) -&gt; None:\n        self.hashed_password = self._hasher.hash_password(password)\n\n    def __str__(self) -&gt; str:\n        return f'User - {self.first_name} {self.last_name} ({self.email})'\n\n    def __repr__(self) -&gt; str:\n        return (\n            f'{self.__class__.__name__}('\n            f'id={self.id!r}, '\n            f'first_name={self.first_name!r}, '\n            f'last_name={self.last_name!r}, '\n            f'email={self.email!r}, '\n            f'username={self.username!r}, '\n            f'hashed_password={self.hashed_password}, '\n            f'_hasher={self._hasher!r}, '\n            f'is_active={self.is_active!r}, '\n            f'is_verified={self.is_verified!r}, '\n            f'created_at={self.created_at!r}, '\n            f'updated_at={self.updated_at!r}, '\n            f'last_login_at={self.last_login_at!r})'\n        )\n</code></pre>"},{"location":"api/python/domain/model/#src.domain.model.User.update_login_time","title":"<code>update_login_time() -&gt; None</code>","text":"<p>\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0432\u0440\u0435\u043c\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0432\u0445\u043e\u0434\u0430.</p> Source code in <code>src/domain/model.py</code> <pre><code>def update_login_time(self) -&gt; None:\n    \"\"\"\u041e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u0432\u0440\u0435\u043c\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0432\u0445\u043e\u0434\u0430.\"\"\"\n    self.last_login_at = datetime.datetime.now(datetime.UTC)\n</code></pre>"},{"location":"api/python/domain/model/#_3","title":"\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f","text":""},{"location":"api/python/domain/model/#_4","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f","text":"<pre><code>from uuid import uuid4\nfrom datetime import datetime, UTC\nfrom src.adapters.hasher import BcryptPasswordHasher\nfrom src.domain.model import User\n\n# \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439\nhasher = BcryptPasswordHasher()\n\n# \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\nuser = User(\n    user_id=uuid4(),\n    first_name=\"\u0418\u0432\u0430\u043d\",\n    last_name=\"\u0418\u0432\u0430\u043d\u043e\u0432\",\n    email=\"ivan@example.com\",\n    username=\"ivanov\",\n    hashed_password=hasher.hash_password(\"secure_password\"),\n    _hasher=hasher,\n    is_active=True,\n    created_at=datetime.now(UTC)\n)\n</code></pre>"},{"location":"api/python/domain/model/#_5","title":"\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u043c","text":"<pre><code># \u0410\u043a\u0442\u0438\u0432\u0430\u0446\u0438\u044f/\u0434\u0435\u0430\u043a\u0442\u0438\u0432\u0430\u0446\u0438\u044f\nuser.activate()\nuser.deactivate()\n\n# \u0412\u0435\u0440\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f email\nuser.verify_email()\n\n# \u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u043f\u0430\u0440\u043e\u043b\u044f\nif user.verify_password(\"my_password\"):\n    print(\"\u041f\u0430\u0440\u043e\u043b\u044c \u0432\u0435\u0440\u043d\u044b\u0439\")\n\n# \u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0430\u0440\u043e\u043b\u044f\nuser.set_password(\"new_secure_password\")\n\n# \u041e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0432\u0445\u043e\u0434\u0430\nuser.update_login_time()\n</code></pre>"},{"location":"api/python/domain/model/#_6","title":"\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438 \u043f\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044e","text":"<ol> <li>\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439</li> <li>\u0412\u0441\u0435\u0433\u0434\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0444\u0430\u0431\u0440\u0438\u0447\u043d\u044b\u0435 \u043c\u0435\u0442\u043e\u0434\u044b \u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0438\u0441\u043d\u044b\u0439 \u0441\u043b\u043e\u0439</li> <li>\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u043f\u0430\u0440\u043e\u043b\u044c \u0445\u0435\u0448\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0434\u043e \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f</li> <li> <p>\u0413\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0439\u0442\u0435 \u0443\u043d\u0438\u043a\u0430\u043b\u044c\u043d\u044b\u0435 ID \u0434\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439</p> </li> <li> <p>\u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u044c</p> </li> <li>\u041d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u0445\u0440\u0430\u043d\u0438\u0442\u0435 \u043f\u0430\u0440\u043e\u043b\u0438 \u0432 \u043e\u0442\u043a\u0440\u044b\u0442\u043e\u043c \u0432\u0438\u0434\u0435</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043d\u0430\u0434\u0435\u0436\u043d\u044b\u0435 \u0430\u043b\u0433\u043e\u0440\u0438\u0442\u043c\u044b \u0445\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f</li> <li> <p>\u0420\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0439\u0442\u0435 \u0443\u0447\u0435\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439</p> </li> <li> <p>\u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f</p> </li> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0439\u0442\u0435 email \u043d\u0430 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0441\u0442\u044c</li> <li>\u0412\u0430\u043b\u0438\u0434\u0438\u0440\u0443\u0439\u0442\u0435 \u0441\u043b\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u0430\u0440\u043e\u043b\u044f</li> <li> <p>\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0438\u0432\u0430\u0439\u0442\u0435 \u0434\u043b\u0438\u043d\u0443 \u0441\u0442\u0440\u043e\u043a\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u0435\u0439</p> </li> <li> <p>\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435</p> </li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043c\u043e\u043a\u0438 \u0434\u043b\u044f \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439</li> <li>\u0422\u0435\u0441\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0433\u0440\u0430\u043d\u0438\u0447\u043d\u044b\u0435 \u0441\u043b\u0443\u0447\u0430\u0438</li> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0439\u0442\u0435 \u0431\u0438\u0437\u043d\u0435\u0441-\u043f\u0440\u0430\u0432\u0438\u043b\u0430</li> </ol>"},{"location":"api/python/domain/model/#_7","title":"\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f","text":"<p>\u0414\u043e\u043c\u0435\u043d\u043d\u0430\u044f \u043c\u043e\u0434\u0435\u043b\u044c <code>User</code> \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0430 \u0441:</p> <ul> <li>\u0420\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f\u043c\u0438 \u0434\u043b\u044f \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445</li> <li>\u0421\u0435\u0440\u0432\u0438\u0441\u043d\u044b\u043c \u0441\u043b\u043e\u0435\u043c \u0434\u043b\u044f \u0431\u0438\u0437\u043d\u0435\u0441-\u043b\u043e\u0433\u0438\u043a\u0438</li> <li>API-\u043a\u043e\u043d\u0442\u0440\u043e\u043b\u043b\u0435\u0440\u0430\u043c\u0438 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432</li> <li>\u0421\u0438\u0441\u0442\u0435\u043c\u0430\u043c\u0438 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u0438 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438</li> </ul>"},{"location":"api/python/domain/model/#_8","title":"\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f","text":"<ul> <li>\u0422\u0440\u0435\u0431\u0443\u0435\u0442 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0441 \u0432\u0430\u043b\u0438\u0434\u043d\u044b\u043c \u0445\u0435\u0448\u0435\u0440\u043e\u043c \u043f\u0430\u0440\u043e\u043b\u0435\u0439</li> <li>\u041d\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u0432\u0432\u043e\u0434\u0430 (\u0434\u043e\u043b\u0436\u043d\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c\u0441\u044f \u043d\u0430 \u0443\u0440\u043e\u0432\u043d\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f)</li> <li>\u041d\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u0444\u0440\u0435\u0439\u043c\u0432\u043e\u0440\u043a\u043e\u0432 \u0438 \u0432\u043d\u0435\u0448\u043d\u0438\u0445 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a, \u043a\u0440\u043e\u043c\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u043e\u0439 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 Python</li> </ul>"},{"location":"api/python/entity/models/","title":"\u041c\u043e\u0434\u0435\u043b\u0438 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0435\u0439","text":"<p>\u041c\u043e\u0434\u0443\u043b\u044c <code>entity.models</code> \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 Pydantic-\u0441\u0445\u0435\u043c\u044b \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u042d\u0442\u0438 \u0441\u0445\u0435\u043c\u044b \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u044e\u0442 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044e, \u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e \u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043d\u0430 \u0433\u0440\u0430\u043d\u0438\u0446\u0430\u0445 \u0441\u0438\u0441\u0442\u0435\u043c\u044b.</p>"},{"location":"api/python/entity/models/#_2","title":"\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438","text":"<ul> <li>\u0421\u0442\u0440\u043e\u0433\u0430\u044f \u0442\u0438\u043f\u0438\u0437\u0430\u0446\u0438\u044f \u0432\u0441\u0435\u0445 \u043f\u043e\u043b\u0435\u0439</li> <li>\u0412\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u0430\u044f \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445</li> <li>\u0421\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f/\u0434\u0435\u0441\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0432 JSON</li> <li>\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 OpenAPI</li> <li>\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 FastAPI</li> </ul>"},{"location":"api/python/entity/models/#api","title":"\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f API","text":""},{"location":"api/python/entity/models/#usercreateschema","title":"UserCreateSchema","text":"<p>\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> <p>               Bases: <code>BaseModel</code></p> Source code in <code>src/entity/models.py</code> <pre><code>class UserCreateSchema(BaseModel):\n    first_name: str\n    last_name: str\n    email: EmailStr\n    username: str\n    password: str\n</code></pre>"},{"location":"api/python/entity/models/#userresponseschema","title":"UserResponseSchema","text":"<p>\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u043e\u0442\u0432\u0435\u0442\u0430 \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> <p>               Bases: <code>BaseModel</code></p> Source code in <code>src/entity/models.py</code> <pre><code>class UserResponseSchema(BaseModel):\n    id: UUID\n    first_name: str\n    last_name: str\n    email: EmailStr\n    username: str\n    is_active: bool\n    is_verified: bool\n</code></pre>"},{"location":"api/python/entity/models/#changepasswordschema","title":"ChangePasswordSchema","text":"<p>\u0421\u0445\u0435\u043c\u0430 \u0434\u043b\u044f \u0441\u043c\u0435\u043d\u044b \u043f\u0430\u0440\u043e\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> <p>               Bases: <code>BaseModel</code></p> Source code in <code>src/entity/models.py</code> <pre><code>class ChangePasswordSchema(BaseModel):\n    new_password: str\n</code></pre>"},{"location":"api/python/entity/models/#_3","title":"\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f","text":""},{"location":"api/python/entity/models/#_4","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f","text":"<pre><code>from uuid import uuid4\nfrom src.entity.models import UserCreateSchema, UserResponseSchema\n\n# \u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445\nuser_data = {\n    \"first_name\": \"\u0418\u0432\u0430\u043d\",\n    \"last_name\": \"\u0418\u0432\u0430\u043d\u043e\u0432\",\n    \"email\": \"ivan@example.com\",\n    \"username\": \"ivanov\",\n    \"password\": \"secure_password123\"\n}\n\n# \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445\nuser = UserCreateSchema(**user_data)\n\n# \u041f\u0440\u0435\u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0432 \u0444\u043e\u0440\u043c\u0430\u0442 \u043e\u0442\u0432\u0435\u0442\u0430\nresponse_data = UserResponseSchema(\n    id=uuid4(),\n    first_name=user.first_name,\n    last_name=user.last_name,\n    email=user.email,\n    username=user.username,\n    is_active=True,\n    is_verified=False\n)\n</code></pre>"},{"location":"api/python/entity/models/#_5","title":"\u0421\u043c\u0435\u043d\u0430 \u043f\u0430\u0440\u043e\u043b\u044f","text":"<pre><code>from src.entity.models import ChangePasswordSchema\n\n# \u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u0430\u0440\u043e\u043b\u044f\npassword_data = {\"new_password\": \"new_secure_password123\"}\nchange_password = ChangePasswordSchema(**password_data)\n</code></pre>"},{"location":"api/python/entity/models/#_6","title":"\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438 \u043f\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044e","text":"<ol> <li>\u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445</li> <li>\u0412\u0441\u0435\u0433\u0434\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0441\u0445\u0435\u043c\u044b \u0434\u043b\u044f \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0434\u0430\u043d\u043d\u044b\u0445</li> <li>\u041d\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u0441\u044b\u0440\u044b\u0435 \u0441\u043b\u043e\u0432\u0430\u0440\u0438 \u0432 \u0431\u0438\u0437\u043d\u0435\u0441-\u043b\u043e\u0433\u0438\u043a\u0443</li> <li> <p>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0435 \u0432\u0430\u043b\u0438\u0434\u0430\u0442\u043e\u0440\u044b Pydantic</p> </li> <li> <p>\u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u044c</p> </li> <li>\u041d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0439\u0442\u0435 \u043f\u0430\u0440\u043e\u043b\u0438 \u0432 \u043e\u0442\u0432\u0435\u0442\u0430\u0445 API</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0440\u0430\u0437\u043d\u044b\u0435 \u0441\u0445\u0435\u043c\u044b \u0434\u043b\u044f \u0432\u0432\u043e\u0434\u0430 \u0438 \u0432\u044b\u0432\u043e\u0434\u0430 \u0434\u0430\u043d\u043d\u044b\u0445</li> <li> <p>\u0412\u0430\u043b\u0438\u0434\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043a\u0430\u043a \u043c\u043e\u0436\u043d\u043e \u0440\u0430\u043d\u044c\u0448\u0435</p> </li> <li> <p>\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435</p> </li> <li>\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043f\u043e\u043b\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 \u043c\u043e\u0436\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0447\u0435\u0440\u0435\u0437 <code>Field</code></li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 <code>example</code> \u0438 <code>description</code> \u0434\u043b\u044f \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 OpenAPI</li> </ol>"},{"location":"api/python/entity/models/#fastapi","title":"\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 FastAPI","text":"<p>\u0421\u0445\u0435\u043c\u044b \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0441\u043e\u0432\u043c\u0435\u0441\u0442\u0438\u043c\u044b \u0441 FastAPI \u0438 \u043c\u043e\u0433\u0443\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0434\u043b\u044f:</p> <ul> <li>\u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u0438 \u0432\u0445\u043e\u0434\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432</li> <li>\u0421\u0435\u0440\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043e\u0442\u0432\u0435\u0442\u043e\u0432 API</li> <li>\u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 OpenAPI</li> </ul>"},{"location":"api/python/entity/models/#_7","title":"\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f","text":"<ul> <li>\u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f Pydantic v2+</li> <li>\u0412\u0441\u0435 \u043f\u043e\u043b\u044f \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u044f\u0432\u043d\u043e \u0442\u0438\u043f\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u044b</li> <li>\u0412\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0435 \u0441\u0445\u0435\u043c\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u044b \u0434\u043e \u0438\u0445 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f</li> </ul>"},{"location":"api/python/entrypoints/fastapi_app/","title":"FastAPI \u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435","text":"<p>\u041c\u043e\u0434\u0443\u043b\u044c <code>fastapi_app</code> \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0444\u0430\u0431\u0440\u0438\u043a\u0443 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 FastAPI \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u042d\u0442\u043e \u043e\u0441\u043d\u043e\u0432\u043d\u0430\u044f \u0442\u043e\u0447\u043a\u0430 \u0432\u0445\u043e\u0434\u0430 \u0432\u0435\u0431-\u0441\u0435\u0440\u0432\u0438\u0441\u0430.</p>"},{"location":"api/python/entrypoints/fastapi_app/#_1","title":"\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438","text":"<ul> <li>\u0424\u0430\u0431\u0440\u0438\u0447\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f</li> <li>\u0426\u0435\u043d\u0442\u0440\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f</li> <li>\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u0436\u0438\u0437\u043d\u0435\u043d\u043d\u043e\u0433\u043e \u0446\u0438\u043a\u043b\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f</li> <li>\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f API</li> <li>\u041c\u043e\u0434\u0443\u043b\u044c\u043d\u0430\u044f \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430</li> </ul>"},{"location":"api/python/entrypoints/fastapi_app/#api","title":"\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f API","text":""},{"location":"api/python/entrypoints/fastapi_app/#create_app","title":"create_app","text":"<p>\u0424\u0430\u0431\u0440\u0438\u0447\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 FastAPI.</p> Source code in <code>src/entrypoints/fastapi_app.py</code> <pre><code>def create_app() -&gt; FastAPI:\n    app = FastAPI(\n        title='eebook',\n        description='API \u0443\u0447\u0435\u0442\u0430 \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u0439 eebook',\n        version='0.1.0',\n        docs_url='/api/docs',\n        redoc_url='/api/redoc',\n        openapi_url='/api/openapi.json',\n        lifespan=lifespan,\n    )\n\n    app.include_router(endpoints.router)\n\n    return app\n</code></pre>"},{"location":"api/python/entrypoints/fastapi_app/#_2","title":"\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f","text":""},{"location":"api/python/entrypoints/fastapi_app/#_3","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f","text":"<pre><code>from src.entrypoints.fastapi_app import create_app\n\n# \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\napp = create_app()\n\n# \u0417\u0430\u043f\u0443\u0441\u043a \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e uvicorn (\u0435\u0441\u043b\u0438 \u0444\u0430\u0439\u043b \u0437\u0430\u043f\u0443\u0449\u0435\u043d \u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e)\nif __name__ == \"__main__\":\n    import uvicorn\n    uvicorn.run(\"src.entrypoints.fastapi_app:app\", host=\"0.0.0.0\", port=8000, reload=True)\n</code></pre>"},{"location":"api/python/entrypoints/fastapi_app/#_4","title":"\u041a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f","text":"<p>\u041f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043c\u043e\u0436\u043d\u043e \u043f\u0435\u0440\u0435\u0434\u0430\u0442\u044c \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b:</p> <pre><code>app = FastAPI(\n    title=\"eebook\",\n    description=\"API \u0443\u0447\u0435\u0442\u0430 \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u0439 eebook\",\n    version=\"0.1.0\",\n    docs_url=\"/api/docs\",\n    redoc_url=\"/api/redoc\",\n    openapi_url=\"/api/openapi.json\",\n    lifespan=lifespan\n)\n</code></pre>"},{"location":"api/python/entrypoints/fastapi_app/#_5","title":"\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438 \u043f\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044e","text":"<ol> <li>\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0444\u0430\u0431\u0440\u0438\u0447\u043d\u0443\u044e \u0444\u0443\u043d\u043a\u0446\u0438\u044e \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f</li> <li>\u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0439\u0442\u0435 \u0440\u043e\u0443\u0442\u0435\u0440\u044b \u0447\u0435\u0440\u0435\u0437 <code>app.include_router()</code></li> <li> <p>\u041d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0439\u0442\u0435 middleware \u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 \u043e\u0448\u0438\u0431\u043e\u043a \u0434\u043e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0440\u043e\u0443\u0442\u0435\u0440\u043e\u0432</p> </li> <li> <p>\u041a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f</p> </li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f</li> <li>\u0425\u0440\u0430\u043d\u0438\u0442\u0435 \u0447\u0443\u0432\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u043d\u043e\u043c \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\u0435</li> <li> <p>\u041d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0439\u0442\u0435 CORS \u0434\u043b\u044f \u0432\u0435\u0431-\u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432</p> </li> <li> <p>\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435</p> </li> <li>\u0414\u043e\u043f\u043e\u043b\u043d\u044f\u0439\u0442\u0435 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u0432 docstrings</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 <code>tags</code> \u0434\u043b\u044f \u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u043a\u0438 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u043e\u0432</li> <li>\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0439\u0442\u0435 \u043f\u0440\u0438\u043c\u0435\u0440\u044b \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0438 \u043e\u0442\u0432\u0435\u0442\u043e\u0432</li> </ol>"},{"location":"api/python/entrypoints/fastapi_app/#_6","title":"\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f","text":"<p>\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0438\u043d\u0442\u0435\u0433\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0441:</p> <ul> <li>ASGI-\u0441\u0435\u0440\u0432\u0435\u0440\u0430\u043c\u0438 (uvicorn, hypercorn)</li> <li>\u0421\u0438\u0441\u0442\u0435\u043c\u0430\u043c\u0438 \u043c\u043e\u043d\u0438\u0442\u043e\u0440\u0438\u043d\u0433\u0430</li> <li>\u041b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u043c</li> <li>\u041c\u0435\u0442\u0440\u0438\u043a\u0430\u043c\u0438</li> </ul>"},{"location":"api/python/entrypoints/fastapi_app/#_7","title":"\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f","text":"<ul> <li>\u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f Python 3.8+</li> <li>\u0417\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 FastAPI \u0438 \u0434\u0440\u0443\u0433\u0438\u0445 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0445 \u0432 requirements.txt \u043f\u0430\u043a\u0435\u0442\u043e\u0432</li> <li>\u041f\u0440\u0435\u0434\u043f\u043e\u043b\u0430\u0433\u0430\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 ASGI-\u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0434\u043b\u044f \u043f\u0440\u043e\u0434\u0430\u043a\u0448\u043d-\u0440\u0430\u0437\u0432\u0435\u0440\u0442\u044b\u0432\u0430\u043d\u0438\u044f</li> </ul>"},{"location":"api/python/entrypoints/fastapi_app/#_8","title":"\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438","text":""},{"location":"api/python/entrypoints/fastapi_app/#_9","title":"\u041a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0438 \u043e\u0448\u0438\u0431\u043e\u043a","text":"<pre><code>from fastapi import Request\nfrom fastapi.responses import JSONResponse\n\n@app.exception_handler(ValueError)\nasync def value_error_handler(request: Request, exc: ValueError):\n    return JSONResponse(\n        status_code=400,\n        content={\"message\": str(exc)},\n    )\n</code></pre>"},{"location":"api/python/entrypoints/fastapi_app/#middleware","title":"\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0435 middleware","text":"<pre><code>from fastapi import Request\n\n@app.middleware(\"http\")\nasync def add_process_time_header(request: Request, call_next):\n    # \u041a\u043e\u0434, \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c\u044b\u0439 \u0434\u043e \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u0430\n    response = await call_next(request)\n    # \u041a\u043e\u0434, \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c\u044b\u0439 \u043f\u043e\u0441\u043b\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0437\u0430\u043f\u0440\u043e\u0441\u0430\n    return response\n</code></pre>"},{"location":"api/python/entrypoints/api/endpoints/","title":"API Endpoints","text":"<p>\u041c\u043e\u0434\u0443\u043b\u044c <code>endpoints.py</code> \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 API-\u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c FastAPI. \u042d\u0442\u043e\u0442 \u0444\u0430\u0439\u043b \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0442\u043e\u0447\u043a\u043e\u0439 \u0432\u0445\u043e\u0434\u0430 \u0434\u043b\u044f \u0432\u0441\u0435\u0445 HTTP-\u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432.</p>"},{"location":"api/python/entrypoints/api/endpoints/#api","title":"\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f API","text":"<p>API \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u044b\u0445 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u043e\u0432 FastAPI:</p>"},{"location":"api/python/entrypoints/api/endpoints/#swagger-ui","title":"Swagger UI","text":"<p>\u0418\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u0430\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430 \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443: <pre><code>/docs\n</code></pre></p> <p>\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438: - \u0418\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0435 \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 API - \u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 - \u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0438 \u043e\u0442\u0432\u0435\u0442\u043e\u0432 - \u041f\u043e\u0434\u0441\u0432\u0435\u0442\u043a\u0430 \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441\u0430</p>"},{"location":"api/python/entrypoints/api/endpoints/#redoc","title":"ReDoc","text":"<p>\u0410\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u043d\u0430\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u0430 \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443: <pre><code>/redoc\n</code></pre></p> <p>\u041f\u0440\u0435\u0438\u043c\u0443\u0449\u0435\u0441\u0442\u0432\u0430: - \u0427\u0438\u0441\u0442\u044b\u0439 \u0438 \u043f\u043e\u043d\u044f\u0442\u043d\u044b\u0439 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 - \u0423\u0434\u043e\u0431\u043d\u0430\u044f \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u044f - \u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u0438\u0437 OpenAPI \u0441\u0445\u0435\u043c\u044b</p>"},{"location":"api/python/entrypoints/api/endpoints/#_1","title":"\u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u043c\u043e\u0434\u0443\u043b\u044f","text":"<ul> <li>\u0420\u043e\u0443\u0442\u0435\u0440: \u0412\u0441\u0435 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b \u0441\u0433\u0440\u0443\u043f\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u043f\u043e\u0434 \u043f\u0440\u0435\u0444\u0438\u043a\u0441\u043e\u043c <code>/eebook-users</code></li> <li>\u0417\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0432\u043d\u0435\u0434\u0440\u0435\u043d\u0438\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439 FastAPI</li> <li>\u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f: \u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0438 \u043e\u0442\u0432\u0435\u0442\u043e\u0432</li> </ul>"},{"location":"api/python/entrypoints/api/endpoints/#_2","title":"\u041f\u0440\u0438\u043c\u0435\u0440 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u0430","text":"<pre><code>@router.get('/health')\nasync def health(settings: Settings = Depends(get_settings)):\n    return {\n        'status': 'ok',\n        'database': 'connected' if settings.POSTGRES_HOST else 'disconnected',\n    }\n</code></pre>"},{"location":"api/python/entrypoints/api/endpoints/#_3","title":"\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f","text":"<p>\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u0433\u0435\u043d\u0435\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435: - \u0410\u043d\u043d\u043e\u0442\u0430\u0446\u0438\u0439 \u0442\u0438\u043f\u043e\u0432 - Docstrings - Pydantic \u043c\u043e\u0434\u0435\u043b\u0435\u0439 - \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432 \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u043e\u0432</p>"},{"location":"api/python/entrypoints/api/endpoints/#src.entrypoints.api.endpoints.activate_user","title":"<code>activate_user(user_id, service=Depends(get_user_service))</code>  <code>async</code>","text":"<p>\u0410\u043a\u0442\u0438\u0432\u0438\u0440\u0443\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> Source code in <code>src/entrypoints/api/endpoints.py</code> <pre><code>@router.put('/{user_id}/activate', status_code=status.HTTP_204_NO_CONTENT)\nasync def activate_user(user_id: UUID, service: UserService = Depends(get_user_service)) -&gt; None:\n    \"\"\"\u0410\u043a\u0442\u0438\u0432\u0438\u0440\u0443\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\"\"\"\n    await service.activate_user(user_id)\n    return None\n</code></pre>"},{"location":"api/python/entrypoints/api/endpoints/#src.entrypoints.api.endpoints.change_password","title":"<code>change_password(user_id, data, service=Depends(get_user_service))</code>  <code>async</code>","text":"<p>\u041c\u0435\u043d\u044f\u0435\u0442 \u043f\u0430\u0440\u043e\u043b\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> Source code in <code>src/entrypoints/api/endpoints.py</code> <pre><code>@router.put('/{user_id}/password', status_code=status.HTTP_204_NO_CONTENT)\nasync def change_password(\n    user_id: UUID,\n    data: ChangePasswordSchema,\n    service: UserService = Depends(get_user_service),\n) -&gt; None:\n    \"\"\"\u041c\u0435\u043d\u044f\u0435\u0442 \u043f\u0430\u0440\u043e\u043b\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\"\"\"\n    try:\n        await service.change_password(user_id=user_id, new_password=data.new_password)\n    except ValueError as e:\n        raise HTTPException(status_code=status.HTTP_404_NOT_FOUND, detail='User not found') from e\n    return None\n</code></pre>"},{"location":"api/python/entrypoints/api/endpoints/#src.entrypoints.api.endpoints.deactivate_user","title":"<code>deactivate_user(user_id, service=Depends(get_user_service))</code>  <code>async</code>","text":"<p>\u0414\u0435\u0430\u043a\u0442\u0438\u0432\u0438\u0440\u0443\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> Source code in <code>src/entrypoints/api/endpoints.py</code> <pre><code>@router.put('/{user_id}/deactivate', status_code=status.HTTP_204_NO_CONTENT)\nasync def deactivate_user(user_id: UUID, service: UserService = Depends(get_user_service)) -&gt; None:\n    \"\"\"\u0414\u0435\u0430\u043a\u0442\u0438\u0432\u0438\u0440\u0443\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\"\"\"\n    await service.deactivate_user(user_id)\n    return None\n</code></pre>"},{"location":"api/python/entrypoints/api/endpoints/#src.entrypoints.api.endpoints.get_user_by_email","title":"<code>get_user_by_email(email, service=Depends(get_user_service))</code>  <code>async</code>","text":"<p>\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e email.</p> Source code in <code>src/entrypoints/api/endpoints.py</code> <pre><code>@router.get('/by-email/', response_model=UserResponseSchema)\nasync def get_user_by_email(\n    email: EmailStr,\n    service: UserService = Depends(get_user_service),\n) -&gt; UserResponseSchema:\n    \"\"\"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e email.\"\"\"\n    user = await service.get_user_by_email(email)\n    if not user:\n        raise HTTPException(status_code=status.HTTP_404_NOT_FOUND, detail='User not found')\n    return UserResponseSchema(\n        id=user.id,\n        first_name=user.first_name,\n        last_name=user.last_name,\n        email=user.email,\n        username=user.username,\n        is_active=user.is_active,\n        is_verified=user.is_verified,\n    )\n</code></pre>"},{"location":"api/python/entrypoints/api/endpoints/#src.entrypoints.api.endpoints.get_user_by_id","title":"<code>get_user_by_id(user_id, service=Depends(get_user_service))</code>  <code>async</code>","text":"<p>\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e ID.</p> Source code in <code>src/entrypoints/api/endpoints.py</code> <pre><code>@router.get('/{user_id}', response_model=UserResponseSchema)\nasync def get_user_by_id(\n    user_id: UUID,\n    service: UserService = Depends(get_user_service),\n) -&gt; UserResponseSchema:\n    \"\"\"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e ID.\"\"\"\n    user = await service.get_user_by_id(user_id)\n    if not user:\n        raise HTTPException(status_code=status.HTTP_404_NOT_FOUND, detail='User not found')\n    return UserResponseSchema(\n        id=user.id,\n        first_name=user.first_name,\n        last_name=user.last_name,\n        email=user.email,\n        username=user.username,\n        is_active=user.is_active,\n        is_verified=user.is_verified,\n    )\n</code></pre>"},{"location":"api/python/entrypoints/api/endpoints/#src.entrypoints.api.endpoints.get_user_by_username","title":"<code>get_user_by_username(username, service=Depends(get_user_service))</code>  <code>async</code>","text":"<p>\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e username.</p> Source code in <code>src/entrypoints/api/endpoints.py</code> <pre><code>@router.get('/by-username/', response_model=UserResponseSchema)\nasync def get_user_by_username(\n    username: str,\n    service: UserService = Depends(get_user_service),\n) -&gt; UserResponseSchema:\n    \"\"\"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e username.\"\"\"\n    user = await service.get_user_by_username(username)\n    if not user:\n        raise HTTPException(status_code=status.HTTP_404_NOT_FOUND, detail='User not found')\n    return UserResponseSchema(\n        id=user.id,\n        first_name=user.first_name,\n        last_name=user.last_name,\n        email=user.email,\n        username=user.username,\n        is_active=user.is_active,\n        is_verified=user.is_verified,\n    )\n</code></pre>"},{"location":"api/python/entrypoints/api/endpoints/#src.entrypoints.api.endpoints.list_users","title":"<code>list_users(only_active=False, service=Depends(get_user_service))</code>  <code>async</code>","text":"<p>\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.</p> Source code in <code>src/entrypoints/api/endpoints.py</code> <pre><code>@router.get('/', response_model=list[UserResponseSchema])\nasync def list_users(\n    only_active: bool = False,\n    service: UserService = Depends(get_user_service),\n) -&gt; list[UserResponseSchema]:\n    \"\"\"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.\"\"\"\n    users = await service.list_users(only_active=only_active)\n    return [\n        UserResponseSchema(\n            id=user.id,\n            first_name=user.first_name,\n            last_name=user.last_name,\n            email=user.email,\n            username=user.username,\n            is_active=user.is_active,\n            is_verified=user.is_verified,\n        )\n        for user in users\n    ]\n</code></pre>"},{"location":"api/python/entrypoints/api/endpoints/#src.entrypoints.api.endpoints.login","title":"<code>login(email, password, service=Depends(get_user_service))</code>  <code>async</code>","text":"<p>\u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0432\u0445\u043e\u0434\u0430.</p> Source code in <code>src/entrypoints/api/endpoints.py</code> <pre><code>@router.post('/login', status_code=status.HTTP_200_OK)\nasync def login(\n    email: EmailStr,\n    password: str,\n    service: UserService = Depends(get_user_service),\n) -&gt; dict[str, bool]:\n    \"\"\"\u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0435 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0432\u0445\u043e\u0434\u0430.\"\"\"\n    success = await service.login(email=email, password=password)\n    if not success:\n        raise HTTPException(status_code=status.HTTP_401_UNAUTHORIZED, detail='Invalid credentials')\n    return {'success': True}\n</code></pre>"},{"location":"api/python/entrypoints/api/endpoints/#src.entrypoints.api.endpoints.register_user","title":"<code>register_user(user_data, service=Depends(get_user_service))</code>  <code>async</code>","text":"<p>\u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> Source code in <code>src/entrypoints/api/endpoints.py</code> <pre><code>@router.post('/', response_model=UserResponseSchema, status_code=status.HTTP_201_CREATED)\nasync def register_user(\n    user_data: UserCreateSchema,\n    service: UserService = Depends(get_user_service),\n) -&gt; UserResponseSchema:\n    \"\"\"\u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\"\"\"\n    user = await service.register_user(\n        first_name=user_data.first_name,\n        last_name=user_data.last_name,\n        email=user_data.email,\n        username=user_data.username,\n        password=user_data.password,\n    )\n    return UserResponseSchema(\n        id=user.id,\n        first_name=user.first_name,\n        last_name=user.last_name,\n        email=user.email,\n        username=user.username,\n        is_active=user.is_active,\n        is_verified=user.is_verified,\n    )\n</code></pre>"},{"location":"api/python/entrypoints/api/endpoints/#src.entrypoints.api.endpoints.verify_email","title":"<code>verify_email(user_id, service=Depends(get_user_service))</code>  <code>async</code>","text":"<p>\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0430\u0435\u0442 email \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> Source code in <code>src/entrypoints/api/endpoints.py</code> <pre><code>@router.put('/{user_id}/verify-email', status_code=status.HTTP_204_NO_CONTENT)\nasync def verify_email(user_id: UUID, service: UserService = Depends(get_user_service)) -&gt; None:\n    \"\"\"\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0430\u0435\u0442 email \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\"\"\"\n    await service.verify_email(user_id)\n    return None\n</code></pre>"},{"location":"api/python/infrastructure/lifespan/","title":"\u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0436\u0438\u0437\u043d\u0435\u043d\u043d\u044b\u043c \u0446\u0438\u043a\u043b\u043e\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f","text":"<p>\u041c\u043e\u0434\u0443\u043b\u044c <code>lifespan</code> \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0436\u0438\u0437\u043d\u0435\u043d\u043d\u044b\u043c \u0446\u0438\u043a\u043b\u043e\u043c FastAPI \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u044f \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u0443\u044e \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e \u0438 \u043e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u0432.</p>"},{"location":"api/python/infrastructure/lifespan/#_2","title":"\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438","text":"<ul> <li>\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0435 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0436\u0438\u0437\u043d\u0435\u043d\u043d\u044b\u043c \u0446\u0438\u043a\u043b\u043e\u043c</li> <li>\u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u0430\u044f \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0438 \u043e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u0432</li> <li>\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 \u0441\u0438\u0441\u0442\u0435\u043c\u043e\u0439 \u0431\u0443\u0442\u0441\u0442\u0440\u0430\u043f\u043f\u0438\u043d\u0433\u0430</li> <li>\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a \u043f\u0440\u0438 \u0441\u0442\u0430\u0440\u0442\u0435 \u0438 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0438</li> </ul>"},{"location":"api/python/infrastructure/lifespan/#api","title":"\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f API","text":""},{"location":"api/python/infrastructure/lifespan/#lifespan","title":"lifespan","text":"<p>\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043d\u044b\u0439 \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440 \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0436\u0438\u0437\u043d\u0435\u043d\u043d\u044b\u043c \u0446\u0438\u043a\u043b\u043e\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.</p> Source code in <code>src/infrastructure/lifespan.py</code> <pre><code>@asynccontextmanager\nasync def lifespan(app: FastAPI) -&gt; AsyncIterator[None]:\n    try:\n        await bootstrap()\n        yield\n    finally:\n        engine = get_engine()\n        await engine.dispose()\n</code></pre>"},{"location":"api/python/infrastructure/lifespan/#_3","title":"\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f","text":""},{"location":"api/python/infrastructure/lifespan/#fastapi","title":"\u0411\u0430\u0437\u043e\u0432\u043e\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0441 FastAPI","text":"<pre><code>from fastapi import FastAPI\nfrom src.infrastructure.lifespan import lifespan\n\n# \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0441 \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u043c \u0436\u0438\u0437\u043d\u0435\u043d\u043d\u044b\u043c \u0446\u0438\u043a\u043b\u043e\u043c\napp = FastAPI(lifespan=lifespan)\n\n# \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u043e\u0432...\n@app.get(\"/\")\nasync def root():\n    return {\"message\": \"\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442\"}\n</code></pre>"},{"location":"api/python/infrastructure/lifespan/#_4","title":"\u041a\u0430\u0441\u0442\u043e\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0436\u0438\u0437\u043d\u0435\u043d\u043d\u043e\u0433\u043e \u0446\u0438\u043a\u043b\u0430","text":"<pre><code>from contextlib import asynccontextmanager\nfrom fastapi import FastAPI\nfrom src.infrastructure.lifespan import lifespan as base_lifespan\n\n@asynccontextmanager\nasync def custom_lifespan(app: FastAPI):\n    # \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0435\u0440\u0435\u0434 \u0437\u0430\u043f\u0443\u0441\u043a\u043e\u043c\n    print(\"\u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f...\")\n\n    # \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0431\u0430\u0437\u043e\u0432\u043e\u0433\u043e \u0436\u0438\u0437\u043d\u0435\u043d\u043d\u043e\u0433\u043e \u0446\u0438\u043a\u043b\u0430\n    async with base_lifespan(app) as manager:\n        # \u041a\u043e\u0434 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u043f\u043e\u0441\u043b\u0435 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\n        print(\"\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0433\u043e\u0442\u043e\u0432\u043e \u043a \u0440\u0430\u0431\u043e\u0442\u0435\")\n        try:\n            yield manager\n        finally:\n            # \u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u043e\u0447\u0438\u0441\u0442\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0438\n            print(\"\u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u043e\u0447\u0438\u0441\u0442\u043a\u0430...\")\n\napp = FastAPI(lifespan=custom_lifespan)\n</code></pre>"},{"location":"api/python/infrastructure/lifespan/#_5","title":"\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438 \u043f\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044e","text":"<ol> <li>\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u0432</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 <code>bootstrap()</code> \u0434\u043b\u044f \u0446\u0435\u043d\u0442\u0440\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u0439 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438</li> <li>\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0439\u0442\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0440\u0435\u0441\u0443\u0440\u0441\u044b</li> <li> <p>\u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0439\u0442\u0435 \u043e\u0448\u0438\u0431\u043a\u0438 \u043f\u0440\u0438 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438</p> </li> <li> <p>\u041e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u0432</p> </li> <li>\u0413\u0430\u0440\u0430\u043d\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u043e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u0445 \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u0432 \u0432 \u0431\u043b\u043e\u043a\u0435 <code>finally</code></li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0435 \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440\u044b \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430</li> <li> <p>\u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0439\u0442\u0435 \u043e\u0448\u0438\u0431\u043a\u0438 \u043f\u0440\u0438 \u043e\u0441\u0432\u043e\u0431\u043e\u0436\u0434\u0435\u043d\u0438\u0438 \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u0432</p> </li> <li> <p>\u041b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435</p> </li> <li>\u041b\u043e\u0433\u0438\u0440\u0443\u0439\u0442\u0435 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u044d\u0442\u0430\u043f\u044b \u0436\u0438\u0437\u043d\u0435\u043d\u043d\u043e\u0433\u043e \u0446\u0438\u043a\u043b\u0430</li> <li>\u0412\u043a\u043b\u044e\u0447\u0430\u0439\u0442\u0435 \u0432 \u043b\u043e\u0433\u0438 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0430\u0445</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0440\u0430\u0437\u043d\u044b\u0435 \u0443\u0440\u043e\u0432\u043d\u0438 \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f</li> </ol>"},{"location":"api/python/infrastructure/lifespan/#_6","title":"\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f","text":"<p>\u041c\u043e\u0434\u0443\u043b\u044c \u0438\u043d\u0442\u0435\u0433\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0441:</p> <ul> <li>FastAPI \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\u043c\u0438</li> <li>\u0421\u0438\u0441\u0442\u0435\u043c\u043e\u0439 \u0431\u0443\u0442\u0441\u0442\u0440\u0430\u043f\u043f\u0438\u043d\u0433\u0430</li> <li>\u0414\u0432\u0438\u0436\u043a\u043e\u043c \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445</li> <li>\u0421\u0438\u0441\u0442\u0435\u043c\u043e\u0439 \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f</li> </ul>"},{"location":"api/python/infrastructure/lifespan/#_7","title":"\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f","text":"<ul> <li>\u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f Python 3.8+</li> <li>\u0417\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 FastAPI \u0441 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u043e\u0439 lifespan</li> <li>\u041f\u0440\u0435\u0434\u043f\u043e\u043b\u0430\u0433\u0430\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0433\u043e \u043a\u043e\u0434\u0430</li> </ul>"},{"location":"api/python/infrastructure/lifespan/#_8","title":"\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438","text":""},{"location":"api/python/infrastructure/lifespan/#_9","title":"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0445\u0443\u043a\u043e\u0432 \u0436\u0438\u0437\u043d\u0435\u043d\u043d\u043e\u0433\u043e \u0446\u0438\u043a\u043b\u0430","text":"<pre><code>from fastapi import FastAPI\nfrom src.infrastructure.lifespan import lifespan as base_lifespan\n\napp = FastAPI()\n\n# \u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432 \u0441\u043e\u0431\u044b\u0442\u0438\u0439 \u0436\u0438\u0437\u043d\u0435\u043d\u043d\u043e\u0433\u043e \u0446\u0438\u043a\u043b\u0430\n@app.on_event(\"startup\")\nasync def startup_event():\n    print(\"\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435\")\n\n@app.on_event(\"shutdown\")\nasync def shutdown_event():\n    print(\"\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u0430\u044f \u043e\u0447\u0438\u0441\u0442\u043a\u0430 \u043f\u0440\u0438 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0438\")\n\n# \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0431\u0430\u0437\u043e\u0432\u043e\u0433\u043e \u0436\u0438\u0437\u043d\u0435\u043d\u043d\u043e\u0433\u043e \u0446\u0438\u043a\u043b\u0430\napp.router.lifespan_context = base_lifespan\n</code></pre>"},{"location":"api/python/infrastructure/lifespan/#_10","title":"\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a \u043f\u0440\u0438 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438","text":"<pre><code>from fastapi import FastAPI, HTTPException\nfrom src.infrastructure.lifespan import lifespan as base_lifespan\n\n@asynccontextmanager\nasync def safe_lifespan(app: FastAPI):\n    try:\n        async with base_lifespan(app):\n            yield\n    except Exception as e:\n        # \u041b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043a\u0440\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u0448\u0438\u0431\u043a\u0438\n        print(f\"\u041a\u0440\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u043e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438: {e}\")\n\n        # \u0413\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043f\u043e\u043d\u044f\u0442\u043d\u043e\u0439 \u043e\u0448\u0438\u0431\u043a\u0438 \u0434\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\n        @app.get(\"/\")\n        async def error_route():\n            raise HTTPException(\n                status_code=503,\n                detail=\"\u0421\u0435\u0440\u0432\u0438\u0441 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0438\u0437-\u0437\u0430 \u043e\u0448\u0438\u0431\u043a\u0438 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438\"\n            )\n\n        # \u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c\u0441\u044f \u0432 \u0434\u0435\u0433\u0440\u0430\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435\n        yield\n\napp = FastAPI(lifespan=safe_lifespan)\n</code></pre>"},{"location":"api/python/infrastructure/database/engine/","title":"\u0414\u0432\u0438\u0436\u043e\u043a \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445","text":"<p>\u041c\u043e\u0434\u0443\u043b\u044c <code>engine</code> \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u043c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u043a \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c SQLAlchemy.</p>"},{"location":"api/python/infrastructure/database/engine/#_2","title":"\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438","text":"<ul> <li>\u041b\u0435\u043d\u0438\u0432\u0430\u044f \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0434\u0432\u0438\u0436\u043a\u0430 \u0411\u0414</li> <li>\u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0443\u043b\u043e\u043c \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0439</li> <li>\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f</li> <li>\u041a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0444\u0430\u0431\u0440\u0438\u043a\u0438 \u0441\u0435\u0441\u0441\u0438\u0439</li> <li>\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 API</li> </ul>"},{"location":"api/python/infrastructure/database/engine/#api","title":"\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f API","text":""},{"location":"api/python/infrastructure/database/engine/#get_engine","title":"get_engine","text":"<p>\u0424\u0430\u0431\u0440\u0438\u0447\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0438 \u043a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0433\u043e \u0434\u0432\u0438\u0436\u043a\u0430 SQLAlchemy.</p> <p>\u041b\u0435\u043d\u0438\u0432\u0430\u044f \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f engine. \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u044b \u0434\u043e \u0432\u044b\u0437\u043e\u0432\u0430.</p> <p>Returns:</p> Name Type Description <code>AsyncEngine</code> <code>AsyncEngine</code> <p>\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 \u0434\u0432\u0438\u0436\u043e\u043a SQLAlchemy</p> <p>Raises:</p> Type Description <code>DatabaseConnectionError</code> <p>\u0415\u0441\u043b\u0438 \u043d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043a \u0411\u0414</p> Source code in <code>src/infrastructure/database/engine.py</code> <pre><code>@lru_cache\ndef get_engine() -&gt; AsyncEngine:\n    \"\"\"\u041b\u0435\u043d\u0438\u0432\u0430\u044f \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f engine. \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u044b \u0434\u043e \u0432\u044b\u0437\u043e\u0432\u0430.\n\n    Returns:\n        AsyncEngine: \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 \u0434\u0432\u0438\u0436\u043e\u043a SQLAlchemy\n\n    Raises:\n        DatabaseConnectionError: \u0415\u0441\u043b\u0438 \u043d\u0435 \u0443\u0434\u0430\u043b\u043e\u0441\u044c \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043a \u0411\u0414\n\n    \"\"\"\n    settings = get_settings()\n\n    try:\n        engine = create_async_engine(\n            settings.postgres_uri,\n            pool_size=5,\n            max_overflow=10,\n            pool_timeout=30,\n            pool_pre_ping=True,\n            pool_recycle=300,\n            connect_args={'command_timeout': 10},\n        )\n        logger.info('\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 \u0434\u0432\u0438\u0436\u043e\u043a \u0411\u0414 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u043d')\n        return engine\n\n    except sa_exceptions.TimeoutError as e:\n        logger.exception('\u0422\u0430\u0439\u043c\u0430\u0443\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a \u0411\u0414')\n        raise DatabaseTimeoutError(f'\u0422\u0430\u0439\u043c\u0430\u0443\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a \u0411\u0414: {str(e)}') from e\n    except sa_exceptions.ArgumentError as e:\n        logger.exception('\u041d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a \u0411\u0414:')\n        raise DatabaseArgumentError(f'\u041d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a \u0411\u0414: {str(e)}') from e\n    except sa_exceptions.SQLAlchemyError as e:\n        logger.exception('\u041e\u0448\u0438\u0431\u043a\u0430 SQLAlchemy \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u0434\u0432\u0438\u0436\u043a\u0430')\n        raise DatabaseConnectionError(f'\u041e\u0448\u0438\u0431\u043a\u0430 SQLAlchemy \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u0434\u0432\u0438\u0436\u043a\u0430: {str(e)}') from e\n    except Exception as e:\n        error_msg = f'\u041d\u0435\u043f\u0440\u0435\u0434\u0432\u0438\u0434\u0435\u043d\u043d\u0430\u044f \u043e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u0434\u0432\u0438\u0436\u043a\u0430 \u0411\u0414: {str(e)}'\n        logger.critical(error_msg, exc_info=True)\n        raise DatabaseConnectionError(error_msg) from e\n</code></pre>"},{"location":"api/python/infrastructure/database/engine/#get_session_factory","title":"get_session_factory","text":"<p>\u0424\u0430\u0431\u0440\u0438\u043a\u0430 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0445 \u0441\u0435\u0441\u0441\u0438\u0439 \u0441 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430\u043c\u0438 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e.</p> <p>\u041b\u0435\u043d\u0438\u0432\u0430\u044f \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0439 session factory.</p> Source code in <code>src/infrastructure/database/engine.py</code> <pre><code>@lru_cache\ndef get_session_factory() -&gt; async_sessionmaker[AsyncSession]:\n    \"\"\"\u041b\u0435\u043d\u0438\u0432\u0430\u044f \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0439 session factory.\"\"\"\n    engine = get_engine()\n    return async_sessionmaker(\n        bind=engine,\n        expire_on_commit=False,\n    )  # type: ignore\n</code></pre>"},{"location":"api/python/infrastructure/database/engine/#_3","title":"\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f","text":""},{"location":"api/python/infrastructure/database/engine/#_4","title":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0432\u0438\u0436\u043a\u0430 \u0438 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0435\u0441\u0441\u0438\u0438","text":"<pre><code>from src.infrastructure.database.engine import get_engine, get_session_factory\n\n# \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u0432\u0438\u0436\u043a\u0430 (\u043a\u044d\u0448\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u043f\u0440\u0438 \u043f\u0435\u0440\u0432\u043e\u043c \u0432\u044b\u0437\u043e\u0432\u0435)\nengine = get_engine()\n\n# \u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0444\u0430\u0431\u0440\u0438\u043a\u0438 \u0441\u0435\u0441\u0441\u0438\u0439 (\u043a\u044d\u0448\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u043f\u0440\u0438 \u043f\u0435\u0440\u0432\u043e\u043c \u0432\u044b\u0437\u043e\u0432\u0435)\nsession_factory = get_session_factory()\n\n# \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0435\u0441\u0441\u0438\u0438\nasync with session_factory() as session:\n    # \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0431\u0430\u0437\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445\n    result = await session.execute(\"SELECT 1\")\n    print(await result.scalar())\n</code></pre>"},{"location":"api/python/infrastructure/database/engine/#_5","title":"\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438 \u043f\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044e","text":"<ol> <li>\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f</li> <li>\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u044b \u0434\u043e \u043f\u0435\u0440\u0432\u043e\u0433\u043e \u0432\u044b\u0437\u043e\u0432\u0430 <code>get_engine()</code></li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 <code>get_engine()</code> \u0438 <code>get_session_factory()</code> \u043a\u0430\u043a \u0444\u0430\u0431\u0440\u0438\u0447\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438</li> <li> <p>\u041d\u0435 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u043e\u0432 \u0434\u0432\u0438\u0436\u043a\u0430 \u0432 \u043e\u0434\u043d\u043e\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438</p> </li> <li> <p>\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f</p> </li> <li>\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u0442\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043f\u0443\u043b\u0430 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0439 \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u043e\u0439</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 <code>pool_pre_ping</code> \u0434\u043b\u044f \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u0440\u0430\u0437\u043e\u0440\u0432\u0430\u043d\u043d\u044b\u0445 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0439</li> <li> <p>\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u0435 \u0440\u0430\u0437\u0443\u043c\u043d\u044b\u0435 \u0442\u0430\u0439\u043c\u0430\u0443\u0442\u044b \u0434\u043b\u044f \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f</p> </li> <li> <p>\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a</p> </li> <li>\u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0439\u0442\u0435 \u0441\u043f\u0435\u0446\u0438\u0444\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f SQLAlchemy</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043d\u044b\u0435 \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440\u044b \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0441\u0435\u0441\u0441\u0438\u044f\u043c\u0438</li> <li>\u041b\u043e\u0433\u0438\u0440\u0443\u0439\u0442\u0435 \u043e\u0448\u0438\u0431\u043a\u0438 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f</li> </ol>"},{"location":"api/python/infrastructure/database/engine/#_6","title":"\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f","text":"<p>\u041c\u043e\u0434\u0443\u043b\u044c \u0438\u043d\u0442\u0435\u0433\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0441: - SQLAlchemy ORM - ASGI-\u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\u043c\u0438 - \u0421\u0438\u0441\u0442\u0435\u043c\u0430\u043c\u0438 \u043a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f (\u0447\u0435\u0440\u0435\u0437 <code>lru_cache</code>) - \u0421\u0438\u0441\u0442\u0435\u043c\u0430\u043c\u0438 \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f</p>"},{"location":"api/python/infrastructure/database/engine/#_7","title":"\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f","text":"<ul> <li>\u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f SQLAlchemy 1.4+</li> <li>\u0417\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0433\u043e \u0434\u0440\u0430\u0439\u0432\u0435\u0440\u0430 \u0411\u0414 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, asyncpg)</li> <li>\u041a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u0432\u0438\u0436\u043a\u0430 \u0438 \u0444\u0430\u0431\u0440\u0438\u043a\u0438 \u0441\u0435\u0441\u0441\u0438\u0439 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043d\u0435\u0436\u0435\u043b\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u0432 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u043c \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0438</li> </ul>"},{"location":"api/python/infrastructure/database/engine/#_8","title":"\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438","text":""},{"location":"api/python/infrastructure/database/engine/#_9","title":"\u041a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0434\u0432\u0438\u0436\u043a\u0430","text":"<pre><code>from sqlalchemy.ext.asyncio import create_async_engine\n\ndef create_custom_engine(url: str) -&gt; AsyncEngine:\n    return create_async_engine(\n        url,\n        pool_size=10,\n        max_overflow=20,\n        pool_timeout=30,\n        pool_pre_ping=True,\n        pool_recycle=3600,\n        connect_args={'command_timeout': 15},\n    )\n</code></pre>"},{"location":"api/python/infrastructure/database/engine/#_10","title":"\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f","text":"<pre><code>from src.infrastructure.database.exceptions import (\n    DatabaseConnectionError,\n    DatabaseTimeoutError,\n    DatabaseArgumentError\n)\n\ntry:\n    engine = get_engine()\nexcept DatabaseTimeoutError as e:\n    # \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0442\u0430\u0439\u043c\u0430\u0443\u0442\u0430 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f\n    logger.error(f\"\u0422\u0430\u0439\u043c\u0430\u0443\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a \u0411\u0414: {e}\")\n    raise\n</code></pre>"},{"location":"api/python/infrastructure/database/migrations/","title":"\u041c\u0438\u0433\u0440\u0430\u0446\u0438\u0438 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445","text":"<p>\u041c\u043e\u0434\u0443\u043b\u044c <code>migrations</code> \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0432\u0435\u0440\u0441\u0438\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0441\u0445\u0435\u043c\u044b \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c Alembic.</p>"},{"location":"api/python/infrastructure/database/migrations/#_2","title":"\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438","text":"<ul> <li>\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0445 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439 \u0441 \u0431\u0430\u0437\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445</li> <li>\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430\u043c\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f</li> <li>\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0439</li> <li>\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u043e\u0442\u043a\u0430\u0442\u0430 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439</li> <li>\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 Vault \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0441\u0435\u043a\u0440\u0435\u0442\u043e\u0432</li> </ul>"},{"location":"api/python/infrastructure/database/migrations/#api","title":"\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f API","text":""},{"location":"api/python/infrastructure/database/migrations/#envpy","title":"env.py","text":"<p>\u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u0441\u043a\u0440\u0438\u043f\u0442 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0439 Alembic.</p>"},{"location":"api/python/infrastructure/database/migrations/#src.infrastructure.database.migrations.env.get_sync_uri","title":"<code>get_sync_uri() -&gt; str</code>","text":"<p>\u041e\u0431\u0435\u0440\u0442\u043a\u0430 \u0434\u043b\u044f \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u0447\u0442\u043e\u0431\u044b \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u0432\u044b\u0437\u0432\u0430\u0442\u044c \u0432 sync-\u043a\u043e\u0434\u0435.</p> Source code in <code>src/infrastructure/database/migrations/env.py</code> <pre><code>def get_sync_uri() -&gt; str:\n    \"\"\"\u041e\u0431\u0435\u0440\u0442\u043a\u0430 \u0434\u043b\u044f \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u0438, \u0447\u0442\u043e\u0431\u044b \u043c\u043e\u0436\u043d\u043e \u0431\u044b\u043b\u043e \u0432\u044b\u0437\u0432\u0430\u0442\u044c \u0432 sync-\u043a\u043e\u0434\u0435.\"\"\"\n    return asyncio.get_event_loop().run_until_complete(init_settings_and_get_uri())\n</code></pre>"},{"location":"api/python/infrastructure/database/migrations/#src.infrastructure.database.migrations.env.init_settings_and_get_uri","title":"<code>init_settings_and_get_uri() -&gt; str</code>  <code>async</code>","text":"<p>\u041f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0441\u0435\u043a\u0440\u0435\u0442\u044b \u0438\u0437 Vault \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 PostgreSQL URI.</p> Source code in <code>src/infrastructure/database/migrations/env.py</code> <pre><code>async def init_settings_and_get_uri() -&gt; str:\n    \"\"\"\u041f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0441\u0435\u043a\u0440\u0435\u0442\u044b \u0438\u0437 Vault \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 PostgreSQL URI.\"\"\"\n    loader = SettingsLoader()\n    await loader.load()\n    settings = get_settings()\n    # Alembic \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 async \u0434\u0440\u0430\u0439\u0432\u0435\u0440, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0443\u0431\u0438\u0440\u0430\u0435\u043c \"+asyncpg\"\n    return settings.postgres_uri.replace('+asyncpg', '')\n</code></pre>"},{"location":"api/python/infrastructure/database/migrations/#init_settings_and_get_uri","title":"init_settings_and_get_uri","text":"<p>\u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 URI \u0434\u043b\u044f \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u043a \u0411\u0414.</p> <p>\u041f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0441\u0435\u043a\u0440\u0435\u0442\u044b \u0438\u0437 Vault \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 PostgreSQL URI.</p> Source code in <code>src/infrastructure/database/migrations/env.py</code> <pre><code>async def init_settings_and_get_uri() -&gt; str:\n    \"\"\"\u041f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0441\u0435\u043a\u0440\u0435\u0442\u044b \u0438\u0437 Vault \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 PostgreSQL URI.\"\"\"\n    loader = SettingsLoader()\n    await loader.load()\n    settings = get_settings()\n    # Alembic \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 async \u0434\u0440\u0430\u0439\u0432\u0435\u0440, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0443\u0431\u0438\u0440\u0430\u0435\u043c \"+asyncpg\"\n    return settings.postgres_uri.replace('+asyncpg', '')\n</code></pre>"},{"location":"api/python/infrastructure/database/migrations/#_3","title":"\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f","text":""},{"location":"api/python/infrastructure/database/migrations/#_4","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0439 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438","text":"<pre><code>alembic revision --autogenerate -m \"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439\"\n</code></pre>"},{"location":"api/python/infrastructure/database/migrations/#_5","title":"\u041f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0439","text":"<pre><code># \u041f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c \u0432\u0441\u0435 \u043d\u043e\u0432\u044b\u0435 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438\nalembic upgrade head\n\n# \u041e\u0442\u043a\u0430\u0442\u0438\u0442\u044c \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u044e\u044e \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u044e\nalembic downgrade -1\n\n# \u041f\u0440\u0438\u043c\u0435\u043d\u0438\u0442\u044c \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u0443\u044e \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u044e\nalembic upgrade &lt;revision&gt;\n</code></pre>"},{"location":"api/python/infrastructure/database/migrations/#_6","title":"\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0432\u0435\u0440\u0441\u0438\u0438","text":"<pre><code>alembic current\n</code></pre>"},{"location":"api/python/infrastructure/database/migrations/#_7","title":"\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438 \u043f\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044e","text":"<ol> <li>\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430</li> <li>\u0412\u0441\u0435\u0433\u0434\u0430 \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0439\u0442\u0435 \u043e\u0441\u043c\u044b\u0441\u043b\u0435\u043d\u043d\u044b\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f \u043a \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u044f\u043c</li> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0439\u0442\u0435 \u0441\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438 \u043f\u0435\u0440\u0435\u0434 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0435\u043c</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 <code>--autogenerate</code> \u0441 \u043e\u0441\u0442\u043e\u0440\u043e\u0436\u043d\u043e\u0441\u0442\u044c\u044e</li> <li> <p>\u0425\u0440\u0430\u043d\u0438\u0442\u0435 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0435 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044f \u0432\u0435\u0440\u0441\u0438\u0439</p> </li> <li> <p>\u0411\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u044c</p> </li> <li>\u041d\u0435 \u0432\u043a\u043b\u044e\u0447\u0430\u0439\u0442\u0435 \u0447\u0443\u0432\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0432 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u043a\u043e\u043d\u0444\u0438\u0434\u0435\u043d\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438</li> <li> <p>\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0439\u0442\u0435 SQL-\u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043f\u0435\u0440\u0435\u0434 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435\u043c \u0432 production</p> </li> <li> <p>\u041f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c</p> </li> <li>\u0414\u043b\u044f \u0431\u043e\u043b\u044c\u0448\u0438\u0445 \u0442\u0430\u0431\u043b\u0438\u0446 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 <code>batch_alter_table</code></li> <li>\u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0439\u0442\u0435 \u0438\u043d\u0434\u0435\u043a\u0441\u044b \u0434\u043b\u044f \u0447\u0430\u0441\u0442\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432</li> <li>\u0418\u0437\u0431\u0435\u0433\u0430\u0439\u0442\u0435 \u0431\u043b\u043e\u043a\u0438\u0440\u0443\u044e\u0449\u0438\u0445 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439 \u0432 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f\u0445</li> </ol>"},{"location":"api/python/infrastructure/database/migrations/#_8","title":"\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f","text":"<p>\u041c\u043e\u0434\u0443\u043b\u044c \u0438\u043d\u0442\u0435\u0433\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0441:</p> <ul> <li>SQLAlchemy ORM</li> <li>Alembic</li> <li>Vault \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0441\u0435\u043a\u0440\u0435\u0442\u0430\u043c\u0438</li> <li>\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430\u043c\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f</li> <li>\u0421\u0438\u0441\u0442\u0435\u043c\u0430\u043c\u0438 \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f</li> </ul>"},{"location":"api/python/infrastructure/database/migrations/#_9","title":"\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f","text":"<ul> <li>\u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f Alembic 1.8+</li> <li>\u0417\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0433\u043e \u0434\u0440\u0430\u0439\u0432\u0435\u0440\u0430 \u0411\u0414 \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0439</li> <li>\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u0442\u0440\u0435\u0431\u043e\u0432\u0430\u0442\u044c \u0440\u0443\u0447\u043d\u043e\u0439 \u0434\u043e\u0440\u0430\u0431\u043e\u0442\u043a\u0438</li> </ul>"},{"location":"api/python/infrastructure/database/migrations/#_10","title":"\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438","text":""},{"location":"api/python/infrastructure/database/migrations/#_11","title":"\u041a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u0435 \u0448\u0430\u0431\u043b\u043e\u043d\u044b \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0439","text":"<p>\u0428\u0430\u0431\u043b\u043e\u043d\u044b \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0439 \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0442\u044c \u0447\u0435\u0440\u0435\u0437 <code>script.py.mako</code>:</p> <pre><code>\"\"\"${message}\n\nRevision ID: ${up_revision}\nRevises: ${down_revision | comma,n}\nCreate Date: ${create_date}\n\"\"\"\nfrom alembic import op\nimport sqlalchemy as sa\n${imports if imports else \"\"}\n\n# revision identifiers, used by Alembic\nrevision = ${repr(up_revision)}\ndown_revision = ${repr(down_revision)}\n\n\ndef upgrade():\n    ${upgrades if upgrades else \"pass\"}\n\n\ndef downgrade():\n    ${downgrades if downgrades else \"pass\"}\n</code></pre>"},{"location":"api/python/infrastructure/database/migrations/#_12","title":"\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a","text":"<pre><code>try:\n    # \u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438\n    context.run_migrations()\nexcept Exception as e:\n    logger.error(f\"\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0438 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438: {e}\")\n    raise\n</code></pre>"},{"location":"api/python/infrastructure/database/migrations/#_13","title":"\u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u043d\u044b\u0435 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0438","text":""},{"location":"api/python/infrastructure/database/migrations/#_14","title":"\u041c\u0438\u0433\u0440\u0430\u0446\u0438\u044f \u0441 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445","text":"<pre><code>def upgrade():\n    # \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u044b\n    op.create_table(\n        'new_table',\n        sa.Column('id', sa.Integer(), nullable=False),\n        sa.Column('data', sa.String()),\n        sa.PrimaryKeyConstraint('id')\n    )\n\n    # \u041a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 \u0441\u0442\u0430\u0440\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u044b\n    connection = op.get_bind()\n    connection.execute(\"\"\"\n        INSERT INTO new_table (id, data)\n        SELECT id, old_data FROM old_table\n    \"\"\")\n\n    # \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0441\u0442\u0430\u0440\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u044b\n    op.drop_table('old_table')\n\n    # \u041f\u0435\u0440\u0435\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u043e\u0432\u043e\u0439 \u0442\u0430\u0431\u043b\u0438\u0446\u044b\n    op.rename_table('new_table', 'old_table')\n</code></pre>"},{"location":"api/python/infrastructure/database/migrations/#_15","title":"\u0423\u0441\u043b\u043e\u0432\u043d\u043e\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438","text":"<pre><code>def upgrade():\n    inspector = inspect(engine)\n    if 'old_table_name' in inspector.get_table_names():\n        # \u0412\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u044e \u0442\u043e\u043b\u044c\u043a\u043e \u0435\u0441\u043b\u0438 \u0442\u0430\u0431\u043b\u0438\u0446\u0430 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442\n        op.drop_table('old_table_name')\n</code></pre>"},{"location":"api/python/service_layer/dependencies/","title":"\u0417\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u0441\u0435\u0440\u0432\u0438\u0441\u043d\u043e\u0433\u043e \u0441\u043b\u043e\u044f","text":"<p>\u041c\u043e\u0434\u0443\u043b\u044c <code>dependencies</code> \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0444\u0430\u0431\u0440\u0438\u043a\u0438 \u0438 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u044b \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439 \u0434\u043b\u044f \u0441\u0435\u0440\u0432\u0438\u0441\u043d\u043e\u0433\u043e \u0441\u043b\u043e\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044f \u043f\u0430\u0442\u0442\u0435\u0440\u043d \u0432\u043d\u0435\u0434\u0440\u0435\u043d\u0438\u044f \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439.</p>"},{"location":"api/python/service_layer/dependencies/#_2","title":"\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438","text":"<ul> <li>\u041a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0447\u0430\u0441\u0442\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u0445 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439</li> <li>\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u0430\u044f \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439</li> <li>\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u0440\u0430\u0431\u043e\u0442\u044b (Unit of Work)</li> <li>\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f\u043c\u0438 \u0438 \u0441\u0435\u0440\u0432\u0438\u0441\u0430\u043c\u0438</li> <li>\u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0436\u0438\u0437\u043d\u0435\u043d\u043d\u044b\u043c \u0446\u0438\u043a\u043b\u043e\u043c \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439</li> </ul>"},{"location":"api/python/service_layer/dependencies/#api","title":"\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f API","text":""},{"location":"api/python/service_layer/dependencies/#get_settings","title":"get_settings","text":"<p>\u0424\u0430\u0431\u0440\u0438\u043a\u0430 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0441 \u043a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u043c.</p> Source code in <code>src/service_layer/dependencies.py</code> <pre><code>@lru_cache\ndef get_settings() -&gt; Settings:\n    return Settings()  # type: ignore\n</code></pre>"},{"location":"api/python/service_layer/dependencies/#get_uow","title":"get_uow","text":"<p>\u041f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440 \u0434\u043b\u044f \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u0440\u0430\u0431\u043e\u0442\u044b (Unit of Work).</p> Source code in <code>src/service_layer/dependencies.py</code> <pre><code>async def get_uow() -&gt; AbstractUnitOfWork:\n    return SqlAlchemyUnitOfWork(\n        session_factory=get_session_factory(),\n        repo_factory=await get_repo_factory(),\n    )\n</code></pre>"},{"location":"api/python/service_layer/dependencies/#get_repo_factory","title":"get_repo_factory","text":"<p>\u0424\u0430\u0431\u0440\u0438\u043a\u0430 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0435\u0432.</p> Source code in <code>src/service_layer/dependencies.py</code> <pre><code>async def get_repo_factory() -&gt; ABCUsersRepositoryFactory:\n    return SQLAlchemyUsersRepositoryFactory(await get_hasher())\n</code></pre>"},{"location":"api/python/service_layer/dependencies/#get_hasher","title":"get_hasher","text":"<p>\u041f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440 \u0434\u043b\u044f \u0441\u0435\u0440\u0432\u0438\u0441\u0430 \u0445\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u0430\u0440\u043e\u043b\u0435\u0439.</p> Source code in <code>src/service_layer/dependencies.py</code> <pre><code>async def get_hasher() -&gt; IPasswordHasher:\n    return UserPasswordHasher()\n</code></pre>"},{"location":"api/python/service_layer/dependencies/#get_user_service","title":"get_user_service","text":"<p>\u0424\u0430\u0431\u0440\u0438\u043a\u0430 \u0434\u043b\u044f \u0441\u0435\u0440\u0432\u0438\u0441\u0430 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438.</p> Source code in <code>src/service_layer/dependencies.py</code> <pre><code>async def get_user_service() -&gt; UserService:\n    uow = await get_uow()\n    hasher = await get_hasher()\n    return UserService(uow=uow, hasher=hasher)\n</code></pre>"},{"location":"api/python/service_layer/dependencies/#_3","title":"\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f","text":""},{"location":"api/python/service_layer/dependencies/#fastapi","title":"\u0411\u0430\u0437\u043e\u0432\u043e\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0432 FastAPI","text":"<pre><code>from fastapi import APIRouter, Depends\nfrom src.service_layer.dependencies import get_user_service\nfrom src.service_layer.users_service import UserService\n\nrouter = APIRouter()\n\n@router.get(\"/users/{user_id}\")\nasync def get_user(\n    user_id: int,\n    user_service: UserService = Depends(get_user_service)\n):\n    user = await user_service.get_user(user_id)\n    return {\"user\": user}\n</code></pre>"},{"location":"api/python/service_layer/dependencies/#_4","title":"\u041a\u0430\u0441\u0442\u043e\u043c\u0438\u0437\u0430\u0446\u0438\u044f \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439","text":"<pre><code>from functools import lru_cache\nfrom src.service_layer.dependencies import get_settings, get_hasher\nfrom src.adapters.factory import CustomUsersRepositoryFactory\n\n# \u041f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u0444\u0430\u0431\u0440\u0438\u043a\u0438 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0435\u0432\nasync def get_custom_repo_factory():\n    hasher = await get_hasher()\n    return CustomUsersRepositoryFactory(hasher)\n\n# \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u043e\u0439 \u0444\u0430\u0431\u0440\u0438\u043a\u0438\n@lru_cache\ndef get_custom_settings():\n    settings = get_settings()\n    # \u041c\u043e\u0434\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a\n    settings.DEBUG = True\n    return settings\n</code></pre>"},{"location":"api/python/service_layer/dependencies/#_5","title":"\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438 \u043f\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044e","text":"<ol> <li>\u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044f\u043c\u0438</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 <code>lru_cache</code> \u0434\u043b\u044f \u0434\u043e\u0440\u043e\u0433\u0438\u0445 \u0432 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0438 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439</li> <li>\u0420\u0430\u0437\u0434\u0435\u043b\u044f\u0439\u0442\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043f\u043e \u0443\u0440\u043e\u0432\u043d\u044f\u043c \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0446\u0438\u0438</li> <li> <p>\u0418\u0437\u0431\u0435\u0433\u0430\u0439\u0442\u0435 \u0446\u0438\u043a\u043b\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0438\u043c\u043f\u043e\u0440\u0442\u043e\u0432</p> </li> <li> <p>\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435</p> </li> <li>\u0417\u0430\u043c\u0435\u043d\u044f\u0439\u0442\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043d\u0430 \u043c\u043e\u043a\u0438 \u0432 \u0442\u0435\u0441\u0442\u0430\u0445</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0444\u0438\u043a\u0441\u0442\u0443\u0440\u044b \u0434\u043b\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u043e\u0433\u043e \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f</li> <li> <p>\u0418\u0437\u043e\u043b\u0438\u0440\u0443\u0439\u0442\u0435 \u0442\u0435\u0441\u0442\u044b \u0434\u0440\u0443\u0433 \u043e\u0442 \u0434\u0440\u0443\u0433\u0430</p> </li> <li> <p>\u041f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c</p> </li> <li>\u041a\u044d\u0448\u0438\u0440\u0443\u0439\u0442\u0435 \u0442\u044f\u0436\u0435\u043b\u044b\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u043b\u0435\u043d\u0438\u0432\u0443\u044e \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0443, \u0433\u0434\u0435 \u044d\u0442\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e</li> <li>\u0418\u0437\u0431\u0435\u0433\u0430\u0439\u0442\u0435 \u0431\u043b\u043e\u043a\u0438\u0440\u0443\u044e\u0449\u0438\u0445 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439 \u043f\u0440\u0438 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438</li> </ol>"},{"location":"api/python/service_layer/dependencies/#_6","title":"\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f","text":"<p>\u041c\u043e\u0434\u0443\u043b\u044c \u0438\u043d\u0442\u0435\u0433\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0441:</p> <ul> <li>FastAPI \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\u043c\u0438</li> <li>SQLAlchemy ORM</li> <li>\u0421\u0438\u0441\u0442\u0435\u043c\u043e\u0439 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438</li> <li>\u0421\u0435\u0440\u0432\u0438\u0441\u043d\u044b\u043c \u0441\u043b\u043e\u0435\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f</li> <li>\u0420\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f\u043c\u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0434\u0430\u043d\u043d\u044b\u043c</li> </ul>"},{"location":"api/python/service_layer/dependencies/#_7","title":"\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f","text":"<ul> <li>\u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f Python 3.8+</li> <li>\u0417\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 FastAPI \u0438 SQLAlchemy</li> <li>\u041f\u0440\u0435\u0434\u043f\u043e\u043b\u0430\u0433\u0430\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0433\u043e \u043a\u043e\u0434\u0430</li> </ul>"},{"location":"api/python/service_layer/dependencies/#_8","title":"\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438","text":""},{"location":"api/python/service_layer/dependencies/#_9","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u044b\u0445 \u043f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440\u043e\u0432","text":"<pre><code>from typing import Any\nfrom fastapi import Depends\nfrom sqlalchemy.ext.asyncio import AsyncSession\n\nasync def get_db_session() -&gt; AsyncSession:\n    \"\"\"\u041f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440 \u0441\u0435\u0441\u0441\u0438\u0438 \u0411\u0414 \u0441 \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u043c \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435\u043c \u0436\u0438\u0437\u043d\u0435\u043d\u043d\u044b\u043c \u0446\u0438\u043a\u043b\u043e\u043c.\"\"\"\n    session_factory = get_session_factory()\n    async with session_factory() as session:\n        try:\n            yield session\n            await session.commit()\n        except Exception:\n            await session.rollback()\n            raise\n\n# \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044f\u0445\nasync def get_user_service(\n    session: AsyncSession = Depends(get_db_session)\n) -&gt; UserService:\n    return UserService(session=session)\n</code></pre>"},{"location":"api/python/service_layer/dependencies/#_10","title":"\u041a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439","text":"<pre><code>from functools import lru_cache\nfrom src.service_layer.dependencies import get_settings\n\n@lru_cache\ndef get_cached_service():\n    \"\"\"\u041f\u0440\u0438\u043c\u0435\u0440 \u043a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0441\u0435\u0440\u0432\u0438\u0441\u0430 \u0441 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430\u043c\u0438.\"\"\"\n    settings = get_settings()\n    return SomeService(settings)\n\n# \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0432 FastAPI \u043c\u0430\u0440\u0448\u0440\u0443\u0442\u0435\n@router.get(\"/some-route\")\nasync def some_route(\n    service: SomeService = Depends(get_cached_service)\n):\n    result = await service.do_something()\n    return {\"result\": result}\n</code></pre>"},{"location":"api/python/service_layer/uow/","title":"Unit of Work (\u0415\u0434\u0438\u043d\u0438\u0446\u0430 \u0440\u0430\u0431\u043e\u0442\u044b)","text":"<p>\u041c\u043e\u0434\u0443\u043b\u044c <code>uow</code> \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u0442 \u043f\u0430\u0442\u0442\u0435\u0440\u043d \"Unit of Work\" \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f\u043c\u0438 \u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f\u043c \u0432 \u0441\u0435\u0440\u0432\u0438\u0441\u043d\u043e\u043c \u0441\u043b\u043e\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.</p>"},{"location":"api/python/service_layer/uow/#_1","title":"\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438","text":"<ul> <li>\u0410\u0431\u0441\u0442\u0440\u0430\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f\u043c\u0438</li> <li>\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0445 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439</li> <li>\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 SQLAlchemy</li> <li>\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0436\u0438\u0437\u043d\u0435\u043d\u043d\u044b\u043c \u0446\u0438\u043a\u043b\u043e\u043c \u0441\u0435\u0441\u0441\u0438\u0438</li> <li>\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u043e\u0442\u043a\u0430\u0442\u0430 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439</li> </ul>"},{"location":"api/python/service_layer/uow/#api","title":"\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f API","text":""},{"location":"api/python/service_layer/uow/#abstractunitofwork","title":"AbstractUnitOfWork","text":"<p>\u0410\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u044b\u0439 \u0431\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 \u0434\u043b\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u0430\u0442\u0442\u0435\u0440\u043d\u0430 Unit of Work.</p> <p>               Bases: <code>ABC</code></p> <p>\u0410\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u044b\u0439 \u0431\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 Unit of Work (\u0415\u0434\u0438\u043d\u0438\u0446\u0430 \u0440\u0430\u0431\u043e\u0442\u044b).</p> <p>\u041f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f\u043c\u0438 \u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f\u043c.</p> \u0410\u0442\u0440\u0438\u0431\u0443\u0442\u044b <p>users: \u0420\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438.</p> Source code in <code>src/service_layer/uow.py</code> <pre><code>class AbstractUnitOfWork(abc.ABC):\n    \"\"\"\u0410\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u044b\u0439 \u0431\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 Unit of Work (\u0415\u0434\u0438\u043d\u0438\u0446\u0430 \u0440\u0430\u0431\u043e\u0442\u044b).\n\n    \u041f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f\u043c\u0438 \u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f\u043c.\n\n    \u0410\u0442\u0440\u0438\u0431\u0443\u0442\u044b:\n        users: \u0420\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438.\n    \"\"\"\n\n    users: ABCUsersRepository\n\n    async def __aenter__(self) -&gt; 'AbstractUnitOfWork':\n        \"\"\"\u0412\u0445\u043e\u0434 \u0432 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043d\u044b\u0439 \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440.\n\n        Returns:\n            AbstractUnitOfWork: \u0422\u0435\u043a\u0443\u0449\u0438\u0439 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 Unit of Work.\n\n        \"\"\"\n        return self\n\n    async def __aexit__(self, *args) -&gt; None:\n        \"\"\"\u0412\u044b\u0445\u043e\u0434 \u0438\u0437 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043d\u043e\u0433\u043e \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440\u0430 \u0441 \u043e\u0442\u043a\u0430\u0442\u043e\u043c \u043d\u0435\u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u043d\u044b\u0445 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439.\n\n        Args:\n            *args: \u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f, \u0435\u0441\u043b\u0438 \u043e\u043d\u043e \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u043e \u0432 \u0431\u043b\u043e\u043a\u0435 with.\n\n        \"\"\"\n        await self.rollback()\n\n    async def commit(self) -&gt; None:\n        \"\"\"\u0424\u0438\u043a\u0441\u0438\u0440\u0443\u0435\u0442 \u0432\u0441\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u0440\u0430\u0431\u043e\u0442\u044b.\n\n        Raises:\n            Exception: \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0444\u0438\u043a\u0441\u0430\u0446\u0438\u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439.\n\n        \"\"\"\n        await self._commit()\n\n    @abc.abstractmethod\n    async def _commit(self) -&gt; None:\n        \"\"\"\u0410\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0444\u0438\u043a\u0441\u0430\u0446\u0438\u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439.\n\n        \u0414\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0430\u0445 \u0434\u043b\u044f \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0439 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438.\n\n        Raises:\n            NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n        \"\"\"\n        raise NotImplementedError\n\n    @abc.abstractmethod\n    async def rollback(self) -&gt; None:\n        \"\"\"\u0410\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043e\u0442\u043a\u0430\u0442\u0430 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439.\n\n        \u0414\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0430\u0445 \u0434\u043b\u044f \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0439 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438.\n\n        Raises:\n            NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n        \"\"\"\n        raise NotImplementedError\n</code></pre>"},{"location":"api/python/service_layer/uow/#src.service_layer.uow.AbstractUnitOfWork.__aenter__","title":"<code>__aenter__() -&gt; AbstractUnitOfWork</code>  <code>async</code>","text":"<p>\u0412\u0445\u043e\u0434 \u0432 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043d\u044b\u0439 \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440.</p> <p>Returns:</p> Name Type Description <code>AbstractUnitOfWork</code> <code>AbstractUnitOfWork</code> <p>\u0422\u0435\u043a\u0443\u0449\u0438\u0439 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 Unit of Work.</p> Source code in <code>src/service_layer/uow.py</code> <pre><code>async def __aenter__(self) -&gt; 'AbstractUnitOfWork':\n    \"\"\"\u0412\u0445\u043e\u0434 \u0432 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043d\u044b\u0439 \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440.\n\n    Returns:\n        AbstractUnitOfWork: \u0422\u0435\u043a\u0443\u0449\u0438\u0439 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 Unit of Work.\n\n    \"\"\"\n    return self\n</code></pre>"},{"location":"api/python/service_layer/uow/#src.service_layer.uow.AbstractUnitOfWork.__aexit__","title":"<code>__aexit__(*args) -&gt; None</code>  <code>async</code>","text":"<p>\u0412\u044b\u0445\u043e\u0434 \u0438\u0437 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043d\u043e\u0433\u043e \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440\u0430 \u0441 \u043e\u0442\u043a\u0430\u0442\u043e\u043c \u043d\u0435\u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u043d\u044b\u0445 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439.</p> <p>Parameters:</p> Name Type Description Default <code>*args</code> <p>\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f, \u0435\u0441\u043b\u0438 \u043e\u043d\u043e \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u043e \u0432 \u0431\u043b\u043e\u043a\u0435 with.</p> <code>()</code> Source code in <code>src/service_layer/uow.py</code> <pre><code>async def __aexit__(self, *args) -&gt; None:\n    \"\"\"\u0412\u044b\u0445\u043e\u0434 \u0438\u0437 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043d\u043e\u0433\u043e \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440\u0430 \u0441 \u043e\u0442\u043a\u0430\u0442\u043e\u043c \u043d\u0435\u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u043d\u044b\u0445 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439.\n\n    Args:\n        *args: \u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f, \u0435\u0441\u043b\u0438 \u043e\u043d\u043e \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u043e \u0432 \u0431\u043b\u043e\u043a\u0435 with.\n\n    \"\"\"\n    await self.rollback()\n</code></pre>"},{"location":"api/python/service_layer/uow/#src.service_layer.uow.AbstractUnitOfWork.commit","title":"<code>commit() -&gt; None</code>  <code>async</code>","text":"<p>\u0424\u0438\u043a\u0441\u0438\u0440\u0443\u0435\u0442 \u0432\u0441\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u0440\u0430\u0431\u043e\u0442\u044b.</p> <p>Raises:</p> Type Description <code>Exception</code> <p>\u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0444\u0438\u043a\u0441\u0430\u0446\u0438\u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439.</p> Source code in <code>src/service_layer/uow.py</code> <pre><code>async def commit(self) -&gt; None:\n    \"\"\"\u0424\u0438\u043a\u0441\u0438\u0440\u0443\u0435\u0442 \u0432\u0441\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0435\u0434\u0438\u043d\u0438\u0446\u044b \u0440\u0430\u0431\u043e\u0442\u044b.\n\n    Raises:\n        Exception: \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0444\u0438\u043a\u0441\u0430\u0446\u0438\u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439.\n\n    \"\"\"\n    await self._commit()\n</code></pre>"},{"location":"api/python/service_layer/uow/#src.service_layer.uow.AbstractUnitOfWork.rollback","title":"<code>rollback() -&gt; None</code>  <code>abstractmethod</code> <code>async</code>","text":"<p>\u0410\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043e\u0442\u043a\u0430\u0442\u0430 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439.</p> <p>\u0414\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0430\u0445 \u0434\u043b\u044f \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0439 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438.</p> <p>Raises:</p> Type Description <code>NotImplementedError</code> <p>\u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.</p> Source code in <code>src/service_layer/uow.py</code> <pre><code>@abc.abstractmethod\nasync def rollback(self) -&gt; None:\n    \"\"\"\u0410\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u044b\u0439 \u043c\u0435\u0442\u043e\u0434 \u0434\u043b\u044f \u043e\u0442\u043a\u0430\u0442\u0430 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439.\n\n    \u0414\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0430\u0445 \u0434\u043b\u044f \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0439 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438.\n\n    Raises:\n        NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n    \"\"\"\n    raise NotImplementedError\n</code></pre>"},{"location":"api/python/service_layer/uow/#sqlalchemyunitofwork","title":"SqlAlchemyUnitOfWork","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f Unit of Work \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 SQLAlchemy.</p> <p>               Bases: <code>AbstractUnitOfWork</code></p> <p>Unit of Work \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 SQLAlchemy.</p> <p>\u041e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0441\u0435\u0441\u0441\u0438\u044f\u043c\u0438 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f\u043c\u0438 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c SQLAlchemy.</p> Source code in <code>src/service_layer/uow.py</code> <pre><code>class SqlAlchemyUnitOfWork(AbstractUnitOfWork):\n    \"\"\"Unit of Work \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 SQLAlchemy.\n\n    \u041e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0441\u0435\u0441\u0441\u0438\u044f\u043c\u0438 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f\u043c\u0438\n    \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c SQLAlchemy.\n    \"\"\"\n\n    def __init__(\n        self,\n        session_factory: async_sessionmaker[AsyncSession],\n        repo_factory: ABCUsersRepositoryFactory,\n    ) -&gt; None:\n        \"\"\"\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f SqlAlchemyUnitOfWork.\n\n        Args:\n            session_factory: \u0424\u0430\u0431\u0440\u0438\u043a\u0430 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0445 \u0441\u0435\u0441\u0441\u0438\u0439 SQLAlchemy.\n            repo_factory: \u0424\u0430\u0434\u0440\u0438\u043a\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438\n\n        \"\"\"\n        self.session_factory = session_factory\n        self.repo_factory = repo_factory\n\n    async def __aenter__(self) -&gt; 'AbstractUnitOfWork':\n        \"\"\"\u0412\u0445\u043e\u0434 \u0432 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043d\u044b\u0439 \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440.\n\n        \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u0441\u0435\u0441\u0441\u0438\u044e \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0438.\n\n        Returns:\n            SqlAlchemyUnitOfWork: \u0422\u0435\u043a\u0443\u0449\u0438\u0439 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 Unit of Work.\n\n        \"\"\"\n        self.session: AsyncSession = self.session_factory()\n        self.users = self.repo_factory.create(self.session)\n        return await super().__aenter__()\n\n    async def __aexit__(self, exc_type, exc_val, exc_tb) -&gt; None:\n        \"\"\"\u0412\u044b\u0445\u043e\u0434 \u0438\u0437 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043d\u043e\u0433\u043e \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440\u0430.\n\n        \u041f\u0440\u0438 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u0438 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043e\u0442\u043a\u0430\u0442 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439,\n        \u0438\u043d\u0430\u0447\u0435 \u0444\u0438\u043a\u0441\u0438\u0440\u0443\u0435\u0442 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f. \u0412 \u043b\u044e\u0431\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0441\u0435\u0441\u0441\u0438\u044e.\n\n        Args:\n            exc_type: \u0422\u0438\u043f \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f, \u0435\u0441\u043b\u0438 \u043e\u043d\u043e \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u043e, \u0438\u043d\u0430\u0447\u0435 None.\n            exc_val: \u042d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f, \u0435\u0441\u043b\u0438 \u043e\u043d\u043e \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u043e, \u0438\u043d\u0430\u0447\u0435 None.\n            exc_tb: \u0422\u0440\u0430\u0441\u0441\u0438\u0440\u043e\u0432\u043a\u0430 \u0441\u0442\u0435\u043a\u0430, \u0435\u0441\u043b\u0438 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u043e, \u0438\u043d\u0430\u0447\u0435 None.\n\n        \"\"\"\n        if exc_type:\n            await self.rollback()\n        else:\n            await self._commit()\n        await self.session.close()\n\n    async def _commit(self) -&gt; None:\n        \"\"\"\u0424\u0438\u043a\u0441\u0438\u0440\u0443\u0435\u0442 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0432 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445.\n\n        Raises:\n            SQLAlchemyError: \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0444\u0438\u043a\u0441\u0430\u0446\u0438\u0438 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438.\n\n        \"\"\"\n        await self.session.commit()\n\n    async def rollback(self) -&gt; None:\n        \"\"\"\u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043e\u0442\u043a\u0430\u0442 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438.\n\n        \u041e\u0442\u043c\u0435\u043d\u044f\u0435\u0442 \u0432\u0441\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f, \u0441\u0434\u0435\u043b\u0430\u043d\u043d\u044b\u0435 \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0441\u0435\u0441\u0441\u0438\u0438.\n        \"\"\"\n        await self.session.rollback()\n</code></pre>"},{"location":"api/python/service_layer/uow/#src.service_layer.uow.SqlAlchemyUnitOfWork.__aenter__","title":"<code>__aenter__() -&gt; AbstractUnitOfWork</code>  <code>async</code>","text":"<p>\u0412\u0445\u043e\u0434 \u0432 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043d\u044b\u0439 \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440.</p> <p>\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u0441\u0435\u0441\u0441\u0438\u044e \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0438.</p> <p>Returns:</p> Name Type Description <code>SqlAlchemyUnitOfWork</code> <code>AbstractUnitOfWork</code> <p>\u0422\u0435\u043a\u0443\u0449\u0438\u0439 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 Unit of Work.</p> Source code in <code>src/service_layer/uow.py</code> <pre><code>async def __aenter__(self) -&gt; 'AbstractUnitOfWork':\n    \"\"\"\u0412\u0445\u043e\u0434 \u0432 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043d\u044b\u0439 \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440.\n\n    \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u0441\u0435\u0441\u0441\u0438\u044e \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0438.\n\n    Returns:\n        SqlAlchemyUnitOfWork: \u0422\u0435\u043a\u0443\u0449\u0438\u0439 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 Unit of Work.\n\n    \"\"\"\n    self.session: AsyncSession = self.session_factory()\n    self.users = self.repo_factory.create(self.session)\n    return await super().__aenter__()\n</code></pre>"},{"location":"api/python/service_layer/uow/#src.service_layer.uow.SqlAlchemyUnitOfWork.__aexit__","title":"<code>__aexit__(exc_type, exc_val, exc_tb) -&gt; None</code>  <code>async</code>","text":"<p>\u0412\u044b\u0445\u043e\u0434 \u0438\u0437 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043d\u043e\u0433\u043e \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440\u0430.</p> <p>\u041f\u0440\u0438 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u0438 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043e\u0442\u043a\u0430\u0442 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439, \u0438\u043d\u0430\u0447\u0435 \u0444\u0438\u043a\u0441\u0438\u0440\u0443\u0435\u0442 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f. \u0412 \u043b\u044e\u0431\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0441\u0435\u0441\u0441\u0438\u044e.</p> <p>Parameters:</p> Name Type Description Default <code>exc_type</code> <p>\u0422\u0438\u043f \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f, \u0435\u0441\u043b\u0438 \u043e\u043d\u043e \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u043e, \u0438\u043d\u0430\u0447\u0435 None.</p> required <code>exc_val</code> <p>\u042d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f, \u0435\u0441\u043b\u0438 \u043e\u043d\u043e \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u043e, \u0438\u043d\u0430\u0447\u0435 None.</p> required <code>exc_tb</code> <p>\u0422\u0440\u0430\u0441\u0441\u0438\u0440\u043e\u0432\u043a\u0430 \u0441\u0442\u0435\u043a\u0430, \u0435\u0441\u043b\u0438 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u043e, \u0438\u043d\u0430\u0447\u0435 None.</p> required Source code in <code>src/service_layer/uow.py</code> <pre><code>async def __aexit__(self, exc_type, exc_val, exc_tb) -&gt; None:\n    \"\"\"\u0412\u044b\u0445\u043e\u0434 \u0438\u0437 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043d\u043e\u0433\u043e \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440\u0430.\n\n    \u041f\u0440\u0438 \u0432\u043e\u0437\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u0438 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043e\u0442\u043a\u0430\u0442 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439,\n    \u0438\u043d\u0430\u0447\u0435 \u0444\u0438\u043a\u0441\u0438\u0440\u0443\u0435\u0442 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f. \u0412 \u043b\u044e\u0431\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0435\u0442 \u0441\u0435\u0441\u0441\u0438\u044e.\n\n    Args:\n        exc_type: \u0422\u0438\u043f \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f, \u0435\u0441\u043b\u0438 \u043e\u043d\u043e \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u043e, \u0438\u043d\u0430\u0447\u0435 None.\n        exc_val: \u042d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f, \u0435\u0441\u043b\u0438 \u043e\u043d\u043e \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u043e, \u0438\u043d\u0430\u0447\u0435 None.\n        exc_tb: \u0422\u0440\u0430\u0441\u0441\u0438\u0440\u043e\u0432\u043a\u0430 \u0441\u0442\u0435\u043a\u0430, \u0435\u0441\u043b\u0438 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u043e, \u0438\u043d\u0430\u0447\u0435 None.\n\n    \"\"\"\n    if exc_type:\n        await self.rollback()\n    else:\n        await self._commit()\n    await self.session.close()\n</code></pre>"},{"location":"api/python/service_layer/uow/#src.service_layer.uow.SqlAlchemyUnitOfWork.__init__","title":"<code>__init__(session_factory: async_sessionmaker[AsyncSession], repo_factory: ABCUsersRepositoryFactory) -&gt; None</code>","text":"<p>\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f SqlAlchemyUnitOfWork.</p> <p>Parameters:</p> Name Type Description Default <code>session_factory</code> <code>async_sessionmaker[AsyncSession]</code> <p>\u0424\u0430\u0431\u0440\u0438\u043a\u0430 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0445 \u0441\u0435\u0441\u0441\u0438\u0439 SQLAlchemy.</p> required <code>repo_factory</code> <code>ABCUsersRepositoryFactory</code> <p>\u0424\u0430\u0434\u0440\u0438\u043a\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438</p> required Source code in <code>src/service_layer/uow.py</code> <pre><code>def __init__(\n    self,\n    session_factory: async_sessionmaker[AsyncSession],\n    repo_factory: ABCUsersRepositoryFactory,\n) -&gt; None:\n    \"\"\"\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f SqlAlchemyUnitOfWork.\n\n    Args:\n        session_factory: \u0424\u0430\u0431\u0440\u0438\u043a\u0430 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0445 \u0441\u0435\u0441\u0441\u0438\u0439 SQLAlchemy.\n        repo_factory: \u0424\u0430\u0434\u0440\u0438\u043a\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0434\u0430\u043d\u043d\u044b\u043c\u0438\n\n    \"\"\"\n    self.session_factory = session_factory\n    self.repo_factory = repo_factory\n</code></pre>"},{"location":"api/python/service_layer/uow/#src.service_layer.uow.SqlAlchemyUnitOfWork.rollback","title":"<code>rollback() -&gt; None</code>  <code>async</code>","text":"<p>\u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043e\u0442\u043a\u0430\u0442 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438.</p> <p>\u041e\u0442\u043c\u0435\u043d\u044f\u0435\u0442 \u0432\u0441\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f, \u0441\u0434\u0435\u043b\u0430\u043d\u043d\u044b\u0435 \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0441\u0435\u0441\u0441\u0438\u0438.</p> Source code in <code>src/service_layer/uow.py</code> <pre><code>async def rollback(self) -&gt; None:\n    \"\"\"\u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442 \u043e\u0442\u043a\u0430\u0442 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u0438.\n\n    \u041e\u0442\u043c\u0435\u043d\u044f\u0435\u0442 \u0432\u0441\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f, \u0441\u0434\u0435\u043b\u0430\u043d\u043d\u044b\u0435 \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0441\u0435\u0441\u0441\u0438\u0438.\n    \"\"\"\n    await self.session.rollback()\n</code></pre>"},{"location":"api/python/service_layer/uow/#_2","title":"\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f","text":""},{"location":"api/python/service_layer/uow/#_3","title":"\u0411\u0430\u0437\u043e\u0432\u043e\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435","text":"<pre><code>from sqlalchemy.ext.asyncio import async_sessionmaker\nfrom src.service_layer.uow import SqlAlchemyUnitOfWork\nfrom src.adapters.factory import SQLAlchemyUsersRepositoryFactory\n\n# \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0444\u0430\u0431\u0440\u0438\u043a\u0438 \u0441\u0435\u0441\u0441\u0438\u0439 \u0438 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0435\u0432\nsession_factory = async_sessionmaker(engine, expire_on_commit=False)\nrepo_factory = SQLAlchemyUsersRepositoryFactory(hasher)\n\n# \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 Unit of Work\nasync with SqlAlchemyUnitOfWork(session_factory, repo_factory) as uow:\n    # \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438 \u0447\u0435\u0440\u0435\u0437 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439\n    user = await uow.users.get_by_email(\"user@example.com\")\n    user.update_last_login()\n\n    # \u0424\u0438\u043a\u0441\u0430\u0446\u0438\u044f \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439\n    await uow.commit()\n</code></pre>"},{"location":"api/python/service_layer/uow/#_4","title":"\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a","text":"<pre><code>from sqlalchemy import exc\n\ntry:\n    async with SqlAlchemyUnitOfWork(session_factory, repo_factory) as uow:\n        user = await uow.users.get_by_id(1)\n        user.balance -= amount\n        await uow.commit()\nexcept exc.SQLAlchemyError as e:\n    logger.error(f\"\u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u0438 \u0431\u0430\u043b\u0430\u043d\u0441\u0430: {e}\")\n    raise\n</code></pre>"},{"location":"api/python/service_layer/uow/#_5","title":"\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438 \u043f\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044e","text":"<ol> <li>\u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f\u043c\u0438</li> <li>\u0412\u0441\u0435\u0433\u0434\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 <code>commit()</code> \u0434\u043b\u044f \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439</li> <li>\u041e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0439\u0442\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 <code>rollback()</code> \u043f\u0440\u0438 \u043e\u0448\u0438\u0431\u043a\u0430\u0445</li> <li> <p>\u0418\u0437\u0431\u0435\u0433\u0430\u0439\u0442\u0435 \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0445 \u0431\u043b\u043e\u043a\u043e\u0432 Unit of Work</p> </li> <li> <p>\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f\u043c\u0438</p> </li> <li>\u041f\u043e\u043b\u0443\u0447\u0430\u0439\u0442\u0435 \u0434\u043e\u0441\u0442\u0443\u043f \u043a \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f\u043c \u0447\u0435\u0440\u0435\u0437 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u044b UoW</li> <li>\u041d\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0439\u0442\u0435 \u0441\u0441\u044b\u043b\u043a\u0438 \u043d\u0430 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0438 \u0432\u043d\u0435 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0430 UoW</li> <li> <p>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0444\u0430\u0431\u0440\u0438\u043a\u0438 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0435\u0432 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u043e\u0432</p> </li> <li> <p>\u041f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c</p> </li> <li>\u041c\u0438\u043d\u0438\u043c\u0438\u0437\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0440\u0435\u043c\u044f \u0443\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u044f \u0441\u0435\u0441\u0441\u0438\u0438</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 <code>expire_on_commit=False</code> \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u044f \u043b\u0438\u0448\u043d\u0438\u0445 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432</li> <li>\u0418\u0437\u0431\u0435\u0433\u0430\u0439\u0442\u0435 N+1 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u043f\u0440\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435 \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0445 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0435\u0439</li> </ol>"},{"location":"api/python/service_layer/uow/#_6","title":"\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f","text":"<p>\u041c\u043e\u0434\u0443\u043b\u044c \u0438\u043d\u0442\u0435\u0433\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0441:</p> <ul> <li>SQLAlchemy ORM</li> <li>\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u043c\u0438 \u0441\u0435\u0441\u0441\u0438\u044f\u043c\u0438 SQLAlchemy</li> <li>\u0420\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f\u043c\u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u0434\u0430\u043d\u043d\u044b\u043c</li> <li>\u0421\u0435\u0440\u0432\u0438\u0441\u043d\u044b\u043c \u0441\u043b\u043e\u0435\u043c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f</li> <li>\u0421\u0438\u0441\u0442\u0435\u043c\u043e\u0439 \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f</li> </ul>"},{"location":"api/python/service_layer/uow/#_7","title":"\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f","text":"<ul> <li>\u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f Python 3.8+</li> <li>\u0417\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 SQLAlchemy \u0441 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u043e\u0439 \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0441\u0442\u0438</li> <li>\u041f\u0440\u0435\u0434\u043f\u043e\u043b\u0430\u0433\u0430\u0435\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043d\u044b\u0445 \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440\u043e\u0432</li> </ul>"},{"location":"api/python/service_layer/uow/#_8","title":"\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438","text":""},{"location":"api/python/service_layer/uow/#unit-of-work_1","title":"\u041a\u0430\u0441\u0442\u043e\u043c\u043d\u0430\u044f \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f Unit of Work","text":"<pre><code>from typing import Any\nfrom contextlib import asynccontextmanager\n\nclass CustomUnitOfWork(AbstractUnitOfWork):\n    def __init__(self, connection_string: str):\n        self.connection_string = connection_string\n        self.connection = None\n        self.transaction = None\n        self.users = CustomUsersRepository()\n\n    async def __aenter__(self):\n        self.connection = await create_connection(self.connection_string)\n        self.transaction = self.connection.begin()\n        return self\n\n    async def _commit(self):\n        await self.transaction.commit()\n\n    async def rollback(self):\n        if self.transaction:\n            await self.transaction.rollback()\n\n    async def __aexit__(self, exc_type, exc_val, exc_tb):\n        if exc_type:\n            await self.rollback()\n        if self.connection:\n            await self.connection.close()\n</code></pre>"},{"location":"api/python/service_layer/uow/#fastapi","title":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0441 FastAPI","text":"<pre><code>from fastapi import Depends\nfrom sqlalchemy.ext.asyncio import async_sessionmaker\nfrom src.service_layer.uow import SqlAlchemyUnitOfWork\n\nasync def get_uow() -&gt; SqlAlchemyUnitOfWork:\n    session_factory = async_sessionmaker(engine, expire_on_commit=False)\n    repo_factory = SQLAlchemyUsersRepositoryFactory(hasher)\n    return SqlAlchemyUnitOfWork(session_factory, repo_factory)\n\n@router.post(\"/users/{user_id}/update\")\nasync def update_user(\n    user_id: int,\n    data: UserUpdate,\n    uow: SqlAlchemyUnitOfWork = Depends(get_uow)\n):\n    async with uow:\n        user = await uow.users.get_by_id(user_id)\n        user.update(**data.dict())\n        await uow.commit()\n        return {\"status\": \"success\"}\n</code></pre>"},{"location":"api/python/service_layer/users_service/","title":"\u0421\u0435\u0440\u0432\u0438\u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439","text":"<p>\u041c\u043e\u0434\u0443\u043b\u044c <code>users_service</code> \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0446\u0438\u0438 \u0438 \u0440\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438 \u0432 \u0441\u0435\u0440\u0432\u0438\u0441\u043d\u043e\u043c \u0441\u043b\u043e\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f.</p>"},{"location":"api/python/service_layer/users_service/#_2","title":"\u041e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438","text":"<ul> <li>\u0410\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u044b\u0439 \u0431\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 <code>ABCUserService</code> \u0441 \u043f\u043e\u043b\u043d\u044b\u043c \u043d\u0430\u0431\u043e\u0440\u043e\u043c \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438</li> <li>\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f <code>UserService</code> \u0441 \u0431\u0438\u0437\u043d\u0435\u0441-\u043b\u043e\u0433\u0438\u043a\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438</li> <li>\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f \u0441 Unit of Work \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f\u043c\u0438</li> <li>\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u0445\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u0430\u0440\u043e\u043b\u0435\u0439 \u0447\u0435\u0440\u0435\u0437 \u0430\u0431\u0441\u0442\u0440\u0430\u043a\u0446\u0438\u044e <code>IPasswordHasher</code></li> <li>\u041f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0439 API</li> </ul>"},{"location":"api/python/service_layer/users_service/#api","title":"\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f API","text":""},{"location":"api/python/service_layer/users_service/#abcuserservice","title":"ABCUserService","text":"<p>\u0410\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u044b\u0439 \u0431\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u044e\u0449\u0438\u0439 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438.</p> <p>               Bases: <code>ABC</code></p> <p>\u0410\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u044b\u0439 \u0431\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 \u0441\u0435\u0440\u0432\u0438\u0441\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.</p> <p>\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d \u0432 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0445 \u043a\u043b\u0430\u0441\u0441\u0430\u0445-\u043d\u0430\u0441\u043b\u0435\u0434\u043d\u0438\u043a\u0430\u0445.</p> Source code in <code>src/service_layer/users_service.py</code> <pre><code>class ABCUserService(abc.ABC):\n    \"\"\"\u0410\u0431\u0441\u0442\u0440\u0430\u043a\u0442\u043d\u044b\u0439 \u0431\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u043b\u0430\u0441\u0441 \u0441\u0435\u0440\u0432\u0438\u0441\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.\n\n    \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438,\n    \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d \u0432 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0445 \u043a\u043b\u0430\u0441\u0441\u0430\u0445-\u043d\u0430\u0441\u043b\u0435\u0434\u043d\u0438\u043a\u0430\u0445.\n    \"\"\"\n\n    @abc.abstractmethod\n    async def register_user(\n        self,\n        first_name: str,\n        last_name: str,\n        email: str,\n        username: str,\n        password: str,\n    ) -&gt; User:\n        \"\"\"\u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0435\u0433\u043e \u0432 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439.\n\n        Args:\n            first_name: \u0418\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n            last_name: \u0424\u0430\u043c\u0438\u043b\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n            email: Email \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n            username: \u041b\u043e\u0433\u0438\u043d \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n            password: \u041f\u0430\u0440\u043e\u043b\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n        Returns:\n            User: \u0421\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n        Raises:\n            NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n        \"\"\"\n        raise NotImplementedError\n\n    @abc.abstractmethod\n    async def login(self, email: str, password: str) -&gt; bool:\n        \"\"\"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043b\u043e\u0433\u0438\u043d \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0432\u0440\u0435\u043c\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0432\u0445\u043e\u0434\u0430.\n\n        Args:\n            email: Email \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n            password: \u041f\u0430\u0440\u043e\u043b\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n        Returns:\n            bool: True, \u0435\u0441\u043b\u0438 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u0443\u0441\u043f\u0435\u0448\u043d\u0430, \u0438\u043d\u0430\u0447\u0435 False.\n\n        Raises:\n            NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n        \"\"\"\n        raise NotImplementedError\n\n    @abc.abstractmethod\n    async def change_password(self, user_id: uuid.UUID, new_password: str) -&gt; None:\n        \"\"\"\u041c\u0435\u043d\u044f\u0435\u0442 \u043f\u0430\u0440\u043e\u043b\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n        Args:\n            user_id: ID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n            new_password: \u041d\u043e\u0432\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c.\n\n        Raises:\n            ValueError: \u0415\u0441\u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c ID \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d.\n            NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n        \"\"\"\n        raise NotImplementedError\n\n    @abc.abstractmethod\n    async def activate_user(self, user_id: uuid.UUID) -&gt; None:\n        \"\"\"\u0410\u043a\u0442\u0438\u0432\u0438\u0440\u0443\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n        Args:\n            user_id: ID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n        Raises:\n            NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n        \"\"\"\n        raise NotImplementedError\n\n    @abc.abstractmethod\n    async def deactivate_user(self, user_id: uuid.UUID) -&gt; None:\n        \"\"\"\u0414\u0435\u0430\u043a\u0442\u0438\u0432\u0438\u0440\u0443\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n        Args:\n            user_id: ID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n        Raises:\n            NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n        \"\"\"\n        raise NotImplementedError\n\n    @abc.abstractmethod\n    async def verify_email(self, user_id: uuid.UUID) -&gt; None:\n        \"\"\"\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0430\u0435\u0442 email \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n        Args:\n            user_id: ID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n        Raises:\n            NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n        \"\"\"\n        raise NotImplementedError\n\n    @abc.abstractmethod\n    async def get_user_by_email(self, email: str) -&gt; User | None:\n        \"\"\"\u041d\u0430\u0445\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e email.\n\n        Args:\n            email: Email \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n        Returns:\n            User | None: \u041d\u0430\u0439\u0434\u0435\u043d\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u043b\u0438 None.\n\n        Raises:\n            NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n        \"\"\"\n        raise NotImplementedError\n\n    @abc.abstractmethod\n    async def get_user_by_id(self, user_id: uuid.UUID) -&gt; User | None:\n        \"\"\"\u041d\u0430\u0445\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e ID.\n\n        Args:\n            user_id: ID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n        Returns:\n            User | None: \u041d\u0430\u0439\u0434\u0435\u043d\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u043b\u0438 None.\n\n        Raises:\n            NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n        \"\"\"\n        raise NotImplementedError\n\n    @abc.abstractmethod\n    async def get_user_by_username(self, username: str) -&gt; User | None:\n        \"\"\"\u041d\u0430\u0445\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e username.\n\n        Args:\n            username: \u041b\u043e\u0433\u0438\u043d \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n        Returns:\n            User | None: \u041d\u0430\u0439\u0434\u0435\u043d\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u043b\u0438 None.\n\n        Raises:\n            NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n        \"\"\"\n        raise NotImplementedError\n\n    @abc.abstractmethod\n    async def list_users(self, only_active: bool = False) -&gt; list[User]:\n        \"\"\"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.\n\n        Args:\n            only_active: \u0415\u0441\u043b\u0438 True, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.\n\n        Returns:\n            list[User]: \u0421\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.\n\n        Raises:\n            NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n        \"\"\"\n        raise NotImplementedError\n</code></pre>"},{"location":"api/python/service_layer/users_service/#src.service_layer.users_service.ABCUserService.activate_user","title":"<code>activate_user(user_id: uuid.UUID) -&gt; None</code>  <code>abstractmethod</code> <code>async</code>","text":"<p>\u0410\u043a\u0442\u0438\u0432\u0438\u0440\u0443\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> <p>Parameters:</p> Name Type Description Default <code>user_id</code> <code>UUID</code> <p>ID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> required <p>Raises:</p> Type Description <code>NotImplementedError</code> <p>\u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.</p> Source code in <code>src/service_layer/users_service.py</code> <pre><code>@abc.abstractmethod\nasync def activate_user(self, user_id: uuid.UUID) -&gt; None:\n    \"\"\"\u0410\u043a\u0442\u0438\u0432\u0438\u0440\u0443\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n    Args:\n        user_id: ID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n    Raises:\n        NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n    \"\"\"\n    raise NotImplementedError\n</code></pre>"},{"location":"api/python/service_layer/users_service/#src.service_layer.users_service.ABCUserService.change_password","title":"<code>change_password(user_id: uuid.UUID, new_password: str) -&gt; None</code>  <code>abstractmethod</code> <code>async</code>","text":"<p>\u041c\u0435\u043d\u044f\u0435\u0442 \u043f\u0430\u0440\u043e\u043b\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> <p>Parameters:</p> Name Type Description Default <code>user_id</code> <code>UUID</code> <p>ID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> required <code>new_password</code> <code>str</code> <p>\u041d\u043e\u0432\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c.</p> required <p>Raises:</p> Type Description <code>ValueError</code> <p>\u0415\u0441\u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c ID \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d.</p> <code>NotImplementedError</code> <p>\u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.</p> Source code in <code>src/service_layer/users_service.py</code> <pre><code>@abc.abstractmethod\nasync def change_password(self, user_id: uuid.UUID, new_password: str) -&gt; None:\n    \"\"\"\u041c\u0435\u043d\u044f\u0435\u0442 \u043f\u0430\u0440\u043e\u043b\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n    Args:\n        user_id: ID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n        new_password: \u041d\u043e\u0432\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c.\n\n    Raises:\n        ValueError: \u0415\u0441\u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u043c ID \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d.\n        NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n    \"\"\"\n    raise NotImplementedError\n</code></pre>"},{"location":"api/python/service_layer/users_service/#src.service_layer.users_service.ABCUserService.deactivate_user","title":"<code>deactivate_user(user_id: uuid.UUID) -&gt; None</code>  <code>abstractmethod</code> <code>async</code>","text":"<p>\u0414\u0435\u0430\u043a\u0442\u0438\u0432\u0438\u0440\u0443\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> <p>Parameters:</p> Name Type Description Default <code>user_id</code> <code>UUID</code> <p>ID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> required <p>Raises:</p> Type Description <code>NotImplementedError</code> <p>\u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.</p> Source code in <code>src/service_layer/users_service.py</code> <pre><code>@abc.abstractmethod\nasync def deactivate_user(self, user_id: uuid.UUID) -&gt; None:\n    \"\"\"\u0414\u0435\u0430\u043a\u0442\u0438\u0432\u0438\u0440\u0443\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n    Args:\n        user_id: ID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n    Raises:\n        NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n    \"\"\"\n    raise NotImplementedError\n</code></pre>"},{"location":"api/python/service_layer/users_service/#src.service_layer.users_service.ABCUserService.get_user_by_email","title":"<code>get_user_by_email(email: str) -&gt; User | None</code>  <code>abstractmethod</code> <code>async</code>","text":"<p>\u041d\u0430\u0445\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e email.</p> <p>Parameters:</p> Name Type Description Default <code>email</code> <code>str</code> <p>Email \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> required <p>Returns:</p> Type Description <code>User | None</code> <p>User | None: \u041d\u0430\u0439\u0434\u0435\u043d\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u043b\u0438 None.</p> <p>Raises:</p> Type Description <code>NotImplementedError</code> <p>\u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.</p> Source code in <code>src/service_layer/users_service.py</code> <pre><code>@abc.abstractmethod\nasync def get_user_by_email(self, email: str) -&gt; User | None:\n    \"\"\"\u041d\u0430\u0445\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e email.\n\n    Args:\n        email: Email \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n    Returns:\n        User | None: \u041d\u0430\u0439\u0434\u0435\u043d\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u043b\u0438 None.\n\n    Raises:\n        NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n    \"\"\"\n    raise NotImplementedError\n</code></pre>"},{"location":"api/python/service_layer/users_service/#src.service_layer.users_service.ABCUserService.get_user_by_id","title":"<code>get_user_by_id(user_id: uuid.UUID) -&gt; User | None</code>  <code>abstractmethod</code> <code>async</code>","text":"<p>\u041d\u0430\u0445\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e ID.</p> <p>Parameters:</p> Name Type Description Default <code>user_id</code> <code>UUID</code> <p>ID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> required <p>Returns:</p> Type Description <code>User | None</code> <p>User | None: \u041d\u0430\u0439\u0434\u0435\u043d\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u043b\u0438 None.</p> <p>Raises:</p> Type Description <code>NotImplementedError</code> <p>\u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.</p> Source code in <code>src/service_layer/users_service.py</code> <pre><code>@abc.abstractmethod\nasync def get_user_by_id(self, user_id: uuid.UUID) -&gt; User | None:\n    \"\"\"\u041d\u0430\u0445\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e ID.\n\n    Args:\n        user_id: ID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n    Returns:\n        User | None: \u041d\u0430\u0439\u0434\u0435\u043d\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u043b\u0438 None.\n\n    Raises:\n        NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n    \"\"\"\n    raise NotImplementedError\n</code></pre>"},{"location":"api/python/service_layer/users_service/#src.service_layer.users_service.ABCUserService.get_user_by_username","title":"<code>get_user_by_username(username: str) -&gt; User | None</code>  <code>abstractmethod</code> <code>async</code>","text":"<p>\u041d\u0430\u0445\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e username.</p> <p>Parameters:</p> Name Type Description Default <code>username</code> <code>str</code> <p>\u041b\u043e\u0433\u0438\u043d \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> required <p>Returns:</p> Type Description <code>User | None</code> <p>User | None: \u041d\u0430\u0439\u0434\u0435\u043d\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u043b\u0438 None.</p> <p>Raises:</p> Type Description <code>NotImplementedError</code> <p>\u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.</p> Source code in <code>src/service_layer/users_service.py</code> <pre><code>@abc.abstractmethod\nasync def get_user_by_username(self, username: str) -&gt; User | None:\n    \"\"\"\u041d\u0430\u0445\u043e\u0434\u0438\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e username.\n\n    Args:\n        username: \u041b\u043e\u0433\u0438\u043d \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n    Returns:\n        User | None: \u041d\u0430\u0439\u0434\u0435\u043d\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438\u043b\u0438 None.\n\n    Raises:\n        NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n    \"\"\"\n    raise NotImplementedError\n</code></pre>"},{"location":"api/python/service_layer/users_service/#src.service_layer.users_service.ABCUserService.list_users","title":"<code>list_users(only_active: bool = False) -&gt; list[User]</code>  <code>abstractmethod</code> <code>async</code>","text":"<p>\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.</p> <p>Parameters:</p> Name Type Description Default <code>only_active</code> <code>bool</code> <p>\u0415\u0441\u043b\u0438 True, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.</p> <code>False</code> <p>Returns:</p> Type Description <code>list[User]</code> <p>list[User]: \u0421\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.</p> <p>Raises:</p> Type Description <code>NotImplementedError</code> <p>\u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.</p> Source code in <code>src/service_layer/users_service.py</code> <pre><code>@abc.abstractmethod\nasync def list_users(self, only_active: bool = False) -&gt; list[User]:\n    \"\"\"\u0412\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.\n\n    Args:\n        only_active: \u0415\u0441\u043b\u0438 True, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.\n\n    Returns:\n        list[User]: \u0421\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439.\n\n    Raises:\n        NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n    \"\"\"\n    raise NotImplementedError\n</code></pre>"},{"location":"api/python/service_layer/users_service/#src.service_layer.users_service.ABCUserService.login","title":"<code>login(email: str, password: str) -&gt; bool</code>  <code>abstractmethod</code> <code>async</code>","text":"<p>\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043b\u043e\u0433\u0438\u043d \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0432\u0440\u0435\u043c\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0432\u0445\u043e\u0434\u0430.</p> <p>Parameters:</p> Name Type Description Default <code>email</code> <code>str</code> <p>Email \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> required <code>password</code> <code>str</code> <p>\u041f\u0430\u0440\u043e\u043b\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>bool</code> <p>True, \u0435\u0441\u043b\u0438 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u0443\u0441\u043f\u0435\u0448\u043d\u0430, \u0438\u043d\u0430\u0447\u0435 False.</p> <p>Raises:</p> Type Description <code>NotImplementedError</code> <p>\u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.</p> Source code in <code>src/service_layer/users_service.py</code> <pre><code>@abc.abstractmethod\nasync def login(self, email: str, password: str) -&gt; bool:\n    \"\"\"\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043b\u043e\u0433\u0438\u043d \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u0442 \u0432\u0440\u0435\u043c\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0435\u0433\u043e \u0432\u0445\u043e\u0434\u0430.\n\n    Args:\n        email: Email \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n        password: \u041f\u0430\u0440\u043e\u043b\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n    Returns:\n        bool: True, \u0435\u0441\u043b\u0438 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u0443\u0441\u043f\u0435\u0448\u043d\u0430, \u0438\u043d\u0430\u0447\u0435 False.\n\n    Raises:\n        NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n    \"\"\"\n    raise NotImplementedError\n</code></pre>"},{"location":"api/python/service_layer/users_service/#src.service_layer.users_service.ABCUserService.register_user","title":"<code>register_user(first_name: str, last_name: str, email: str, username: str, password: str) -&gt; User</code>  <code>abstractmethod</code> <code>async</code>","text":"<p>\u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0435\u0433\u043e \u0432 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439.</p> <p>Parameters:</p> Name Type Description Default <code>first_name</code> <code>str</code> <p>\u0418\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> required <code>last_name</code> <code>str</code> <p>\u0424\u0430\u043c\u0438\u043b\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> required <code>email</code> <code>str</code> <p>Email \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> required <code>username</code> <code>str</code> <p>\u041b\u043e\u0433\u0438\u043d \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> required <code>password</code> <code>str</code> <p>\u041f\u0430\u0440\u043e\u043b\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> required <p>Returns:</p> Name Type Description <code>User</code> <code>User</code> <p>\u0421\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> <p>Raises:</p> Type Description <code>NotImplementedError</code> <p>\u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.</p> Source code in <code>src/service_layer/users_service.py</code> <pre><code>@abc.abstractmethod\nasync def register_user(\n    self,\n    first_name: str,\n    last_name: str,\n    email: str,\n    username: str,\n    password: str,\n) -&gt; User:\n    \"\"\"\u0421\u043e\u0437\u0434\u0430\u0451\u0442 \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0435\u0433\u043e \u0432 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0439.\n\n    Args:\n        first_name: \u0418\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n        last_name: \u0424\u0430\u043c\u0438\u043b\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n        email: Email \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n        username: \u041b\u043e\u0433\u0438\u043d \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n        password: \u041f\u0430\u0440\u043e\u043b\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n    Returns:\n        User: \u0421\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0439 \u043e\u0431\u044a\u0435\u043a\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n    Raises:\n        NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n    \"\"\"\n    raise NotImplementedError\n</code></pre>"},{"location":"api/python/service_layer/users_service/#src.service_layer.users_service.ABCUserService.verify_email","title":"<code>verify_email(user_id: uuid.UUID) -&gt; None</code>  <code>abstractmethod</code> <code>async</code>","text":"<p>\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0430\u0435\u0442 email \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> <p>Parameters:</p> Name Type Description Default <code>user_id</code> <code>UUID</code> <p>ID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> required <p>Raises:</p> Type Description <code>NotImplementedError</code> <p>\u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.</p> Source code in <code>src/service_layer/users_service.py</code> <pre><code>@abc.abstractmethod\nasync def verify_email(self, user_id: uuid.UUID) -&gt; None:\n    \"\"\"\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0430\u0435\u0442 email \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n    Args:\n        user_id: ID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n    Raises:\n        NotImplementedError: \u0415\u0441\u043b\u0438 \u043c\u0435\u0442\u043e\u0434 \u043d\u0435 \u043f\u0435\u0440\u0435\u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0451\u043d \u0432 \u043f\u043e\u0434\u043a\u043b\u0430\u0441\u0441\u0435.\n\n    \"\"\"\n    raise NotImplementedError\n</code></pre>"},{"location":"api/python/service_layer/users_service/#userservice","title":"UserService","text":"<p>\u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0438\u0441\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0441 \u0431\u0438\u0437\u043d\u0435\u0441-\u043b\u043e\u0433\u0438\u043a\u043e\u0439.</p> <p>               Bases: <code>ABCUserService</code></p> <p>\u0421\u0435\u0440\u0432\u0438\u0441\u043d\u044b\u0439 \u0441\u043b\u043e\u0439 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438 (\u0431\u0438\u0437\u043d\u0435\u0441-\u043b\u043e\u0433\u0438\u043a\u0430).</p> Source code in <code>src/service_layer/users_service.py</code> <pre><code>class UserService(ABCUserService):\n    \"\"\"\u0421\u0435\u0440\u0432\u0438\u0441\u043d\u044b\u0439 \u0441\u043b\u043e\u0439 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438 (\u0431\u0438\u0437\u043d\u0435\u0441-\u043b\u043e\u0433\u0438\u043a\u0430).\"\"\"\n\n    def __init__(self, uow: AbstractUnitOfWork, hasher: IPasswordHasher) -&gt; None:\n        \"\"\"\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0438\u0441\u0430.\n\n        Args:\n            uow: Unit of Work \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f\u043c\u0438 \u0438 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f\u043c\u0438.\n            hasher: \u0421\u0435\u0440\u0432\u0438\u0441 \u0434\u043b\u044f \u0445\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043f\u0430\u0440\u043e\u043b\u0435\u0439.\n\n        \"\"\"\n        self.uow = uow\n        self.hasher = hasher\n\n    async def register_user(\n        self,\n        first_name: str,\n        last_name: str,\n        email: str,\n        username: str,\n        password: str,\n    ) -&gt; User:\n        hashed = self.hasher.hash_password(password)\n        user = User(\n            user_id=None,\n            first_name=first_name,\n            last_name=last_name,\n            email=email,\n            username=username,\n            hashed_password=hashed,\n            _hasher=self.hasher,\n        )\n\n        async with self.uow as uow:\n            await uow.users.add(user)\n            await uow.commit()\n        return user\n\n    async def remove_user(self, user_id: uuid.UUID) -&gt; None:\n        \"\"\"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e ID.\n\n        Args:\n            user_id: ID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n        Raises:\n            Exception: \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n        \"\"\"\n        async with self.uow as uow:\n            await uow.users.remove(user_id)\n            await uow.commit()\n\n    async def login(self, email: str, password: str) -&gt; bool:\n        async with self.uow as uow:\n            user = await uow.users.get_by_email(email)\n            if not user:\n                return False\n            if not self.hasher.verify_password(password, user.hashed_password):\n                return False\n            await uow.users.update_login_time(user.id)\n            await uow.commit()\n            return True\n\n    async def change_password(self, user_id: uuid.UUID, new_password: str) -&gt; None:\n        hashed = self.hasher.hash_password(new_password)\n        async with self.uow as uow:\n            user = await uow.users.get_by_id(user_id)\n            if not user:\n                raise ValueError('User not found')\n            user.hashed_password = hashed\n            await uow.users.update(user)\n            await uow.commit()\n\n    async def activate_user(self, user_id: uuid.UUID) -&gt; None:\n        async with self.uow as uow:\n            await uow.users.activate(user_id)\n            await uow.commit()\n\n    async def deactivate_user(self, user_id: uuid.UUID) -&gt; None:\n        async with self.uow as uow:\n            await uow.users.deactivate(user_id)\n            await uow.commit()\n\n    async def verify_email(self, user_id: uuid.UUID) -&gt; None:\n        async with self.uow as uow:\n            await uow.users.verify_email(user_id)\n            await uow.commit()\n\n    async def get_user_by_email(self, email: str) -&gt; User | None:\n        async with self.uow as uow:\n            return await uow.users.get_by_email(email)\n\n    async def get_user_by_id(self, user_id: uuid.UUID) -&gt; User | None:\n        async with self.uow as uow:\n            return await uow.users.get_by_id(user_id)\n\n    async def get_user_by_username(self, username: str) -&gt; User | None:\n        async with self.uow as uow:\n            return await uow.users.get_by_username(username)\n\n    async def list_users(self, only_active: bool = False) -&gt; list[User]:\n        async with self.uow as uow:\n            return await uow.users.list_all(only_active=only_active)\n</code></pre>"},{"location":"api/python/service_layer/users_service/#src.service_layer.users_service.UserService.__init__","title":"<code>__init__(uow: AbstractUnitOfWork, hasher: IPasswordHasher) -&gt; None</code>","text":"<p>\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0438\u0441\u0430.</p> <p>Parameters:</p> Name Type Description Default <code>uow</code> <code>AbstractUnitOfWork</code> <p>Unit of Work \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f\u043c\u0438 \u0438 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f\u043c\u0438.</p> required <code>hasher</code> <code>IPasswordHasher</code> <p>\u0421\u0435\u0440\u0432\u0438\u0441 \u0434\u043b\u044f \u0445\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043f\u0430\u0440\u043e\u043b\u0435\u0439.</p> required Source code in <code>src/service_layer/users_service.py</code> <pre><code>def __init__(self, uow: AbstractUnitOfWork, hasher: IPasswordHasher) -&gt; None:\n    \"\"\"\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0438\u0441\u0430.\n\n    Args:\n        uow: Unit of Work \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f\u043c\u0438 \u0438 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f\u043c\u0438.\n        hasher: \u0421\u0435\u0440\u0432\u0438\u0441 \u0434\u043b\u044f \u0445\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043f\u0430\u0440\u043e\u043b\u0435\u0439.\n\n    \"\"\"\n    self.uow = uow\n    self.hasher = hasher\n</code></pre>"},{"location":"api/python/service_layer/users_service/#src.service_layer.users_service.UserService.remove_user","title":"<code>remove_user(user_id: uuid.UUID) -&gt; None</code>  <code>async</code>","text":"<p>\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e ID.</p> <p>Parameters:</p> Name Type Description Default <code>user_id</code> <code>UUID</code> <p>ID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> required <p>Raises:</p> Type Description <code>Exception</code> <p>\u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.</p> Source code in <code>src/service_layer/users_service.py</code> <pre><code>async def remove_user(self, user_id: uuid.UUID) -&gt; None:\n    \"\"\"\u0423\u0434\u0430\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e ID.\n\n    Args:\n        user_id: ID \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n    Raises:\n        Exception: \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f.\n\n    \"\"\"\n    async with self.uow as uow:\n        await uow.users.remove(user_id)\n        await uow.commit()\n</code></pre>"},{"location":"api/python/service_layer/users_service/#_3","title":"\u041f\u0440\u0438\u043c\u0435\u0440\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f","text":""},{"location":"api/python/service_layer/users_service/#_4","title":"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f","text":"<pre><code># \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 \u0441\u0435\u0440\u0432\u0438\u0441\u0430\nuow = SqlAlchemyUnitOfWork(session_factory=session_factory, repo_factory=repo_factory)\nhasher = BcryptPasswordHasher()\nuser_service = UserService(uow=uow, hasher=hasher)\n\n# \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\nuser = await user_service.register_user(\n    first_name=\"\u0418\u0432\u0430\u043d\",\n    last_name=\"\u0418\u0432\u0430\u043d\u043e\u0432\",\n    email=\"ivan@example.com\",\n    username=\"ivanov\",\n    password=\"securepassword123\"\n)\n</code></pre>"},{"location":"api/python/service_layer/users_service/#_5","title":"\u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f","text":"<pre><code># \u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f\nis_authenticated = await user_service.login(\n    email=\"ivan@example.com\",\n    password=\"securepassword123\"\n)\n\nif is_authenticated:\n    print(\"\u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u0443\u0441\u043f\u0435\u0448\u043d\u0430\")\nelse:\n    print(\"\u041d\u0435\u0432\u0435\u0440\u043d\u044b\u0435 \u0443\u0447\u0435\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\")\n</code></pre>"},{"location":"api/python/service_layer/users_service/#id","title":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043f\u043e ID","text":"<pre><code>user = await user_service.get_user_by_id(user_id=user_id)\nif user:\n    print(f\"\u041d\u0430\u0439\u0434\u0435\u043d \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c: {user.email}\")\n</code></pre>"},{"location":"api/python/service_layer/users_service/#_6","title":"\u041b\u0443\u0447\u0448\u0438\u0435 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0438","text":"<ol> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 Unit of Work: \u0412\u0441\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438 \u0441 \u0431\u0430\u0437\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u044e\u0442\u0441\u044f \u0432 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u0435 Unit of Work, \u0447\u0442\u043e \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u0430\u0442\u043e\u043c\u0430\u0440\u043d\u043e\u0441\u0442\u044c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439.</li> <li>\u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445: \u0412\u0445\u043e\u0434\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0432\u0430\u043b\u0438\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u044b \u0434\u043e \u0432\u044b\u0437\u043e\u0432\u0430 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u0441\u0435\u0440\u0432\u0438\u0441\u0430.</li> <li>\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0448\u0438\u0431\u043e\u043a: \u041c\u0435\u0442\u043e\u0434\u044b \u043c\u043e\u0433\u0443\u0442 \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u044b \u043d\u0430 \u0443\u0440\u043e\u0432\u043d\u0435 API.</li> <li>\u041a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435: \u0414\u043b\u044f \u0447\u0430\u0441\u0442\u043e \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u043c\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0440\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u0442\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u043a\u044d\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f.</li> <li>\u0410\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u043e\u0441\u0442\u044c: \u0412\u0441\u0435 \u043c\u0435\u0442\u043e\u0434\u044b \u0430\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u043d\u044b\u0435 \u0438 \u0434\u043e\u043b\u0436\u043d\u044b \u0432\u044b\u0437\u044b\u0432\u0430\u0442\u044c\u0441\u044f \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c <code>await</code>.</li> </ol>"},{"location":"api/python/service_layer/users_service/#_7","title":"\u0418\u043d\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044f","text":"<p>\u041c\u043e\u0434\u0443\u043b\u044c \u0438\u043d\u0442\u0435\u0433\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0441:</p> <ul> <li>FastAPI \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\u043c\u0438</li> <li>SQLAlchemy ORM \u0447\u0435\u0440\u0435\u0437 Unit of Work</li> <li>\u0421\u0438\u0441\u0442\u0435\u043c\u043e\u0439 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438</li> <li>\u0421\u0438\u0441\u0442\u0435\u043c\u043e\u0439 \u0445\u0435\u0448\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u0430\u0440\u043e\u043b\u0435\u0439</li> </ul>"},{"location":"api/python/service_layer/users_service/#_8","title":"\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0435\u043d\u0438\u044f","text":"<ul> <li>\u0422\u0440\u0435\u0431\u0443\u0435\u0442 \u043d\u0430\u043b\u0438\u0447\u0438\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0439 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445</li> <li>\u0417\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b Unit of Work</li> <li>\u041d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 \u043f\u0430\u043a\u0435\u0442\u043d\u044b\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438</li> <li>\u041d\u0435\u0442 \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0439 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438 \u043f\u0430\u0433\u0438\u043d\u0430\u0446\u0438\u0438 \u0434\u043b\u044f \u0441\u043f\u0438\u0441\u043a\u043e\u0432 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439</li> </ul>"},{"location":"api/python/service_layer/users_service/#_9","title":"\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438","text":"<p>\u041c\u043e\u0434\u0443\u043b\u044c \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d \u0434\u043b\u044f \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438:</p> <ul> <li>\u0412\u043e\u0441\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u0430\u0440\u043e\u043b\u044f</li> <li>\u0414\u0432\u0443\u0445\u0444\u0430\u043a\u0442\u043e\u0440\u043d\u043e\u0439 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438</li> <li>\u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0440\u043e\u043b\u044f\u043c\u0438 \u0438 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u044f\u043c\u0438</li> <li>\u0410\u0443\u0434\u0438\u0442-\u043b\u043e\u0433\u0430 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439 \u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438</li> </ul>"},{"location":"api/python/service_layer/users_service/#_10","title":"\u0421\u043c. \u0442\u0430\u043a\u0436\u0435","text":"<ul> <li>\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u043f\u043e Unit of Work</li> <li>\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u043f\u043e \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u044f\u043c</li> <li>\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u043f\u043e \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f</li> </ul>"},{"location":"architecture/components/","title":"\u0410\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u0430 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 eebook-users","text":""},{"location":"architecture/components/#1","title":"1. \u041e\u0431\u0437\u043e\u0440 \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u044b","text":"<p>\u041f\u0440\u043e\u0435\u043a\u0442 \u043f\u043e\u0441\u0442\u0440\u043e\u0435\u043d \u043f\u043e \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u0430\u043c \u0447\u0438\u0441\u0442\u043e\u0439 \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u044b \u0441 \u0447\u0451\u0442\u043a\u0438\u043c \u0440\u0430\u0437\u0434\u0435\u043b\u0435\u043d\u0438\u0435\u043c \u043d\u0430 \u0441\u043b\u043e\u0438:</p> <pre><code>src/\n\u251c\u2500\u2500 adapters/               # \u0410\u0434\u0430\u043f\u0442\u0435\u0440\u044b \u0434\u043b\u044f \u0432\u043d\u0435\u0448\u043d\u0438\u0445 \u0441\u0438\u0441\u0442\u0435\u043c \u0438 \u0445\u0440\u0430\u043d\u0438\u043b\u0438\u0449\n\u2502   \u251c\u2500\u2500 interfaces.py       # \u041f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u044b \u0434\u043b\u044f \u0432\u043d\u0435\u0448\u043d\u0438\u0445 \u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432\n\u2502   \u251c\u2500\u2500 password_hasher.py  # \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0445\u0435\u0448\u0435\u0440\u0430 \u043f\u0430\u0440\u043e\u043b\u0435\u0439\n\u2502   \u251c\u2500\u2500 repository.py       # \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u0435\u0432\n\u2502   \u251c\u2500\u2500 orm.py              # ORM-\u043c\u043e\u0434\u0435\u043b\u0438 SQLAlchemy\n\u2502   \u251c\u2500\u2500 factory.py          # \u0424\u0430\u0431\u0440\u0438\u043a\u0438 \u0430\u0434\u0430\u043f\u0442\u0435\u0440\u043e\u0432\n\u2502   \u2514\u2500\u2500 vault.py            # \u041f\u0440\u043e\u0432\u0430\u0439\u0434\u0435\u0440 \u0441\u0435\u043a\u0440\u0435\u0442\u043e\u0432 (Vault)\n\u2502\n\u251c\u2500\u2500 config/                 # \u041a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438\n\u2502   \u251c\u2500\u2500 settings.py         # Pydantic-\u043c\u043e\u0434\u0435\u043b\u044c \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438\n\u2502   \u251c\u2500\u2500 loader.py           # \u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0438 \u0432\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u043d\u0430\u0441\u0442\u0440\u043e\u0435\u043a\n\u2502   \u2514\u2500\u2500 exceptions.py       # \u041e\u0448\u0438\u0431\u043a\u0438 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438\n\u2502\n\u251c\u2500\u2500 domain/                 # \u0414\u043e\u043c\u0435\u043d\u043d\u044b\u0439 \u0441\u043b\u043e\u0439 (\u0447\u0438\u0441\u0442\u0430\u044f \u0431\u0438\u0437\u043d\u0435\u0441-\u043b\u043e\u0433\u0438\u043a\u0430)\n\u2502   \u251c\u2500\u2500 model.py            # \u0414\u043e\u043c\u0435\u043d\u043d\u044b\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\n\u2502   \u2514\u2500\u2500 exceptions.py       # \u0418\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0434\u043e\u043c\u0435\u043d\u043d\u043e\u0433\u043e \u0443\u0440\u043e\u0432\u043d\u044f\n\u2502\n\u251c\u2500\u2500 entity/                 # \u0412\u0441\u043f\u043e\u043c\u043e\u0433\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0434\u043b\u044f ORM/DTO)\n\u2502   \u2514\u2500\u2500 models.py\n\u2502\n\u251c\u2500\u2500 entrypoints/            # \u0422\u043e\u0447\u043a\u0438 \u0432\u0445\u043e\u0434\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\n\u2502   \u251c\u2500\u2500 api/                # HTTP API-\u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442\u044b\n\u2502   \u2502   \u2514\u2500\u2500 endpoints.py\n\u2502   \u2514\u2500\u2500 fastapi_app.py      # \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f FastAPI\n\u2502\n\u251c\u2500\u2500 infrastructure/         # \u0418\u043d\u0444\u0440\u0430\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u043d\u044b\u0439 \u0441\u043b\u043e\u0439\n\u2502   \u251c\u2500\u2500 database/           # \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0431\u0430\u0437\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445\n\u2502   \u2502   \u251c\u2500\u2500 engine.py       # \u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0434\u0432\u0438\u0436\u043a\u0430 SQLAlchemy\n\u2502   \u2502   \u251c\u2500\u2500 exceptions.py   # \u041e\u0448\u0438\u0431\u043a\u0438 \u0438\u043d\u0444\u0440\u0430\u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u044b \u0411\u0414\n\u2502   \u2502   \u2514\u2500\u2500 migrations/     # Alembic-\u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0438\n\u2502   \u251c\u2500\u2500 lifespan.py         # \u041a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0436\u0438\u0437\u043d\u0435\u043d\u043d\u043e\u0433\u043e \u0446\u0438\u043a\u043b\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\n\u2502   \u2514\u2500\u2500 logging/            # \u041a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n\u2502\n\u251c\u2500\u2500 service_layer/          # \u0421\u0435\u0440\u0432\u0438\u0441\u043d\u044b\u0439 \u0441\u043b\u043e\u0439 (application layer)\n\u2502   \u251c\u2500\u2500 users_service.py    # \u0421\u0435\u0440\u0432\u0438\u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439\n\u2502   \u251c\u2500\u2500 uow.py              # Unit of Work\n\u2502   \u251c\u2500\u2500 dependencies.py     # FastAPI \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438\n\u2502   \u2514\u2500\u2500 exceptions.py       # \u041e\u0448\u0438\u0431\u043a\u0438 \u0441\u0435\u0440\u0432\u0438\u0441\u043d\u043e\u0433\u043e \u0443\u0440\u043e\u0432\u043d\u044f\n\u2502\n\u251c\u2500\u2500 bootstrap.py            # \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f\n\u251c\u2500\u2500 exceptions.py           # \u041e\u0431\u0449\u0438\u0435 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f\n\u2514\u2500\u2500 main.py                 # \u0422\u043e\u0447\u043a\u0430 \u0432\u0445\u043e\u0434\u0430 (run)\n</code></pre>"},{"location":"architecture/components/#2","title":"2. \u0412\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0441\u043b\u043e\u0451\u0432","text":"<pre><code>entrypoints\n    \u2193\nservice_layer  \u2192  domain\n    \u2193              \u2191\ninfrastructure \u2192 adapters\n    \u2193\n  config\n</code></pre>"},{"location":"architecture/components/#21","title":"2.1. \u041d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u0441\u043b\u043e\u0451\u0432","text":"<ul> <li>entrypoints - \u0422\u043e\u0447\u043a\u0438 \u0432\u0445\u043e\u0434\u0430 \u0432 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 (HTTP API, CLI, \u0437\u0430\u0434\u0430\u0447\u0438 \u043f\u043e \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u044e)</li> <li>service_layer - \u041f\u0440\u0438\u043a\u043b\u0430\u0434\u043d\u0430\u044f \u043b\u043e\u0433\u0438\u043a\u0430, \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0446\u0438\u044f \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439, \u0431\u0438\u0437\u043d\u0435\u0441-\u043f\u0440\u0430\u0432\u0438\u043b\u0430</li> <li>domain - \u0427\u0438\u0441\u0442\u0430\u044f \u0431\u0438\u0437\u043d\u0435\u0441-\u043b\u043e\u0433\u0438\u043a\u0430, \u0434\u043e\u043c\u0435\u043d\u043d\u044b\u0435 \u043c\u043e\u0434\u0435\u043b\u0438 \u0438 \u0438\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f</li> <li>adapters - \u0410\u0434\u0430\u043f\u0442\u0435\u0440\u044b \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0432\u043d\u0435\u0448\u043d\u0438\u043c\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u0430\u043c\u0438 \u0438 \u0411\u0414</li> <li>infrastructure - \u041d\u0438\u0437\u043a\u043e\u0443\u0440\u043e\u0432\u043d\u0435\u0432\u044b\u0435 \u0434\u0435\u0442\u0430\u043b\u0438 (\u0411\u0414, \u043a\u0435\u0448, \u0431\u0440\u043e\u043a\u0435\u0440\u044b \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0439)</li> <li>config - \u041a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f</li> </ul>"},{"location":"architecture/components/#3","title":"3. \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f","text":""},{"location":"architecture/components/#31","title":"3.1. \u0417\u0430\u043f\u0443\u0441\u043a \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f","text":"<ol> <li>\u0417\u0430\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0441\u044f <code>lifespan</code> (\u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442\u043d\u044b\u0439 \u043c\u0435\u043d\u0435\u0434\u0436\u0435\u0440 FastAPI)</li> <li>\u0412\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f <code>bootstrap()</code></li> <li>\u041f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u043e\u0432: </li> </ol> Source code in <code>src/bootstrap.py</code> <pre><code>async def bootstrap() -&gt; Settings:\n    try:\n        configure_logging()\n        await SettingsLoader().load()\n        settings = Settings()  # type: ignore\n        _ = get_engine()\n        logger.info('Bootstrap \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043b \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b')\n        return settings\n\n    except Exception as e:\n        logger.exception('Bootstrap failed')\n        raise BootstrapInitializationError(f'Failed to bootstrap application: {str(e)}') from e\n</code></pre>"},{"location":"architecture/components/#32","title":"3.2. \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0437\u0430\u043f\u0440\u043e\u0441\u0430","text":"<ol> <li>\u0417\u0430\u043f\u0440\u043e\u0441 \u043f\u0440\u0438\u0445\u043e\u0434\u0438\u0442 \u0432 FastAPI \u044d\u043d\u0434\u043f\u043e\u0438\u043d\u0442</li> <li>\u0427\u0435\u0440\u0435\u0437 DI \u0432\u043d\u0435\u0434\u0440\u044f\u044e\u0442\u0441\u044f \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u0438\u0437 <code>service_layer.dependencies</code></li> <li>\u0421\u043e\u0437\u0434\u0430\u0435\u0442\u0441\u044f \u0441\u0435\u0441\u0441\u0438\u044f \u0411\u0414 \u0447\u0435\u0440\u0435\u0437 <code>get_db()</code></li> <li>\u0412\u044b\u0437\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0439 \u0441\u0435\u0440\u0432\u0438\u0441/\u044e\u0437\u043a\u0435\u0439\u0441</li> <li>\u041f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u0438\u0442 \u0440\u0430\u0431\u043e\u0442\u0430 \u0441 \u0440\u0435\u043f\u043e\u0437\u0438\u0442\u043e\u0440\u0438\u044f\u043c\u0438 \u0432 \u0440\u0430\u043c\u043a\u0430\u0445 UoW</li> <li>\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0443</li> </ol>"},{"location":"architecture/components/#4","title":"4. \u041a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b","text":""},{"location":"architecture/components/#41","title":"4.1. \u041a\u043b\u044e\u0447\u0435\u0432\u044b\u0435 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b","text":""},{"location":"architecture/components/#411-bootstrappy","title":"4.1.1. bootstrap.py","text":"<p>\u0426\u0435\u043d\u0442\u0440\u0430\u043b\u044c\u043d\u0430\u044f \u0442\u043e\u0447\u043a\u0430 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f:</p> <ul> <li>\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u043b\u043e\u0433\u0433\u0435\u0440\u0430</li> <li>\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u0438\u0437 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f</li> <li>\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0411\u0414 \u0438 \u043c\u0438\u0433\u0440\u0430\u0446\u0438\u0439</li> <li>\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0435\u0439</li> <li>\u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f FastAPI \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f</li> </ul>"},{"location":"architecture/components/#412-unit-of-work-uow","title":"4.1.2. Unit of Work (UoW)","text":"<p>\u041f\u0430\u0442\u0442\u0435\u0440\u043d \"\u0415\u0434\u0438\u043d\u0438\u0446\u0430 \u0440\u0430\u0431\u043e\u0442\u044b\" \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0442\u0440\u0430\u043d\u0437\u0430\u043a\u0446\u0438\u044f\u043c\u0438:</p> <ul> <li>\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f UoW</li> <li>\u041e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u0430\u0442\u043e\u043c\u0430\u0440\u043d\u043e\u0441\u0442\u044c \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439</li> <li>\u0423\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0436\u0438\u0437\u043d\u0435\u043d\u043d\u044b\u043c \u0446\u0438\u043a\u043b\u043e\u043c \u0441\u0435\u0441\u0441\u0438\u0439 \u0411\u0414</li> </ul>"},{"location":"architecture/components/#413","title":"4.1.3. \u0421\u0435\u0440\u0432\u0438\u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439","text":"<p>\u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u0441\u0435\u0440\u0432\u0438\u0441 \u0434\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\u043c\u0438:</p> <ul> <li>\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f UserService</li> <li>\u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0436\u0438\u0437\u043d\u0435\u043d\u043d\u044b\u043c \u0446\u0438\u043a\u043b\u043e\u043c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439</li> <li>\u0410\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u0438 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u044f</li> <li>\u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u0440\u043e\u0444\u0438\u043b\u044f\u043c\u0438</li> </ul>"},{"location":"architecture/components/#414","title":"4.1.4. \u041a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f","text":"<p>\u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0430\u043c\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f:</p> <ul> <li>\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u0438\u0437 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f</li> <li>\u0412\u0430\u043b\u0438\u0434\u0430\u0446\u0438\u044f \u0447\u0435\u0440\u0435\u0437 Pydantic</li> <li>\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u0440\u0430\u0437\u043d\u044b\u0445 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u0439 (dev, test, prod)</li> </ul> <p>\u042d\u0442\u0430 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u0434\u0430\u0451\u0442 \u043f\u043e\u043b\u043d\u043e\u0435 \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043e\u0431 \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u0438 \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u0430\u0445 \u0435\u0433\u043e \u0440\u0430\u0431\u043e\u0442\u044b. \u0414\u043b\u044f \u0431\u043e\u043b\u0435\u0435 \u0434\u0435\u0442\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0438\u0437\u0443\u0447\u0435\u043d\u0438\u044f \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u044b\u0445 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u043e\u0432 \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u0435\u0441\u044c \u043a \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u043c \u0440\u0430\u0437\u0434\u0435\u043b\u0430\u043c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438.</p>"},{"location":"faq/","title":"\u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 eebook","text":"<p>\u0414\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c \u0432 developer guide \u043f\u0440\u043e\u0435\u043a\u0442\u0430 eebook \u2014 \u00ab\u0418\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u041f\u043e\u043c\u043e\u0433\u0430\u0442\u043e\u0440\u00bb. \u0417\u0434\u0435\u0441\u044c \u043e\u043f\u0438\u0441\u0430\u043d\u044b \u0432\u0441\u0435 \u043f\u0440\u0438\u043d\u0446\u0438\u043f\u044b \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438, \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u0430, \u043a\u043e\u0434\u0438\u043d\u0433-\u0441\u0442\u0430\u0439\u043b, \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435, git \u0438 workflow.</p> <p>\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0430 \u0434\u043b\u044f:</p> <ul> <li>\u041d\u043e\u0432\u044b\u0445 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u043e\u0432 \u043f\u0440\u043e\u0435\u043a\u0442\u0430</li> <li>\u041a\u043e\u043d\u0442\u0440\u0438\u0431\u044c\u044e\u0442\u043e\u0440\u043e\u0432 open-source</li> <li>\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438 \u0435\u0434\u0438\u043d\u043e\u043e\u0431\u0440\u0430\u0437\u0438\u044f \u043a\u043e\u0434\u0430 \u0438 \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u044b</li> </ul>"},{"location":"faq/#_1","title":"\u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435","text":"<ul> <li>\u041a\u043e\u0434\u0438\u043d\u0433 \u0438 \u0441\u0442\u0438\u043b\u044c</li> <li>Git, \u043a\u043e\u043c\u043c\u0438\u0442\u044b \u0438 PR</li> <li>\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435</li> <li>Contributing</li> </ul>"},{"location":"faq/coding_guidelines/","title":"\u041a\u043e\u0434\u0438\u043d\u0433 \u0438 \u0441\u0442\u0438\u043b\u044c","text":""},{"location":"faq/coding_guidelines/#python","title":"Python","text":"<ul> <li>PEP8 + \u0442\u0438\u043f\u0438\u0437\u0430\u0446\u0438\u044f (<code>typing</code>)</li> <li>\u0414\u043e\u043a\u0441\u0442\u0440\u0438\u043d\u0433\u0438 Google / NumPy style</li> <li>4 \u043f\u0440\u043e\u0431\u0435\u043b\u0430 \u0434\u043b\u044f \u043e\u0442\u0441\u0442\u0443\u043f\u043e\u0432</li> <li>snake_case \u0434\u043b\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u0439 \u0438 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445, CamelCase \u0434\u043b\u044f \u043a\u043b\u0430\u0441\u0441\u043e\u0432</li> </ul>"},{"location":"faq/coding_guidelines/#clean-code","title":"Clean Code","text":"<ul> <li>\u041c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438 (~5\u201315 \u0441\u0442\u0440\u043e\u043a)</li> <li>\u041a\u0430\u0436\u0434\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u0435\u043b\u0430\u0435\u0442 \u043e\u0434\u043d\u0443 \u0432\u0435\u0449\u044c</li> <li>\u0427\u0451\u0442\u043a\u0438\u0435 \u0438\u043c\u0435\u043d\u0430 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u0439</li> <li>\u0418\u0441\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f \u0432\u043c\u0435\u0441\u0442\u043e <code>None</code> \u0434\u043b\u044f \u043e\u0448\u0438\u0431\u043e\u043a</li> </ul>"},{"location":"faq/coding_guidelines/#_2","title":"\u0414\u043e\u043a\u0441\u0442\u0440\u0438\u043d\u0433\u0438","text":"<ul> <li>\u0414\u043b\u044f \u043f\u0443\u0431\u043b\u0438\u0447\u043d\u044b\u0445 \u043a\u043b\u0430\u0441\u0441\u043e\u0432 \u0438 \u043c\u0435\u0442\u043e\u0434\u043e\u0432</li> <li>\u0423\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c: Args, Returns, Raises, Examples (\u043b\u0438\u0431\u043e \u043d\u0430 \u0440\u0443\u0441\u0441\u043a\u043e\u043c - \u041f\u0440\u0438\u043c\u0435\u0440\u044b), \u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u044f</li> <li>GoogleStyle</li> <li>\u041f\u0440\u0438\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u0441\u044f \u043f\u0440\u0430\u0432\u0438\u043b\u0430 \"\u0445\u043e\u0440\u043e\u0448\u0438\u0439 \u043a\u043e\u0434 \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u043f\u043e\u043d\u044f\u0442\u0435\u043d \u0431\u0435\u0437 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438\". \u041d\u0435 \u043d\u0443\u0436\u043d\u043e \u043f\u0438\u0441\u0430\u0442\u044c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u043d\u0430 \u0432\u0441\u0435 \u043f\u043e\u0434\u0440\u044f\u0434 - \u043f\u043e\u0441\u0442\u0430\u0440\u0430\u0439\u0442\u0435\u0441\u044c \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043a\u043e\u0434 \u0442\u0430\u043a, \u0447\u0442\u043e\u0431\u044b \u043e\u043d \u0431\u044b\u043b \u043f\u043e\u043d\u044f\u0442\u0435\u043d \u0438 \u0431\u0435\u0437 \u043d\u0438\u0445, \u043d\u043e \u0438 \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u043d\u0430 \u0447\u0442\u043e-\u0442\u043e \u043d\u0438\u0437\u043a\u043e\u0443\u0440\u043e\u0432\u043d\u0435\u0432\u043e\u0435, \u043f\u043e\u043d\u044f\u0442\u043d\u043e\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u043b\u0438\u0448\u044c \u0443\u0437\u043a\u043e\u043c\u0443 \u043a\u0440\u0443\u0433\u0443 \u043b\u044e\u0434\u0435\u0439 - \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e \u043f\u0438\u0441\u0430\u0442\u044c \u043d\u0443\u0436\u043d\u043e</li> </ul>"},{"location":"faq/contributing/","title":"\u041a\u043e\u043d\u0442\u0440\u0438\u0431\u044c\u044e\u0442\u0438\u043d\u0433 \u0432 \u043f\u0440\u043e\u0435\u043a\u0442 eebook","text":"<p>\u0414\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c \u0432 \u0433\u0430\u0439\u0434 \u0434\u043b\u044f \u043a\u043e\u043d\u0442\u0440\u0438\u0431\u044c\u044e\u0442\u043e\u0440\u043e\u0432! \u0417\u0434\u0435\u0441\u044c \u043e\u043f\u0438\u0441\u0430\u043d\u043e, \u043a\u0430\u043a \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e \u0443\u0447\u0430\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0432 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u0430, \u0447\u0442\u043e\u0431\u044b \u043a\u043e\u0434 \u0431\u044b\u043b \u0447\u0438\u0441\u0442\u044b\u043c, \u0442\u0435\u0441\u0442\u0438\u0440\u0443\u0435\u043c\u044b\u043c \u0438 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u0430\u043c.</p>"},{"location":"faq/contributing/#1","title":"1. \u041e\u0431\u0449\u0438\u0435 \u043f\u0440\u0430\u0432\u0438\u043b\u0430","text":"<ul> <li>\u0412\u0441\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0445\u043e\u0434\u044f\u0442 \u0447\u0435\u0440\u0435\u0437 Pull Request.</li> <li>\u041f\u0435\u0440\u0435\u0434 PR \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u044c \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u0443\u044e \u0432\u0435\u0442\u043a\u0443 \u0441 main: <pre><code>git checkout feature/your-feature\ngit fetch origin\ngit rebase origin/main\n</code></pre> PR \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0438\u043c \u0438 \u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438 \u0437\u0430\u0432\u0435\u0440\u0448\u0451\u043d\u043d\u044b\u043c. \u0412\u0441\u0435 \u043f\u0443\u0431\u043b\u0438\u0447\u043d\u044b\u0435 \u043c\u0435\u0442\u043e\u0434\u044b \u0438 \u043a\u043b\u0430\u0441\u0441\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0438\u043c\u0435\u0442\u044c \u0434\u043e\u043a\u0441\u0442\u0440\u0438\u043d\u0433\u0438. \u0421\u043e\u0431\u043b\u044e\u0434\u0430\u0435\u043c PEP8 / PSR-12 \u0438 \u0442\u0438\u043f\u0438\u0437\u0430\u0446\u0438\u044e. \u041f\u0435\u0440\u0435\u0434 PR \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u043c \u0442\u0435\u0441\u0442\u044b \u0438 \u043b\u0438\u043d\u0442\u0438\u043d\u0433: <pre><code>pre-commit run --all-files\npytest --cov=src\n</code></pre></li> </ul>"},{"location":"faq/contributing/#2","title":"2. \u0412\u0435\u0442\u043a\u0430 \u0438 \u043a\u043e\u043c\u043c\u0438\u0442\u044b","text":"<ul> <li> <p>\u041a\u0430\u0436\u0434\u0430\u044f \u043d\u043e\u0432\u0430\u044f \u0444\u0438\u0447\u0430/\u0438\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0432 \u0441\u0432\u043e\u0435\u0439 \u0432\u0435\u0442\u043a\u0435: <pre><code>feature/&lt;\u043a\u043e\u0440\u043e\u0442\u043a\u043e\u0435-\u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435&gt;\nbugfix/&lt;\u043a\u043e\u0440\u043e\u0442\u043a\u043e\u0435-\u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435&gt;\n</code></pre></p> </li> <li> <p>\u041a\u043e\u043c\u043c\u0438\u0442\u044b \u0432 \u0444\u043e\u0440\u043c\u0430\u0442\u0435 Conventional Commits: <pre><code>feat(auth): add JWT authentication\nfix(portfolio): correct income calculation\ndocs: update API docs\nrefactor(service_layer): simplify calculation logic\n</code></pre> \u041a\u043e\u043c\u043c\u0438\u0442\u044b \u0430\u0442\u043e\u043c\u0430\u0440\u043d\u044b\u0435: \u043e\u0434\u043d\u0430 \u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0437\u0430\u0434\u0430\u0447\u0430 = \u043e\u0434\u0438\u043d \u043a\u043e\u043c\u043c\u0438\u0442.</p> </li> </ul>"},{"location":"faq/contributing/#3-pull-request","title":"3. Pull Request","text":"<ul> <li>\u041d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 PR \u2014 \u043a\u0440\u0430\u0442\u043a\u043e\u0435 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0444\u0438\u0447\u0438 \u0438\u043b\u0438 \u0438\u0441\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f.</li> <li>\u0412 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0438 \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u043c:</li> <li> <ul> <li>\u0427\u0442\u043e \u0441\u0434\u0435\u043b\u0430\u043d\u043e</li> </ul> </li> <li> <ul> <li>\u0421\u0441\u044b\u043b\u043a\u0438 \u043d\u0430 \u0437\u0430\u0434\u0430\u0447\u0438/\u0442\u0438\u043a\u0435\u0442\u044b</li> </ul> </li> <li> <ul> <li>\u0427\u0442\u043e \u043f\u0440\u043e\u0432\u0435\u0440\u0435\u043d\u043e \u0432\u0440\u0443\u0447\u043d\u0443\u044e/\u0442\u0435\u0441\u0442\u0430\u043c\u0438</li> </ul> </li> <li>PR \u0434\u043e\u043b\u0436\u0435\u043d \u043f\u0440\u043e\u0439\u0442\u0438 Code Review \u0445\u043e\u0442\u044f \u0431\u044b \u043e\u0434\u043d\u043e\u0433\u043e \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430.</li> <li>\u041f\u043e\u0441\u043b\u0435 approval \u2014 merge \u0447\u0435\u0440\u0435\u0437 Squash and Merge \u0438\u043b\u0438 Rebase (\u043f\u043e \u0434\u043e\u0433\u043e\u0432\u043e\u0440\u0451\u043d\u043d\u043e\u0441\u0442\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u044b).</li> </ul>"},{"location":"faq/contributing/#4","title":"4. \u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439","text":"<ul> <li>\u041b\u044e\u0431\u0430\u044f \u0431\u0438\u0437\u043d\u0435\u0441-\u043b\u043e\u0433\u0438\u043a\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u043f\u043e\u043a\u0440\u044b\u0442\u0430 unit-\u0442\u0435\u0441\u0442\u0430\u043c\u0438.</li> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c pytest, \u0444\u0438\u043a\u0441\u0442\u0443\u0440\u044b \u0434\u043b\u044f \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445.</li> <li>\u0414\u043b\u044f \u0440\u0430\u0431\u043e\u0442\u044b \u0441 \u0432\u043d\u0435\u0448\u043d\u0438\u043c\u0438 \u0441\u0435\u0440\u0432\u0438\u0441\u0430\u043c\u0438 (DB, Vault) \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c mocking / fixtures.</li> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c \u043f\u043e\u043a\u0440\u044b\u0442\u0438\u0435: \u043c\u0438\u043d\u0438\u043c\u0443\u043c 60% \u0434\u043b\u044f \u043c\u0435\u0440\u0436\u0435\u0439 \u0432 main.</li> </ul>"},{"location":"faq/contributing/#5","title":"5. \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439","text":"<ul> <li>\u0415\u0441\u043b\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0430 \u043d\u043e\u0432\u0430\u044f \u043f\u0443\u0431\u043b\u0438\u0447\u043d\u0430\u044f \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0438\u043b\u0438 \u043a\u043b\u0430\u0441\u0441 \u2014 \u043f\u0438\u0448\u0435\u043c \u0434\u043e\u043a\u0441\u0442\u0440\u0438\u043d\u0433\u0438.</li> <li>\u0415\u0441\u043b\u0438 API \u0438\u0437\u043c\u0435\u043d\u0438\u043b\u043e\u0441\u044c \u2014 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c API-\u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e (MkDocs + mkdocstrings).</li> <li>README \u0438\u043b\u0438 \u0434\u0440\u0443\u0433\u0438\u0435 \u0433\u0430\u0439\u0434\u044b \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0435\u043c \u043f\u0440\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438.</li> </ul>"},{"location":"faq/contributing/#6","title":"6. \u0421\u0442\u0438\u043b\u044c \u0438 \u043b\u0443\u0447\u0448\u0438\u0435 \u043f\u0440\u0430\u043a\u0442\u0438\u043a\u0438","text":"<ul> <li>Clean Architecture / DDD: \u0441\u043e\u0431\u043b\u044e\u0434\u0430\u0435\u043c \u0441\u043b\u043e\u0438, \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u0432\u043d\u0443\u0442\u0440\u044c.</li> <li>KISS \u0438 DRY: \u043f\u0440\u043e\u0441\u0442\u043e\u0442\u0430 \u0438 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u0438\u0435 \u0434\u0443\u0431\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f.</li> <li>\u041c\u0438\u043d\u0438\u043c\u0438\u0437\u0438\u0440\u0443\u0435\u043c \u043f\u043e\u0431\u043e\u0447\u043d\u044b\u0435 \u044d\u0444\u0444\u0435\u043a\u0442\u044b: \u0444\u0443\u043d\u043a\u0446\u0438\u0438 \u0438 \u043c\u0435\u0442\u043e\u0434\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0434\u0435\u0442\u0435\u0440\u043c\u0438\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u043c\u0438.</li> <li>\u041b\u043e\u0433\u0438\u043a\u0430 \u0431\u0438\u0437\u043d\u0435\u0441-\u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0435\u0439 \u0442\u043e\u043b\u044c\u043a\u043e \u0432 domain / service_layer.</li> <li>\u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0432\u043d\u0435\u0448\u043d\u0438\u043c\u0438 \u0441\u0438\u0441\u0442\u0435\u043c\u0430\u043c\u0438 \u0447\u0435\u0440\u0435\u0437 \u0430\u0434\u0430\u043f\u0442\u0435\u0440\u044b (adapters) \u0438 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b.</li> </ul>"},{"location":"faq/contributing/#7","title":"7. \u041e\u0431\u0449\u0435\u043d\u0438\u0435 \u0438 \u043f\u043e\u043c\u043e\u0449\u044c","text":"<ul> <li>\u0412\u043e\u043f\u0440\u043e\u0441\u044b \u043f\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0443 \u2014 \u0447\u0435\u0440\u0435\u0437 \u0442\u0438\u043a\u0435\u0442\u044b \u0438\u043b\u0438 internal \u0447\u0430\u0442.</li> <li>\u041d\u0435 \u0441\u0442\u0435\u0441\u043d\u044f\u0435\u043c\u0441\u044f \u0434\u0435\u043b\u0430\u0442\u044c \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0438\u0435 PR \u0438 \u0441\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0442\u044c \u0441\u043e\u0432\u0435\u0442\u044b.</li> <li>\u0412\u0441\u0435 \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u0438 \u0441\u043b\u0435\u0434\u044f\u0442 \u0437\u0430 \u0435\u0434\u0438\u043d\u043e\u043e\u0431\u0440\u0430\u0437\u0438\u0435\u043c \u043a\u043e\u0434\u0430 \u0438 \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u044b.</li> </ul> <p>\u0421\u043e\u0432\u0435\u0442: \u043f\u0435\u0440\u0435\u0434 \u043b\u044e\u0431\u044b\u043c PR \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0447\u0442\u043e \u043b\u0438\u043d\u0442\u0435\u0440 \u043d\u0435 \u0440\u0443\u0433\u0430\u0435\u0442\u0441\u044f, \u0442\u0435\u0441\u0442\u044b \u043f\u0440\u043e\u0445\u043e\u0434\u044f\u0442, \u0438 \u0432\u0441\u0435 \u0441\u043b\u043e\u0438 \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u044b \u0441\u043e\u0431\u043b\u044e\u0434\u0435\u043d\u044b.</p>"},{"location":"faq/git_commits/","title":"Git, \u043a\u043e\u043c\u043c\u0438\u0442\u044b \u0438 Pull Request","text":""},{"location":"faq/git_commits/#_1","title":"\u041a\u043e\u043c\u043c\u0438\u0442\u044b","text":"<ul> <li>\u0424\u043e\u0440\u043c\u0430\u0442: Conventional Commits <pre><code>feat(portfolio): add portfolio analytics\nfix(api): correct asset calculation\ndocs: update API docs\n</code></pre></li> <li>\u041a\u0430\u0436\u0434\u044b\u0439 \u043a\u043e\u043c\u043c\u0438\u0442 \u2014 \u0430\u0442\u043e\u043c\u0430\u0440\u043d\u043e\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435</li> </ul>"},{"location":"faq/git_commits/#pull-request","title":"Pull Request","text":"<ul> <li>PR \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u0438\u0439, \u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438 \u0437\u0430\u0432\u0435\u0440\u0448\u0451\u043d\u043d\u044b\u0439</li> <li>\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0438 \u0441\u0441\u044b\u043b\u043a\u0438 \u043d\u0430 \u0437\u0430\u0434\u0430\u0447\u0438/\u0442\u0438\u043a\u0435\u0442\u044b</li> <li>Code review \u043f\u0435\u0440\u0435\u0434 merge</li> </ul>"},{"location":"faq/testing/","title":"\u0422\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435","text":"<ul> <li>Unit-\u0442\u0435\u0441\u0442\u044b: <code>pytest</code></li> <li>API-\u0442\u0435\u0441\u0442\u044b \u0447\u0435\u0440\u0435\u0437 <code>TestClient</code> FastAPI</li> <li>CI \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u0442 \u043f\u043e\u043a\u0440\u044b\u0442\u0438\u0435 &gt;=60%</li> <li>Fixtures \u0434\u043b\u044f \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u0430\u043d\u043d\u044b\u0445</li> <li>Mocking \u0432\u043d\u0435\u0448\u043d\u0438\u0445 \u0441\u0435\u0440\u0432\u0438\u0441\u043e\u0432</li> </ul>"},{"location":"installation/guide/","title":"\u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430","text":"<p>cooming soon..</p>"},{"location":"troubleshooting/start/","title":"\u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043f\u043e \u0443\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0438\u044e \u043d\u0435\u043f\u043e\u043b\u0430\u0434\u043e\u043a \u043f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u0430","text":"<p>\u0412 \u044d\u0442\u043e\u043c \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0435 \u0441\u043e\u0431\u0440\u0430\u043d\u044b \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0451\u043d\u043d\u044b\u0435 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b, \u0441 \u043a\u043e\u0442\u043e\u0440\u044b\u043c\u0438 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u0442\u043e\u043b\u043a\u043d\u0443\u0442\u044c\u0441\u044f \u043f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 \u043f\u0440\u043e\u0435\u043a\u0442\u0430, \u0438 \u0441\u043f\u043e\u0441\u043e\u0431\u044b \u0438\u0445 \u0440\u0435\u0448\u0435\u043d\u0438\u044f.</p>"},{"location":"troubleshooting/start/#_2","title":"\u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435","text":"<ul> <li>\u041f\u0440\u043e\u0431\u043b\u0435\u043c\u044b \u0441 \u0431\u0430\u0437\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445</li> </ul>"},{"location":"troubleshooting/start/#_3","title":"\u041f\u0440\u043e\u0431\u043b\u0435\u043c\u044b \u0441 \u0431\u0430\u0437\u043e\u0439 \u0434\u0430\u043d\u043d\u044b\u0445","text":""},{"location":"troubleshooting/start/#1-postgresql-docker","title":"1. \u041e\u0448\u0438\u0431\u043a\u0430 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 PostgreSQL \u0432 Docker","text":"<p>\u0421\u0438\u043c\u043f\u0442\u043e\u043c\u044b: <pre><code>postgres-1 | Error: Database is uninitialized and superuser password is not specified.\n</code></pre></p> <p>\u041f\u0440\u0438\u0447\u0438\u043d\u0430: \u041f\u0440\u0438 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0432 Docker-\u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u0438\u0437 Vault \u0435\u0449\u0451 \u043d\u0435 \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u044b, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 Docker \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 PostgreSQL.</p> <p>\u0420\u0435\u0448\u0435\u043d\u0438\u0435: 1. \u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u0432 <code>docker-compose.yml</code> \u0434\u043b\u044f \u0441\u0435\u0440\u0432\u0438\u0441\u0430 PostgreSQL \u044f\u0432\u043d\u043e\u0435 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u043e\u043a\u0440\u0443\u0436\u0435\u043d\u0438\u044f:    <pre><code>services:\n  postgres:\n    image: postgres:13\n    environment:\n      POSTGRES_USER: your_username\n      POSTGRES_PASSWORD: your_secure_password\n      POSTGRES_DB: your_database_name\n    volumes:\n      - postgres_data:/var/lib/postgresql/data\n\nvolumes:\n  postgres_data:\n</code></pre></p> <ol> <li>\u041f\u0435\u0440\u0435\u0441\u043e\u0431\u0435\u0440\u0438\u0442\u0435 \u0438 \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u043a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440\u044b:    <pre><code>docker-compose down -v\nmake up\n</code></pre></li> </ol>"},{"location":"troubleshooting/start/#_4","title":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u043e\u043c\u043e\u0449\u0438","text":"<p>\u0415\u0441\u043b\u0438 \u0432\u044b \u043d\u0435 \u043d\u0430\u0448\u043b\u0438 \u0440\u0435\u0448\u0435\u043d\u0438\u0435 \u0441\u0432\u043e\u0435\u0439 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b \u0432 \u044d\u0442\u043e\u043c \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0435, \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435:</p> <ol> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c Issues \u043d\u0430 GitHub</li> <li>\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 Issue \u0441 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435\u043c \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b</li> <li>\u0423\u043a\u0430\u0437\u0430\u0442\u044c \u0432\u0435\u0440\u0441\u0438\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u043e\u0433\u043e \u041f\u041e</li> <li>\u041f\u0440\u0438\u043b\u043e\u0436\u0438\u0442\u044c \u043b\u043e\u0433\u0438 \u043e\u0448\u0438\u0431\u043e\u043a</li> <li>\u041e\u043f\u0438\u0441\u0430\u0442\u044c \u0448\u0430\u0433\u0438 \u0434\u043b\u044f \u0432\u043e\u0441\u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b</li> </ol>"}]}